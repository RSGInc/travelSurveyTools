% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/join_spatial.R
\name{join_spatial}
\alias{join_spatial}
\title{Join spatial data to points}
\usage{
join_spatial(
  x,
  y,
  id_col,
  lon_col,
  lat_col,
  crs_lonlat = 4326,
  crs_equal_area = 5070,
  largest = FALSE
)
}
\arguments{
\item{x}{A data.table of survey data}

\item{y}{an \code{sf} object with the geometry of interest}

\item{id_col}{character. The column in \code{x} that is a unique identifier}

\item{lon_col}{character. The column in \code{x} that has longitude}

\item{lat_col}{character.  The column in \code{x} that has latitude}

\item{crs_lonlat}{numeric.  The EPSG code for lonlat data (defaults to WGS84)}

\item{crs_equal_area}{numeric.  The EPSG code for an equal area projection.
Many spatial operations assume projected data (not lon/lat).  Defaults to US
Albers Equal Area}

\item{largest}{logical.  If \code{TRUE}, return \code{x}
features with fields of \code{y} that have the largest overlap with each of
the features of \code{x}; see \code{\link[sf]{st_join}}. This is useful if
join is returning more than one value of y for each x.}
}
\value{
A data.table is returned with all columns from x plus all columns
from y.
}
\description{
Performs a spatial join to obtain geographic fields for specified lon/lat
columns.
}
\examples{
\dontrun{
x = data.table(id = 1:3, lon=c(-82.33, -79.17, -76.17), lat = c(35.50, 36.27, 36.49))
nc = st_read(system.file('shape/nc.shp', package='sf'))[, c('FIPS', 'NAME', 'geometry')]
z = join_spatial(x, nc, id_col='id', lon_col = 'lon', lat_col = 'lat')
z}

}
\author{
Matt Landis
}
