[{"path":"https://rsginc.github.io/travelSurveyTools/articles/a01_getting_started.html","id":"about-travelsurveytools","dir":"Articles","previous_headings":"","what":"About TravelSurveyTools","title":"Getting Started","text":"travelSurveyTools package provides tools R users aid use data household travel surveys. possible uses include creating custom cross tabs, labeling data, calculating trip rates.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/articles/a01_getting_started.html","id":"data-assumptions","dir":"Articles","previous_headings":"","what":"Data Assumptions","title":"Getting Started","text":"travelSurveyTools assumes data structure shown .","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/articles/a01_getting_started.html","id":"hts_data","dir":"Articles","previous_headings":"Data Assumptions","what":"hts_data","title":"Getting Started","text":"hts_data list five core tables:","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/articles/a01_getting_started.html","id":"hh","dir":"Articles","previous_headings":"Data Assumptions > hts_data","what":"hh","title":"Getting Started","text":"Household dataset hh_id: household ID survey variables asked household level hh_weight: household weight","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/articles/a01_getting_started.html","id":"person","dir":"Articles","previous_headings":"Data Assumptions > hts_data","what":"person","title":"Getting Started","text":"Person dataset hh_id: household ID person_id: person ID survey variables asked person level person_weight: person weight","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/articles/a01_getting_started.html","id":"day","dir":"Articles","previous_headings":"Data Assumptions > hts_data","what":"day","title":"Getting Started","text":"Day dataset hh_id: household ID person_id: person ID day_id: day ID survey variable asked day level day_weight: day weight","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/articles/a01_getting_started.html","id":"trip","dir":"Articles","previous_headings":"Data Assumptions > hts_data","what":"trip","title":"Getting Started","text":"Trip dataset hh_id: household ID person_id: person ID day_id: day ID trip_id: trip ID survey variables asked trip level trip_weight: trip weight","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/articles/a01_getting_started.html","id":"vehicle","dir":"Articles","previous_headings":"Data Assumptions > hts_data","what":"vehicle","title":"Getting Started","text":"Vehicle dataset hh_id: household ID vehicle_id: vehicle ID survey responses asked vehicle level hh_weight: household weight","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/articles/a01_getting_started.html","id":"codebook","dir":"Articles","previous_headings":"Data Assumptions","what":"Codebook","title":"Getting Started","text":"addition data household travel survey. codebook also required. codebook assumed two parts:","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/articles/a01_getting_started.html","id":"variable_list","dir":"Articles","previous_headings":"Data Assumptions > Codebook","what":"variable_list","title":"Getting Started","text":"dataset containing information variables existing hh, person, day, trip, vehicle tables. variables follows: variable: Name variable is_checkbox: variable multiple response categorical variable question (multiple mrcv variable) hh: variable exists hh table person: variable exists person table day: variable exists day table trip: variable exists trip table vehicle: variable exists vehicle table location: variable exists location table data_type: Data type variable description: description variable logic: Conditions variable value shared_name: shared name multiple response categorical variable variable variable name non-multiple response categorical variable variables","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/articles/a01_getting_started.html","id":"value_labels","dir":"Articles","previous_headings":"Data Assumptions > Codebook","what":"value_labels","title":"Getting Started","text":"dataset containing values variables found variable_list variables follows: variable: Name variable value: numeric value variable label: numeric value variable represents label_value: value concatenated label (e.g., 11 85 older) val_order: order variable label appear ","code":""},{"path":[]},{"path":"https://rsginc.github.io/travelSurveyTools/articles/a01_getting_started.html","id":"prepping-the-data","dir":"Articles","previous_headings":"Using travelSurveyTools","what":"Prepping the Data","title":"Getting Started","text":"order create summaries data first need prepare data. can using hts_prep_variable. return categorical (cat) numeric (num) (applicable) prepped data table can used create summaries. Numeric variables automatically binned hts_prep_variable create categorical summaries. can make categorical summary numeric variable using hts_summary. Additionally, numeric variables can create numeric summaries.","code":"library(travelSurveyTools) library(data.table)  # Load data data(\"test_data\") data(\"variable_list\") data(\"value_labels\")  speed_list = hts_prep_variable(   summarize_var = \"speed_mph\",   variables_dt = variable_list,   data = test_data ) speed_cat_summary = hts_summary(   prepped_dt = speed_list$cat,   summarize_var = \"speed_mph\",   summarize_by = NULL,   summarize_vartype = \"categorical\",   weighted = FALSE )  speed_cat_summary$summary ## $unwtd ##     speed_mph count       prop ## 1:  1 or less   635 0.04313273 ## 2:       1-10  7289 0.49510936 ## 3:      10-19  3618 0.24575465 ## 4:      19-28  1819 0.12355658 ## 5:      28-37   726 0.04931395 ## 6:      37-44   285 0.01935878 ## 7: 44 or more   350 0.02377394 speed_num_summary = hts_summary(   prepped_dt = speed_list$num,   summarize_var = \"speed_mph\",   summarize_by = NULL,   summarize_vartype = \"numeric\",   weighted = FALSE )  speed_num_summary$summary ## $unwtd ##    count min      max     mean   median ## 1: 14722   0 112.5371 12.27017 8.914392"},{"path":"https://rsginc.github.io/travelSurveyTools/articles/a01_getting_started.html","id":"using-weighted-data","dir":"Articles","previous_headings":"Using travelSurveyTools","what":"Using Weighted Data","title":"Getting Started","text":"Additionally, can use weighted data setting weighted = TRUE specifying name weight used (wtname).","code":"speed_cat_summary = hts_summary(   prepped_dt = speed_list$cat,   summarize_var = \"speed_mph\",   summarize_by = NULL,   summarize_vartype = \"categorical\",   weighted = TRUE,   wtname = \"trip_weight\" )  speed_cat_summary$summary ## $unwtd ##     speed_mph count       prop ## 1:  1 or less   635 0.04313273 ## 2:       1-10  7289 0.49510936 ## 3:      10-19  3618 0.24575465 ## 4:      19-28  1819 0.12355658 ## 5:      28-37   726 0.04931395 ## 6:      37-44   285 0.01935878 ## 7: 44 or more   350 0.02377394 ##  ## $wtd ##     speed_mph count       prop     est ## 1:  1 or less   635 0.04225006  314952 ## 2:       1-10  7289 0.49882701 3718493 ## 3:      10-19  3618 0.24538136 1829189 ## 4:      19-28  1819 0.12194475  909034 ## 5:      28-37   726 0.04891599  364643 ## 6:      37-44   285 0.02049065  152747 ## 7: 44 or more   350 0.02219016  165416 ##  ## $weight_name ## [1] \"trip_weight\""},{"path":"https://rsginc.github.io/travelSurveyTools/articles/a01_getting_started.html","id":"calculating-standard-errors","dir":"Articles","previous_headings":"Using travelSurveyTools","what":"Calculating Standard Errors","title":"Getting Started","text":"Additionally, specifying se = TRUE can calculate standard errors.","code":"speed_cat_summary = hts_summary(   prepped_dt = speed_list$cat,   summarize_var = \"speed_mph\",   summarize_by = NULL,   summarize_vartype = \"categorical\",   weighted = TRUE,   wtname = \"trip_weight\",   se = TRUE )  speed_cat_summary$summary ## $unwtd ##     speed_mph count       prop ## 1:  1 or less   635 0.04313273 ## 2:       1-10  7289 0.49510936 ## 3:      10-19  3618 0.24575465 ## 4:      19-28  1819 0.12355658 ## 5:      28-37   726 0.04931395 ## 6:      37-44   285 0.01935878 ## 7: 44 or more   350 0.02377394 ##  ## $wtd ##     speed_mph count       prop     prop_se     est   est_se ## 1:  1 or less   635 0.04225006 0.001886624  314952 14128.27 ## 2:       1-10  7289 0.49882701 0.004730868 3718493 39396.65 ## 3:      10-19  3618 0.24538136 0.004073123 1829189 31541.65 ## 4:      19-28  1819 0.12194475 0.003087738  909034 23382.12 ## 5:      28-37   726 0.04891599 0.002026164  364643 15186.92 ## 6:      37-44   285 0.02049065 0.001361407  152747 10179.97 ## 7: 44 or more   350 0.02219016 0.001373240  165416 10258.47 ##  ## $weight_name ## [1] \"trip_weight\""},{"path":"https://rsginc.github.io/travelSurveyTools/articles/a01_getting_started.html","id":"summarizing-two-variables","dir":"Articles","previous_headings":"Using travelSurveyTools","what":"Summarizing Two Variables","title":"Getting Started","text":"want summarize variable another variable (e.g., mode type person’s race, mode_type person’s ethnicity, age study year) can use summarize_by argument. want summarize multiple response categorical variable (mrcv multiple), can set summarize_vartype checkbox. summarize_by can used unlimited amount variables. use one summarize_by variable pass vector argument.","code":"mode_type_list = hts_prep_variable(   summarize_var = \"mode_type\",   summarize_by = \"race\",   variables_dt = variable_list,   data = test_data )  mode_by_race_summary = hts_summary(   prepped_dt = mode_type_list$cat,   summarize_var = \"mode_type\",   summarize_by = \"race\",   summarize_vartype = \"categorical\",   weighted = TRUE,   wtname = \"trip_weight\",   se = TRUE )   mode_by_race_summary$summary ## $unwtd ##                                          race mode_type count         prop ##  1:                 African American or Black         1    22 0.2222222222 ##  2:                 African American or Black         2     3 0.0303030303 ##  3:                 African American or Black         8    68 0.6868686869 ##  4:                 African American or Black        13     6 0.0606060606 ##  5:          American Indian or Alaska Native         1    23 0.2555555556 ##  6:          American Indian or Alaska Native         2     3 0.0333333333 ##  7:          American Indian or Alaska Native         5     1 0.0111111111 ##  8:          American Indian or Alaska Native         6     1 0.0111111111 ##  9:          American Indian or Alaska Native         8    57 0.6333333333 ## 10:          American Indian or Alaska Native        10     2 0.0222222222 ## 11:          American Indian or Alaska Native        11     1 0.0111111111 ## 12:          American Indian or Alaska Native        13     2 0.0222222222 ## 13:                                     Asian         1    46 0.2705882353 ## 14:                                     Asian         2     4 0.0235294118 ## 15:                                     Asian         6     1 0.0058823529 ## 16:                                     Asian         7     1 0.0058823529 ## 17:                                     Asian         8   104 0.6117647059 ## 18:                                     Asian        10     3 0.0176470588 ## 19:                                     Asian        11     1 0.0058823529 ## 20:                                     Asian        13    10 0.0588235294 ## 21: Native Hawaiian or other Pacific Islander         1    43 0.2544378698 ## 22: Native Hawaiian or other Pacific Islander         2     7 0.0414201183 ## 23: Native Hawaiian or other Pacific Islander         6     2 0.0118343195 ## 24: Native Hawaiian or other Pacific Islander         7     1 0.0059171598 ## 25: Native Hawaiian or other Pacific Islander         8   106 0.6272189349 ## 26: Native Hawaiian or other Pacific Islander        11     1 0.0059171598 ## 27: Native Hawaiian or other Pacific Islander        13     9 0.0532544379 ## 28:                                     White         1    45 0.2941176471 ## 29:                                     White         2     4 0.0261437908 ## 30:                                     White         4     1 0.0065359477 ## 31:                                     White         6     2 0.0130718954 ## 32:                                     White         8    90 0.5882352941 ## 33:                                     White        13    11 0.0718954248 ## 34:                               Two or more         1  2058 0.2920391656 ## 35:                               Two or more         2   148 0.0210018448 ## 36:                               Two or more         3     3 0.0004257131 ## 37:                               Two or more         4    20 0.0028380871 ## 38:                               Two or more         5     4 0.0005676174 ## 39:                               Two or more         6    36 0.0051085568 ## 40:                               Two or more         7    40 0.0056761743 ## 41:                               Two or more         8  4299 0.6100468284 ## 42:                               Two or more        10    36 0.0051085568 ## 43:                               Two or more        11    28 0.0039733220 ## 44:                               Two or more        12     6 0.0008514261 ## 45:                               Two or more        13   355 0.0503760465 ## 46:                               Two or more        14    14 0.0019866610 ## 47:                                Other race         1    28 0.3146067416 ## 48:                                Other race         6     1 0.0112359551 ## 49:                                Other race         8    53 0.5955056180 ## 50:                                Other race        10     2 0.0224719101 ## 51:                                Other race        13     5 0.0561797753 ## 52:                      Prefer not to answer         1  2176 0.2918846412 ## 53:                      Prefer not to answer         2   183 0.0245472837 ## 54:                      Prefer not to answer         3     9 0.0012072435 ## 55:                      Prefer not to answer         4    22 0.0029510396 ## 56:                      Prefer not to answer         5     3 0.0004024145 ## 57:                      Prefer not to answer         6    43 0.0057679410 ## 58:                      Prefer not to answer         7    43 0.0057679410 ## 59:                      Prefer not to answer         8  4456 0.5977196512 ## 60:                      Prefer not to answer        10    51 0.0068410463 ## 61:                      Prefer not to answer        11    22 0.0029510396 ## 62:                      Prefer not to answer        12     6 0.0008048290 ## 63:                      Prefer not to answer        13   425 0.0570087190 ## 64:                      Prefer not to answer        14    16 0.0021462106 ##                                          race mode_type count         prop ##  ## $wtd ##                                          race mode_type count         prop ##  1:                 African American or Black         1    22 0.2425302553 ##  2:                 African American or Black         2     3 0.0322180413 ##  3:                 African American or Black         8    68 0.6657378216 ##  4:                 African American or Black        13     6 0.0595138818 ##  5:          American Indian or Alaska Native         1    23 0.2377237162 ##  6:          American Indian or Alaska Native         2     3 0.0464969871 ##  7:          American Indian or Alaska Native         5     1 0.0064529184 ##  8:          American Indian or Alaska Native         6     1 0.0122088317 ##  9:          American Indian or Alaska Native         8    57 0.6401879665 ## 10:          American Indian or Alaska Native        10     2 0.0240129508 ## 11:          American Indian or Alaska Native        11     1 0.0215621908 ## 12:          American Indian or Alaska Native        13     2 0.0113544383 ## 13:                                     Asian         1    46 0.2677774299 ## 14:                                     Asian         2     4 0.0178672881 ## 15:                                     Asian         6     1 0.0057161409 ## 16:                                     Asian         7     1 0.0007536494 ## 17:                                     Asian         8   104 0.6057138219 ## 18:                                     Asian        10     3 0.0213688592 ## 19:                                     Asian        11     1 0.0104699294 ## 20:                                     Asian        13    10 0.0703328811 ## 21: Native Hawaiian or other Pacific Islander         1    43 0.2519546682 ## 22: Native Hawaiian or other Pacific Islander         2     7 0.0575492058 ## 23: Native Hawaiian or other Pacific Islander         6     2 0.0097055320 ## 24: Native Hawaiian or other Pacific Islander         7     1 0.0047996981 ## 25: Native Hawaiian or other Pacific Islander         8   106 0.6093847660 ## 26: Native Hawaiian or other Pacific Islander        11     1 0.0097998750 ## 27: Native Hawaiian or other Pacific Islander        13     9 0.0568062549 ## 28:                                     White         1    45 0.2736028717 ## 29:                                     White         2     4 0.0297990108 ## 30:                                     White         4     1 0.0128238502 ## 31:                                     White         6     2 0.0193727822 ## 32:                                     White         8    90 0.5994327912 ## 33:                                     White        13    11 0.0649686939 ## 34:                               Two or more         1  2058 0.2915903665 ## 35:                               Two or more         2   148 0.0193177986 ## 36:                               Two or more         3     3 0.0002755179 ## 37:                               Two or more         4    20 0.0034360184 ## 38:                               Two or more         5     4 0.0009396083 ## 39:                               Two or more         6    36 0.0053118852 ## 40:                               Two or more         7    40 0.0052803416 ## 41:                               Two or more         8  4299 0.6102537891 ## 42:                               Two or more        10    36 0.0057560078 ## 43:                               Two or more        11    28 0.0039066600 ## 44:                               Two or more        12     6 0.0008086884 ## 45:                               Two or more        13   355 0.0509043799 ## 46:                               Two or more        14    14 0.0022189382 ## 47:                                Other race         1    28 0.3300569182 ## 48:                                Other race         6     1 0.0121151165 ## 49:                                Other race         8    53 0.5754451734 ## 50:                                Other race        10     2 0.0096463758 ## 51:                                Other race        13     5 0.0727364162 ## 52:                      Prefer not to answer         1  2176 0.2901116906 ## 53:                      Prefer not to answer         2   183 0.0250127937 ## 54:                      Prefer not to answer         3     9 0.0008927077 ## 55:                      Prefer not to answer         4    22 0.0023674661 ## 56:                      Prefer not to answer         5     3 0.0004499353 ## 57:                      Prefer not to answer         6    43 0.0059550102 ## 58:                      Prefer not to answer         7    43 0.0054772192 ## 59:                      Prefer not to answer         8  4456 0.5990344431 ## 60:                      Prefer not to answer        10    51 0.0066169138 ## 61:                      Prefer not to answer        11    22 0.0030776528 ## 62:                      Prefer not to answer        12     6 0.0008958912 ## 63:                      Prefer not to answer        13   425 0.0587054120 ## 64:                      Prefer not to answer        14    16 0.0014028643 ##                                          race mode_type count         prop ##          prop_se     est     est_se ##  1: 0.0488793701   11924  2760.2835 ##  2: 0.0192747891    1584   961.7070 ##  3: 0.0538431192   32731  4557.6808 ##  4: 0.0278595569    2926  1415.2034 ##  5: 0.0489623011   10573  2431.3038 ##  6: 0.0265355469    2068  1210.9162 ##  7: 0.0064587476     287   287.0000 ##  8: 0.0121494434     543   543.0000 ##  9: 0.0568590617   28473  4415.2742 ## 10: 0.0171042374    1068   768.2942 ## 11: 0.0212536599     959   959.0000 ## 12: 0.0089016245     505   395.6596 ## 13: 0.0390288610   23095  3939.9840 ## 14: 0.0108784324    1541   945.4068 ## 15: 0.0057056370     493   493.0000 ## 16: 0.0007560023      65    65.0000 ## 17: 0.0430582623   52241  5824.9319 ## 18: 0.0128200078    1843  1117.8535 ## 19: 0.0104007037     903   903.0000 ## 20: 0.0233047946    6066  2090.2978 ## 21: 0.0388570716   21365  3803.6897 ## 22: 0.0228735703    4880  2008.4349 ## 23: 0.0071925215     823   611.3568 ## 24: 0.0047960813     407   407.0000 ## 25: 0.0440034185   51674  5845.4095 ## 26: 0.0097433256     831   831.0000 ## 27: 0.0217247910    4817  1901.8419 ## 28: 0.0409308580   19970  3464.8052 ## 29: 0.0159829589    2175  1184.4750 ## 30: 0.0127152614     936   936.0000 ## 31: 0.0136901767    1414  1010.1692 ## 32: 0.0457651407   43752  5263.5573 ## 33: 0.0239756794    4742  1814.6243 ## 34: 0.0062024440 1044577 25013.0886 ## 35: 0.0018149697   69203  6536.9674 ## 36: 0.0001992965     987   713.9738 ## 37: 0.0008360485   12309  2998.9750 ## 38: 0.0004717023    3366  1690.5458 ## 39: 0.0009889333   19029  3548.7518 ## 40: 0.0009940850   18916  3567.4116 ## 41: 0.0066548054 2186139 33829.8317 ## 42: 0.0010634803   20620  3817.7647 ## 43: 0.0008631699   13995  3096.3278 ## 44: 0.0003923923    2897  1406.0707 ## 45: 0.0030039411  182357 10947.9882 ## 46: 0.0006557321    7949  2350.8972 ## 47: 0.0573116049   14439  3049.7214 ## 48: 0.0120592582     530   530.0000 ## 49: 0.0604560934   25174  4056.9946 ## 50: 0.0088957777     422   389.4846 ## 51: 0.0338891184    3182  1547.2956 ## 52: 0.0060416540 1093556 25527.6793 ## 53: 0.0020680881   94284  7856.6878 ## 54: 0.0003637299    3365  1371.2763 ## 55: 0.0005670664    8924  2138.0610 ## 56: 0.0003045156    1696  1148.0627 ## 57: 0.0010522269   22447  3974.6248 ## 58: 0.0009766971   20646  3687.7976 ## 59: 0.0065250441 2258019 34349.4918 ## 60: 0.0010559060   24942  3987.6756 ## 61: 0.0007423448   11601  2801.0127 ## 62: 0.0004094685    3377  1543.9496 ## 63: 0.0031475192  221286 12101.0995 ## 64: 0.0004001287    5288  1508.1227 ##          prop_se     est     est_se ##  ## $weight_name ## [1] \"trip_weight\" if (FALSE) {   age_study_year_list = hts_prep_variable(     summarize_var = \"age\",     summarize_by = \"study_year\",     variables_dt = variable_list,     data = test_data   )    mode_by_race_summary = hts_summary(     prepped_dt = age_study_year_list$cat,     summarize_var = \"age\",     summarize_by = \"study_year\",     summarize_vartype = \"categorical\",     weighted = TRUE,     wtname = \"trip_weight\",     se = TRUE   ) } race_list = hts_prep_variable(   summarize_var = \"race\",   summarize_by = \"mode_type\",   variables_dt = variable_list,   data = test_data )  mode_by_race_summary = hts_summary(   prepped_dt = race_list$cat,   summarize_var = \"race\",   summarize_by = \"mode_type\",   summarize_vartype = \"checkbox\",   weighted = TRUE,   wtname = \"trip_weight\",   se = TRUE )   mode_by_race_summary$summary ## $unwtd ##     mode_type                                      race count       prop ##  1:         1                 African American or Black  1173 0.26072461 ##  2:         1          American Indian or Alaska Native  1149 0.25539009 ##  3:         1                                     Asian  1095 0.24338742 ##  4:         1 Native Hawaiian or other Pacific Islander  1145 0.25450100 ##  5:         1                                     White  1188 0.26405868 ##  6:         1                                Other race  1150 0.25561236 ##  7:         1                      Prefer not to answer  2176 0.48366304 ##  8:         2                 African American or Black    79 0.22005571 ##  9:         2          American Indian or Alaska Native    78 0.21727019 ## 10:         2                                     Asian    68 0.18941504 ## 11:         2 Native Hawaiian or other Pacific Islander    94 0.26183844 ## 12:         2                                     White    87 0.24233983 ## 13:         2                                Other race    85 0.23676880 ## 14:         2                      Prefer not to answer   183 0.50974930 ## 15:         3          American Indian or Alaska Native     2 0.16666667 ## 16:         3                                     Asian     1 0.08333333 ## 17:         3 Native Hawaiian or other Pacific Islander     1 0.08333333 ## 18:         3                                     White     2 0.16666667 ## 19:         3                                Other race     1 0.08333333 ## 20:         3                      Prefer not to answer     9 0.75000000 ## 21:         4                 African American or Black     9 0.20454545 ## 22:         4          American Indian or Alaska Native    11 0.25000000 ## 23:         4                                     Asian    11 0.25000000 ## 24:         4 Native Hawaiian or other Pacific Islander     9 0.20454545 ## 25:         4                                     White    10 0.22727273 ## 26:         4                                Other race    10 0.22727273 ## 27:         4                      Prefer not to answer    22 0.50000000 ## 28:         5                 African American or Black     2 0.25000000 ## 29:         5          American Indian or Alaska Native     2 0.25000000 ## 30:         5                                     Asian     2 0.25000000 ## 31:         5 Native Hawaiian or other Pacific Islander     3 0.37500000 ## 32:         5                                     White     1 0.12500000 ## 33:         5                                Other race     2 0.25000000 ## 34:         5                      Prefer not to answer     3 0.37500000 ## 35:         6                 African American or Black    24 0.27586207 ## 36:         6          American Indian or Alaska Native    21 0.24137931 ## 37:         6                                     Asian    17 0.19540230 ## 38:         6 Native Hawaiian or other Pacific Islander    18 0.20689655 ## 39:         6                                     White    16 0.18390805 ## 40:         6                                Other race    27 0.31034483 ## 41:         6                      Prefer not to answer    43 0.49425287 ## 42:         7                 African American or Black    21 0.24418605 ## 43:         7          American Indian or Alaska Native    21 0.24418605 ## 44:         7                                     Asian    15 0.17441860 ## 45:         7 Native Hawaiian or other Pacific Islander    24 0.27906977 ## 46:         7                                     White    20 0.23255814 ## 47:         7                                Other race    21 0.24418605 ## 48:         7                      Prefer not to answer    43 0.50000000 ## 49:         8                 African American or Black  2422 0.25956489 ## 50:         8          American Indian or Alaska Native  2341 0.25088415 ## 51:         8                                     Asian  2333 0.25002679 ## 52:         8 Native Hawaiian or other Pacific Islander  2457 0.26331583 ## 53:         8                                     White  2503 0.26824563 ## 54:         8                                Other race  2375 0.25452792 ## 55:         8                      Prefer not to answer  4456 0.47754796 ## 56:        10                 African American or Black    19 0.19587629 ## 57:        10          American Indian or Alaska Native    26 0.26804124 ## 58:        10                                     Asian    24 0.24742268 ## 59:        10 Native Hawaiian or other Pacific Islander    20 0.20618557 ## 60:        10                                     White    17 0.17525773 ## 61:        10                                Other race    21 0.21649485 ## 62:        10                      Prefer not to answer    51 0.52577320 ## 63:        11                 African American or Black    18 0.33962264 ## 64:        11          American Indian or Alaska Native    14 0.26415094 ## 65:        11                                     Asian    18 0.33962264 ## 66:        11 Native Hawaiian or other Pacific Islander    16 0.30188679 ## 67:        11                                     White    15 0.28301887 ## 68:        11                                Other race    16 0.30188679 ## 69:        11                      Prefer not to answer    22 0.41509434 ## 70:        12                 African American or Black     4 0.33333333 ## 71:        12          American Indian or Alaska Native     3 0.25000000 ## 72:        12                                     Asian     1 0.08333333 ## 73:        12 Native Hawaiian or other Pacific Islander     4 0.33333333 ## 74:        12                                     White     5 0.41666667 ## 75:        12                                Other race     2 0.16666667 ## 76:        12                      Prefer not to answer     6 0.50000000 ## 77:        13                 African American or Black   206 0.24700240 ## 78:        13          American Indian or Alaska Native   189 0.22661871 ## 79:        13                                     Asian   184 0.22062350 ## 80:        13 Native Hawaiian or other Pacific Islander   210 0.25179856 ## 81:        13                                     White   220 0.26378897 ## 82:        13                                Other race   196 0.23501199 ## 83:        13                      Prefer not to answer   425 0.50959233 ## 84:        14                 African American or Black     5 0.16129032 ## 85:        14          American Indian or Alaska Native     8 0.25806452 ## 86:        14                                     Asian     8 0.25806452 ## 87:        14 Native Hawaiian or other Pacific Islander     7 0.22580645 ## 88:        14                                     White     5 0.16129032 ## 89:        14                                Other race     6 0.19354839 ## 90:        14                      Prefer not to answer    16 0.51612903 ##     mode_type                                      race count       prop ##  ## $wtd ##     mode_type                                      race count       prop ##  1:         1                 African American or Black  1173 0.26371389 ##  2:         1          American Indian or Alaska Native  1149 0.26062794 ##  3:         1                                     Asian  1095 0.25433099 ##  4:         1 Native Hawaiian or other Pacific Islander  1145 0.25516511 ##  5:         1                                     White  1188 0.26543213 ##  6:         1                                Other race  1150 0.25876904 ##  7:         1                      Prefer not to answer  2176 0.48830386 ##  8:         2                 African American or Black    79 0.19397957 ##  9:         2          American Indian or Alaska Native    78 0.21172220 ## 10:         2                                     Asian    68 0.17892850 ## 11:         2 Native Hawaiian or other Pacific Islander    94 0.25340427 ## 12:         2                                     White    87 0.22521979 ## 13:         2                                Other race    85 0.21375366 ## 14:         2                      Prefer not to answer   183 0.53651236 ## 15:         3          American Indian or Alaska Native     2 0.07054228 ## 16:         3                                     Asian     1 0.15625000 ## 17:         3 Native Hawaiian or other Pacific Islander     1 0.03791360 ## 18:         3                                     White     2 0.18887868 ## 19:         3                                Other race     1 0.03791360 ## 20:         3                      Prefer not to answer     9 0.77320772 ## 21:         4                 African American or Black     9 0.28639091 ## 22:         4          American Indian or Alaska Native    11 0.26956561 ## 23:         4                                     Asian    11 0.29396906 ## 24:         4 Native Hawaiian or other Pacific Islander     9 0.24547792 ## 25:         4                                     White    10 0.32080834 ## 26:         4                                Other race    10 0.27299382 ## 27:         4                      Prefer not to answer    22 0.40254409 ## 28:         5                 African American or Black     2 0.33090297 ## 29:         5          American Indian or Alaska Native     2 0.18508132 ## 30:         5                                     Asian     2 0.32978127 ## 31:         5 Native Hawaiian or other Pacific Islander     3 0.46120770 ## 32:         5                                     White     1 0.16806880 ## 33:         5                                Other race     2 0.33501589 ## 34:         5                      Prefer not to answer     3 0.31706861 ## 35:         6                 African American or Black    24 0.29466198 ## 36:         6          American Indian or Alaska Native    21 0.22747852 ## 37:         6                                     Asian    17 0.19717750 ## 38:         6 Native Hawaiian or other Pacific Islander    18 0.19435058 ## 39:         6                                     White    16 0.19828176 ## 40:         6                                Other race    27 0.33450385 ## 41:         6                      Prefer not to answer    43 0.49574858 ## 42:         7                 African American or Black    21 0.26624869 ## 43:         7          American Indian or Alaska Native    21 0.23157816 ## 44:         7                                     Asian    15 0.20025478 ## 45:         7 Native Hawaiian or other Pacific Islander    24 0.26315132 ## 46:         7                                     White    20 0.26202728 ## 47:         7                                Other race    21 0.28235999 ## 48:         7                      Prefer not to answer    43 0.51571165 ## 49:         8                 African American or Black  2422 0.26321795 ## 50:         8          American Indian or Alaska Native  2341 0.25013558 ## 51:         8                                     Asian  2333 0.25196235 ## 52:         8 Native Hawaiian or other Pacific Islander  2457 0.26776841 ## 53:         8                                     White  2503 0.27305121 ## 54:         8                                Other race  2375 0.25516272 ## 55:         8                      Prefer not to answer  4456 0.48266802 ## 56:        10                 African American or Black    19 0.23781573 ## 57:        10          American Indian or Alaska Native    26 0.28499847 ## 58:        10                                     Asian    24 0.31129972 ## 59:        10 Native Hawaiian or other Pacific Islander    20 0.23196646 ## 60:        10                                     White    17 0.18989672 ## 61:        10                                Other race    21 0.26256263 ## 62:        10                      Prefer not to answer    51 0.51011351 ## 63:        11                 African American or Black    18 0.31075683 ## 64:        11          American Indian or Alaska Native    14 0.25281912 ## 65:        11                                     Asian    18 0.37686026 ## 66:        11 Native Hawaiian or other Pacific Islander    16 0.29131465 ## 67:        11                                     White    15 0.22994804 ## 68:        11                                Other race    16 0.29364771 ## 69:        11                      Prefer not to answer    22 0.41008873 ## 70:        12                 African American or Black     4 0.30108384 ## 71:        12          American Indian or Alaska Native     3 0.29693975 ## 72:        12                                     Asian     1 0.06391457 ## 73:        12 Native Hawaiian or other Pacific Islander     4 0.33854001 ## 74:        12                                     White     5 0.30554670 ## 75:        12                                Other race     2 0.12320689 ## 76:        12                      Prefer not to answer     6 0.53825311 ## 77:        13                 African American or Black   206 0.26177265 ## 78:        13          American Indian or Alaska Native   189 0.22290264 ## 79:        13                                     Asian   184 0.22623925 ## 80:        13 Native Hawaiian or other Pacific Islander   210 0.25100439 ## 81:        13                                     White   220 0.25915925 ## 82:        13                                Other race   196 0.24087949 ## 83:        13                      Prefer not to answer   425 0.51959585 ## 84:        14                 African American or Black     5 0.21787414 ## 85:        14          American Indian or Alaska Native     8 0.32953086 ## 86:        14                                     Asian     8 0.34955050 ## 87:        14 Native Hawaiian or other Pacific Islander     7 0.25783788 ## 88:        14                                     White     5 0.25043439 ## 89:        14                                Other race     6 0.25542041 ## 90:        14                      Prefer not to answer    16 0.39948629 ##     mode_type                                      race count       prop ##         prop_se     est     est_se wtd_group_n ##  1: 0.007521060  590587 19751.7986     2239499 ##  2: 0.007495255  583676 19648.7332     2239499 ##  3: 0.007466454  569574 19535.6370     2239499 ##  4: 0.007414976  571442 19331.1747     2239499 ##  5: 0.007526441  594435 19772.6450     2239499 ##  6: 0.007461661  579513 19514.5648     2239499 ##  7: 0.008563971 1093556 26811.8530     2239499 ##  8: 0.022599934   34089  4414.1432      175735 ##  9: 0.024164798   37207  4823.3924      175735 ## 10: 0.022551372   31444  4410.9500      175735 ## 11: 0.026088794   44532  5374.6399      175735 ## 12: 0.024342203   39579  4866.3344      175735 ## 13: 0.023920166   37564  4755.1810      175735 ## 14: 0.030021051   94284  7888.2174      175735 ## 15: 0.052699591     307   217.6892        4352 ## 16: 0.140949165     680   680.0000        4352 ## 17: 0.038857534     165   165.0000        4352 ## 18: 0.142679479     822   694.6670        4352 ## 19: 0.038857534     165   165.0000        4352 ## 20: 0.145603070    3365  1371.4699        4352 ## 21: 0.080437905    6349  2240.6010       22169 ## 22: 0.076052484    5976  2049.5226       22169 ## 23: 0.077637475    6517  2123.5988       22169 ## 24: 0.075599347    5442  2022.4376       22169 ## 25: 0.082213793    7112  2351.4577       22169 ## 26: 0.077765448    6052  2120.6468       22169 ## 27: 0.079192007    8924  2139.0479       22169 ## 28: 0.186600411    1770  1251.7298        5349 ## 29: 0.133384954     990   759.3249        5349 ## 30: 0.186290950    1764  1247.4276        5349 ## 31: 0.192933642    2467  1431.8735        5349 ## 32: 0.151516165     899   899.0000        5349 ## 33: 0.187681926    1792  1267.1366        5349 ## 34: 0.178382865    1696  1148.1009        5349 ## 35: 0.055114087   13342  2984.7356       45279 ## 36: 0.049043617   10300  2506.0621       45279 ## 37: 0.048517999    8928  2474.9189       45279 ## 38: 0.046308723    8800  2326.6173       45279 ## 39: 0.049260333    8978  2524.8655       45279 ## 40: 0.057426192   15146  3218.0346       45279 ## 41: 0.060813165   22447  3978.0761       45279 ## 42: 0.056861230   10659  2706.3282       40034 ## 43: 0.053446701    9271  2467.7153       40034 ## 44: 0.051527293    8017  2345.8605       40034 ## 45: 0.056127613   10535  2652.5818       40034 ## 46: 0.055797849   10490  2628.6720       40034 ## 47: 0.058773581   11304  2854.9687       40034 ## 48: 0.063825811   20646  3690.9426       40034 ## 49: 0.005203138 1231387 28332.1942     4678203 ## 50: 0.005116724 1170185 27637.5572     4678203 ## 51: 0.005134471 1178731 27779.5760     4678203 ## 52: 0.005248280 1252675 28712.6809     4678203 ## 53: 0.005278611 1277389 28969.5310     4678203 ## 54: 0.005139851 1193703 27816.7752     4678203 ## 55: 0.005936967 2258019 38295.4940     4678203 ## 56: 0.051116600   11628  2965.5116       48895 ## 57: 0.051754394   13935  3038.6851       48895 ## 58: 0.054519915   15221  3324.7134       48895 ## 59: 0.049258980   11342  2814.1460       48895 ## 60: 0.045780759    9285  2543.1649       48895 ## 61: 0.052387775   12838  3088.3310       48895 ## 62: 0.057635458   24942  3991.9477       48895 ## 63: 0.072982647    8791  2487.8448       28289 ## 64: 0.068914514    7152  2262.1340       28289 ## 65: 0.076902249   10661  2784.2457       28289 ## 66: 0.070817274    8241  2360.7733       28289 ## 67: 0.063881177    6505  2024.8278       28289 ## 68: 0.071296301    8307  2387.9966       28289 ## 69: 0.077086742   11601  2802.2847       28289 ## 70: 0.142535861    1889  1008.0910        6274 ## 71: 0.154063036    1863  1163.4025        6274 ## 72: 0.063368644     401   401.0000        6274 ## 73: 0.156085712    2124  1192.3160        6274 ## 74: 0.142806765    1917  1008.4793        6274 ## 75: 0.111008499     773   745.5257        6274 ## 76: 0.165739202    3377  1544.1139        6274 ## 77: 0.017327203  111484  8690.1437      425881 ## 78: 0.016211618   94930  7891.0872      425881 ## 79: 0.016475113   96351  8071.0462      425881 ## 80: 0.017035182  106898  8469.7402      425881 ## 81: 0.017218169  110371  8606.6809      425881 ## 82: 0.016808579  102586  8305.0090      425881 ## 83: 0.019747128  221286 12214.0113      425881 ## 84: 0.089745276    2884  1418.4716       13237 ## 85: 0.099541462    4362  1704.0613       13237 ## 86: 0.102184473    4627  1800.9467       13237 ## 87: 0.093495068    3413  1514.9622       13237 ## 88: 0.095464165    3315  1556.3302       13237 ## 89: 0.095448565    3381  1558.7443       13237 ## 90: 0.095344414    5288  1508.6015       13237 ##         prop_se     est     est_se wtd_group_n ##  ## $weight_name ## [1] \"trip_weight\" mode_type_race_ethnicity_list = hts_prep_variable(   summarize_var = \"mode_type\",   summarize_by = c(\"race\", \"ethnicity\"),   variables_dt = variable_list,   data = list(     \"hh\" = hh,     \"person\" = person,     \"day\" = day,     \"trip\" = trip,     \"vehicle\" = vehicle   ) )  mode_by_race_ethnicity_summary = hts_summary(   prepped_dt = mode_type_race_ethnicity_list$cat,   summarize_var = \"mode_type\",   summarize_by = c(\"race\", \"ethnicity\"),   wtname = \"trip_weight\" )   head(mode_by_race_ethnicity_summary$summary$wtd, 10) ##                                 race                                  ethnicity ##  1:        African American or Black                                      Cuban ##  2:        African American or Black                                      Cuban ##  3:        African American or Black                                Two or more ##  4:        African American or Black                                Two or more ##  5:        African American or Black                                Two or more ##  6:        African American or Black                       Prefer not to answer ##  7:        African American or Black                       Prefer not to answer ##  8:        African American or Black                       Prefer not to answer ##  9:        African American or Black                       Prefer not to answer ## 10: American Indian or Alaska Native Not of Hispanic, Latino, or Spanish origin ##     mode_type count       prop   est ##  1:         8    20 0.85193115  9948 ##  2:         1     4 0.14806885  1729 ##  3:         8    19 0.61909727  8312 ##  4:         1     6 0.28318189  3802 ##  5:        13     2 0.09772084  1312 ##  6:         8    29 0.60140470 14471 ##  7:         1    12 0.26568864  6393 ##  8:        13     4 0.06707672  1614 ##  9:         2     3 0.06582994  1584 ## 10:         1     4 0.18561680  1768"},{"path":"https://rsginc.github.io/travelSurveyTools/articles/a01_getting_started.html","id":"calculating-trip-rates","dir":"Articles","previous_headings":"Using travelSurveyTools","what":"Calculating trip rates","title":"Getting Started","text":"hts_summary can also used calculate trip rates.","code":"employment_triprate_list = hts_prep_triprate(   summarize_by = \"employment\",   variables_dt = variable_list,   trip_name = \"trip\",   day_name = \"day\",   hts_data = list(     \"hh\" = hh,     \"person\" = person,     \"day\" = day,     \"trip\" = trip,     \"vehicle\" = vehicle   ) )  trip_rate_by_employment_summary = hts_summary(   prepped_dt = employment_triprate_list$num,   summarize_var = \"num_trips_wtd\",   summarize_by = \"employment\",   summarize_vartype = \"numeric\",   weighted = TRUE,   wtname = \"day_weight\",   se = TRUE )  head(trip_rate_by_employment_summary$summary$wtd, 10) ##    employment count       min      max     mean    mean_se   median ## 1:          1  1759 0.0000000 66.63636 3.689127 0.06833122 2.735211 ## 2:          2   294 0.0000000 61.07273 3.971959 0.17999151 3.023569 ## 3:          3   236 0.0000000 66.08108 3.470364 0.16677819 2.702176 ## 4:          5   954 0.0000000 66.57407 3.678085 0.09273873 2.694794 ## 5:          6   177 0.0000000 60.77358 3.909302 0.22822014 2.775264 ## 6:          7    26 0.2647059 57.37500 3.321632 0.50701000 2.773455 ## 7:          8    30 0.7719101 26.95098 4.065571 0.58655049 3.592087 ## 8:        995   545 0.0000000 65.90909 3.867029 0.12589798 2.922734"},{"path":"https://rsginc.github.io/travelSurveyTools/articles/a01_getting_started.html","id":"labeling-values","dir":"Articles","previous_headings":"Using travelSurveyTools","what":"Labeling Values","title":"Getting Started","text":"label values can use factorize_column.","code":"trip_rate_by_employment_summary$summary$wtd$employment = factorize_column(   trip_rate_by_employment_summary$summary$wtd$employment,   \"employment\",   value_labels,   variable_colname = \"variable\",   value_colname = \"value\",   value_label_colname = \"label\",   value_order_colname = \"val_order\" )   trip_rate_by_employment_summary$summary$wtd ##                                                                             employment ## 1:                                           Employed full-time (35+ hours/week, paid) ## 2:                                 Employed part-time (fewer than 35 hours/week, paid) ## 3:                                                                       Self-employed ## 4: Not employed and not looking for work (e.g., retired, stay-at-home parent, student) ## 5:                                                     Unemployed and looking for work ## 6:                                                          Unpaid volunteer or intern ## 7:               Employed, but not currently working (e.g., on leave, furloughed 100%) ## 8:                                                                    Missing Response ##    count       min      max     mean    mean_se   median ## 1:  1759 0.0000000 66.63636 3.689127 0.06833122 2.735211 ## 2:   294 0.0000000 61.07273 3.971959 0.17999151 3.023569 ## 3:   236 0.0000000 66.08108 3.470364 0.16677819 2.702176 ## 4:   954 0.0000000 66.57407 3.678085 0.09273873 2.694794 ## 5:   177 0.0000000 60.77358 3.909302 0.22822014 2.775264 ## 6:    26 0.2647059 57.37500 3.321632 0.50701000 2.773455 ## 7:    30 0.7719101 26.95098 4.065571 0.58655049 3.592087 ## 8:   545 0.0000000 65.90909 3.867029 0.12589798 2.922734"},{"path":"https://rsginc.github.io/travelSurveyTools/articles/a01_getting_started.html","id":"creating-visuals-using-hts_summary-output","dir":"Articles","previous_headings":"Using travelSurveyTools","what":"Creating Visuals using hts_summary output","title":"Getting Started","text":"hts_summary creates outputs can easily used create visuals.","code":"library(ggplot2) ## Warning: package 'ggplot2' was built under R version 4.3.2 p = ggplot(   trip_rate_by_employment_summary$summary$wtd,   aes(x = mean, y = employment, label = count) ) +   geom_bar(stat = \"identity\") +   geom_errorbar(     aes(       xmin = (mean - mean_se),       xmax = (mean + mean_se),       width = .2     )   ) +   labs(     x = \"Mean Trip Rate\",     y = \"Employment\"   ) +   scale_y_discrete(     labels = function(x) stringr::str_wrap(x, width = 50),     limits = rev   )  print(p)"},{"path":"https://rsginc.github.io/travelSurveyTools/articles/a01_getting_started.html","id":"summarizing-a-new-variable","dir":"Articles","previous_headings":"Using travelSurveyTools","what":"Summarizing a new variable","title":"Getting Started","text":"summarize new variable hts_summary must first added variable_list value_labels. example creating new variable called hh_size want summarize.","code":"test_data$hh[, hh_size := ifelse(num_people < 4, 0, 1)]  variable_list = rbind(   variable_list,   data.table(     variable = \"hh_size\",     is_checkbox = 0,     hh = 1,     person = 0,     day = 0,     trip = 0,     vehicle = 0,     description = \"Household size\",     data_type = \"integer/categorical\",     shared_name = \"hh_size\"   ) )  value_labels = rbind(   value_labels,   data.table(     variable = rep(\"hh_size\", 2),     value = c(0, 1),     label = c(\"Small household\", \"Large household\"),     val_order = c(214:215)   ) )  hh_size_list = hts_prep_variable(   summarize_var = \"hh_size\",   variables_dt = variable_list,   data = test_data )  hh_size_summary = hts_summary(   prepped_dt = hh_size_list$cat,   summarize_var = \"hh_size\",   summarize_vartype = \"categorical\",   weighted = TRUE,   wtname = \"hh_weight\" )  factorize_df(df = hh_size_summary$summary$wtd, value_labels, value_label_colname = \"label\") ##            hh_size count      prop    est ## 1: Small household   842 0.8400047 436054 ## 2: Large household   158 0.1599953  83055"},{"path":"https://rsginc.github.io/travelSurveyTools/articles/a02_geographic_summaries.html","id":"creating-summaries-by-geographic-variables-using-hts_summary","dir":"Articles","previous_headings":"","what":"Creating summaries by geographic variables using hts_summary","title":"Creating user-specified geographic summaries","text":"hts_summary can summarize geographic variables.","code":"income_county_list = hts_prep_variable(   summarize_var = \"income_detailed\",   summarize_by = \"home_county\",   data = test_data )  output = hts_summary(   prepped_dt = income_county_list$cat,   summarize_var = \"income_detailed\",   summarize_by = \"home_county\" )  factorize_df(   output$summary$unwtd,   vals_df = value_labels,   value_label_colname = \"label\" ) ##      home_county      income_detailed count       prop ##  1: Arike County        Under $10,000     8 0.02469136 ##  2: Arike County      $10,000-$24,999    26 0.08024691 ##  3: Arike County      $25,000-$34,999    11 0.03395062 ##  4: Arike County      $35,000-$49,999    11 0.03395062 ##  5: Arike County      $50,000-$74,999    40 0.12345679 ##  6: Arike County      $75,000-$99,999    47 0.14506173 ##  7: Arike County    $100,000-$149,999    56 0.17283951 ##  8: Arike County    $150,000-$199,999    30 0.09259259 ##  9: Arike County    $200,000-$249,999    24 0.07407407 ## 10: Arike County     $250,000 or more    35 0.10802469 ## 11: Arike County Prefer not to answer    36 0.11111111 ## 12: Clark County        Under $10,000    12 0.03498542 ## 13: Clark County      $10,000-$24,999    13 0.03790087 ## 14: Clark County      $25,000-$34,999    16 0.04664723 ## 15: Clark County      $35,000-$49,999    30 0.08746356 ## 16: Clark County      $50,000-$74,999    42 0.12244898 ## 17: Clark County      $75,000-$99,999    28 0.08163265 ## 18: Clark County    $100,000-$149,999    60 0.17492711 ## 19: Clark County    $150,000-$199,999    34 0.09912536 ## 20: Clark County    $200,000-$249,999    24 0.06997085 ## 21: Clark County     $250,000 or more    34 0.09912536 ## 22: Clark County Prefer not to answer    50 0.14577259 ## 23: Moore County        Under $10,000     9 0.02702703 ## 24: Moore County      $10,000-$24,999    16 0.04804805 ## 25: Moore County      $25,000-$34,999    15 0.04504505 ## 26: Moore County      $35,000-$49,999    19 0.05705706 ## 27: Moore County      $50,000-$74,999    56 0.16816817 ## 28: Moore County      $75,000-$99,999    31 0.09309309 ## 29: Moore County    $100,000-$149,999    61 0.18318318 ## 30: Moore County    $150,000-$199,999    35 0.10510511 ## 31: Moore County    $200,000-$249,999    29 0.08708709 ## 32: Moore County     $250,000 or more    24 0.07207207 ## 33: Moore County Prefer not to answer    38 0.11411411 ##      home_county      income_detailed count       prop"},{"path":"https://rsginc.github.io/travelSurveyTools/articles/a02_geographic_summaries.html","id":"using-join_spatial-to-join-together-separate-shapefiles","dir":"Articles","previous_headings":"","what":"Using join_spatial to join together separate shapefiles","title":"Creating user-specified geographic summaries","text":"join_spatial can link together multiple geographies.","code":"hh = join_spatial(   hh,   dplyr::select(states, home_state = NAME),   id_col = \"hh_id\",   lon_col = \"home_lon\",   lat_col = \"home_lat\",   largest = TRUE )  hh[, .N, home_state] ##         home_state   N ##  1:        Indiana  39 ##  2:           Ohio  29 ##  3:       Oklahoma 101 ##  4:       Arkansas 111 ##  5:         Kansas 118 ##  6:      Tennessee  78 ##  7: North Carolina  36 ##  8:       Missouri 106 ##  9:       Kentucky  66 ## 10:        Alabama  42 ## 11:       Illinois  59 ## 12: South Carolina  37 ## 13:          Texas  50 ## 14:    Mississippi  43 ## 15:        Georgia  28 ## 16:       Virginia  16 ## 17:  West Virginia  40 ## 18:       Nebraska   1"},{"path":"https://rsginc.github.io/travelSurveyTools/articles/getting_started.html","id":"about-travelsurveytools","dir":"Articles","previous_headings":"","what":"About TravelSurveyTools","title":"Getting Started","text":"travelSurveyTools package provides tools R users aid use data household travel surveys. possible uses include creating custom cross tabs, labeling data, calculating trip rates.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/articles/getting_started.html","id":"data-assumptions","dir":"Articles","previous_headings":"","what":"Data Assumptions","title":"Getting Started","text":"travelSurveyTools assumes data structure shown . reflect structure data","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/articles/getting_started.html","id":"hts_data","dir":"Articles","previous_headings":"Data Assumptions","what":"hts_data","title":"Getting Started","text":"hts_data list five core tables:","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/articles/getting_started.html","id":"hh","dir":"Articles","previous_headings":"Data Assumptions > hts_data","what":"hh","title":"Getting Started","text":"Household dataset hh_id: 8 digit household ID survey variables asked household level hh_weight: household weight","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/articles/getting_started.html","id":"person","dir":"Articles","previous_headings":"Data Assumptions > hts_data","what":"person","title":"Getting Started","text":"Person dataset hh_id: 8 digit household ID person_id: 10 digit person ID survey variables asked person level person_weight: person weight","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/articles/getting_started.html","id":"day","dir":"Articles","previous_headings":"Data Assumptions > hts_data","what":"day","title":"Getting Started","text":"Day dataset hh_id: 8 digit household ID person_id: 10 digit person ID day_id: 12 digit day ID survey variable asked day level day_weight: day weight","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/articles/getting_started.html","id":"trip","dir":"Articles","previous_headings":"Data Assumptions > hts_data","what":"trip","title":"Getting Started","text":"Trip dataset hh_id: 8 digit household ID person_id: 10 digit person ID day_id: 12 digit day ID trip_id: 13 digit trip ID survey variables asked trip level trip_weight: trip weight","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/articles/getting_started.html","id":"vehicle","dir":"Articles","previous_headings":"Data Assumptions > hts_data","what":"vehicle","title":"Getting Started","text":"Vehicle dataset hh_id: 8 digit household ID vehicle_id: 10 digit vehicle ID survey responses asked vehicle level hh_weight: household weight","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/articles/getting_started.html","id":"codebook","dir":"Articles","previous_headings":"Data Assumptions","what":"Codebook","title":"Getting Started","text":"addition data household travel survey. codebook also required. codebook assumed two parts:","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/articles/getting_started.html","id":"variable_list","dir":"Articles","previous_headings":"Data Assumptions > Codebook","what":"variable_list","title":"Getting Started","text":"dataset containing information variables existing hh, person, day, trip, vehicle tables. variables follows: variable: Name variable is_checkbox: variable ‘Select Apply’ question hh: variable exists hh table person: variable exists person table day: variable exists day table trip: variable exists trip table vehicle: variable exists vehicle table location: variable exists location table data_type: Data type variable description: description variable logic: Conditions variable value shared_name: shared name checkbox variable variable name non-checkbox variables","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/articles/getting_started.html","id":"value_labels","dir":"Articles","previous_headings":"Data Assumptions > Codebook","what":"value_labels","title":"Getting Started","text":"dataset containing values variables found variable_list variables follows: variable: Name variable value: numeric value variable label: numeric value variable represents label_value: value concatenated label (e.g., 11 85 older) val_order: order variable label appear ","code":""},{"path":[]},{"path":"https://rsginc.github.io/travelSurveyTools/articles/getting_started.html","id":"prepping-the-data","dir":"Articles","previous_headings":"Using travelSurveyTools","what":"Prepping the Data","title":"Getting Started","text":"order create summaries data first need prepare data. can using hts_prep_data. return categorical (cat) numeric (num) (applicable) prepped data table can used create summaries. Numeric variables automatically binned hts_prep_data create categorical summaries. can make categorical summary numeric variable using hts_summary. Additionally, numeric variables can create numeric summaries.","code":"library(travelSurveyTools) library(data.table) ## Warning: package 'data.table' was built under R version 4.3.2 library(srvyr) ## Warning: package 'srvyr' was built under R version 4.3.2 # Load data data(\"test_data\") data(\"variable_list\") data(\"value_labels\")  DT = hts_prep_data(summarize_var = 'speed_mph',                    variables_dt = variable_list,                    data = test_data) speed_cat_summary = hts_summary(prepped_dt = DT$cat,                                  summarize_var = 'speed_mph',                                 summarize_by = NULL,                                 summarize_vartype = 'categorical',                                 weighted = FALSE)  speed_cat_summary$summary ## $unwtd ## Key: <speed_mph> ##     speed_mph count       prop ##        <fctr> <int>      <num> ## 1:  1 or less   720 0.04902962 ## 2:        1-9  6825 0.46475996 ## 3:       9-17  3494 0.23792986 ## 4:      17-25  1995 0.13585291 ## 5:      25-33   868 0.05910793 ## 6:      33-41   414 0.02819203 ## 7: 41 or more   369 0.02512768 speed_num_summary = hts_summary(prepped_dt = DT$num,                                  summarize_var = 'speed_mph',                                 summarize_by = NULL,                                 summarize_vartype = 'numeric',                                 weighted = FALSE)  speed_num_summary$summary ## $unwtd ##    count   min      max     mean  median ##    <int> <num>    <num>    <num>   <num> ## 1: 14685     0 112.9918 11.83172 8.63421"},{"path":"https://rsginc.github.io/travelSurveyTools/articles/getting_started.html","id":"using-weighted-data","dir":"Articles","previous_headings":"Using travelSurveyTools","what":"Using Weighted Data","title":"Getting Started","text":"Additionally, can use weighted data setting weighted = TRUE specifying name weight used (wtname).","code":"speed_cat_summary = hts_summary(prepped_dt = DT$cat,                                  summarize_var = 'speed_mph',                                 summarize_by = NULL,                                 summarize_vartype = 'categorical',                                 weighted = TRUE,                                 wtname = 'trip_weight')  speed_cat_summary$summary ## $unwtd ## Key: <speed_mph> ##     speed_mph count       prop ##        <fctr> <int>      <num> ## 1:  1 or less   720 0.04902962 ## 2:        1-9  6825 0.46475996 ## 3:       9-17  3494 0.23792986 ## 4:      17-25  1995 0.13585291 ## 5:      25-33   868 0.05910793 ## 6:      33-41   414 0.02819203 ## 7: 41 or more   369 0.02512768 ##  ## $wtd ##     speed_mph count       prop     est ##        <fctr> <int>      <num>   <int> ## 1:  1 or less   720 0.05017047  370818 ## 2:        1-9  6825 0.46380595 3428064 ## 3:       9-17  3494 0.23966211 1771381 ## 4:      17-25  1995 0.13432492  992817 ## 5:      25-33   868 0.05766713  426227 ## 6:      33-41   414 0.02801374  207054 ## 7: 41 or more   369 0.02635567  194799 ##  ## $weight_name ## [1] \"trip_weight\""},{"path":"https://rsginc.github.io/travelSurveyTools/articles/getting_started.html","id":"calculating-standard-errors","dir":"Articles","previous_headings":"Using travelSurveyTools","what":"Calculating Standard Errors","title":"Getting Started","text":"Additionally, specifying se = TRUE can calculate standard errors.","code":"speed_cat_summary = hts_summary(prepped_dt = DT$cat,                                  summarize_var = 'speed_mph',                                 summarize_by = NULL,                                 summarize_vartype = 'categorical',                                 weighted = TRUE,                                 wtname = 'trip_weight',                                 se = TRUE)  speed_cat_summary$summary ## $unwtd ## Key: <speed_mph> ##     speed_mph count       prop ##        <fctr> <int>      <num> ## 1:  1 or less   720 0.04902962 ## 2:        1-9  6825 0.46475996 ## 3:       9-17  3494 0.23792986 ## 4:      17-25  1995 0.13585291 ## 5:      25-33   868 0.05910793 ## 6:      33-41   414 0.02819203 ## 7: 41 or more   369 0.02512768 ##  ## $wtd ##     speed_mph count       prop     prop_se     est   est_se ##        <fctr> <int>      <num>       <num>   <num>    <num> ## 1:  1 or less   720 0.05017047 0.002079083  370818 15469.78 ## 2:        1-9  6825 0.46380595 0.004737688 3428064 38508.63 ## 3:       9-17  3494 0.23966211 0.004069031 1771381 31295.73 ## 4:      17-25  1995 0.13432492 0.003228756  992817 24287.87 ## 5:      25-33   868 0.05766713 0.002192303  426227 16305.76 ## 6:      33-41   414 0.02801374 0.001560836  207054 11574.44 ## 7: 41 or more   369 0.02635567 0.001548421  194799 11492.05 ##  ## $weight_name ## [1] \"trip_weight\""},{"path":"https://rsginc.github.io/travelSurveyTools/articles/getting_started.html","id":"summarizing-two-variables","dir":"Articles","previous_headings":"Using travelSurveyTools","what":"Summarizing Two Variables","title":"Getting Started","text":"want summarize variable another variable (e.g., mode type person’s race, mode_type person’s ethnicity, income study year) can use summarize_by argument. want summarize select apply variable, can set summarize_vartype checkbox. summarize_by can used unlimited amount variables. use one summarize_by variable pass list argument.","code":"DT = hts_prep_data(summarize_var = 'mode_type',                    summarize_by = 'race',                    variables_dt = variable_list,                    data = test_data)  mode_by_race_summary = hts_summary(prepped_dt = DT$cat,                                     summarize_var = 'mode_type',                                    summarize_by = 'race',                                    summarize_vartype = 'categorical',                                    weighted = TRUE,                                    wtname = 'trip_weight',                                    se = TRUE)   mode_by_race_summary$summary ## $unwtd ## Key: <race> ##                                          race mode_type count         prop ##                                        <fctr>     <int> <int>        <num> ##  1:                 African American or Black         1   146 0.3753213368 ##  2:                 African American or Black         3     4 0.0102827763 ##  3:                 African American or Black         4     1 0.0025706941 ##  4:                 African American or Black         6     1 0.0025706941 ##  5:                 African American or Black         7     1 0.0025706941 ##  6:                 African American or Black         8   180 0.4627249357 ##  7:                 African American or Black        11     3 0.0077120823 ##  8:                 African American or Black        13    53 0.1362467866 ##  9:          American Indian or Alaska Native         1     7 0.1521739130 ## 10:          American Indian or Alaska Native         8    36 0.7826086957 ## 11:          American Indian or Alaska Native        13     3 0.0652173913 ## 12:                                     Asian         1   689 0.3123300091 ## 13:                                     Asian         2    32 0.0145058930 ## 14:                                     Asian         4     2 0.0009066183 ## 15:                                     Asian         5     2 0.0009066183 ## 16:                                     Asian         6    12 0.0054397099 ## 17:                                     Asian         7    41 0.0185856754 ## 18:                                     Asian         8  1249 0.5661831369 ## 19:                                     Asian        11    30 0.0135992747 ## 20:                                     Asian        12     1 0.0004533092 ## 21:                                     Asian        13   141 0.0639165911 ## 22:                                     Asian        14     7 0.0031731641 ## 23: Native Hawaiian or other Pacific Islander         1    29 0.4531250000 ## 24: Native Hawaiian or other Pacific Islander         6     1 0.0156250000 ## 25: Native Hawaiian or other Pacific Islander         8    34 0.5312500000 ## 26:                                     White         1  2934 0.3034753827 ## 27:                                     White         2   242 0.0250310302 ## 28:                                     White         3     3 0.0003103020 ## 29:                                     White         4    26 0.0026892842 ## 30:                                     White         5     3 0.0003103020 ## 31:                                     White         6    36 0.0037236243 ## 32:                                     White         7    59 0.0061026065 ## 33:                                     White         8  5765 0.5962970625 ## 34:                                     White        10    14 0.0014480761 ## 35:                                     White        11    37 0.0038270583 ## 36:                                     White        12     8 0.0008274721 ## 37:                                     White        13   516 0.0533719487 ## 38:                                     White        14    25 0.0025858502 ## 39:                               Two or more         1   243 0.4111675127 ## 40:                               Two or more         2    10 0.0169204738 ## 41:                               Two or more         6     6 0.0101522843 ## 42:                               Two or more         8   270 0.4568527919 ## 43:                               Two or more        11     2 0.0033840948 ## 44:                               Two or more        13    60 0.1015228426 ## 45:                                Other race         1    51 0.2931034483 ## 46:                                Other race         5     1 0.0057471264 ## 47:                                Other race         6     1 0.0057471264 ## 48:                                Other race         8   104 0.5977011494 ## 49:                                Other race        11     3 0.0172413793 ## 50:                                Other race        13    13 0.0747126437 ## 51:                                Other race        14     1 0.0057471264 ## 52:                      Prefer not to answer         1   358 0.3455598456 ## 53:                      Prefer not to answer         2    39 0.0376447876 ## 54:                      Prefer not to answer         3     3 0.0028957529 ## 55:                      Prefer not to answer         4     5 0.0048262548 ## 56:                      Prefer not to answer         5     1 0.0009652510 ## 57:                      Prefer not to answer         6     6 0.0057915058 ## 58:                      Prefer not to answer         7     2 0.0019305019 ## 59:                      Prefer not to answer         8   548 0.5289575290 ## 60:                      Prefer not to answer        11     4 0.0038610039 ## 61:                      Prefer not to answer        13    69 0.0666023166 ## 62:                      Prefer not to answer        14     1 0.0009652510 ##                                          race mode_type count         prop ##  ## $wtd ##                                          race mode_type count         prop ##                                        <fctr>     <int> <int>        <num> ##  1:                 African American or Black         1   146 0.3905712667 ##  2:                 African American or Black         3     4 0.0126026621 ##  3:                 African American or Black         4     1 0.0023516203 ##  4:                 African American or Black         6     1 0.0043795768 ##  5:                 African American or Black         7     1 0.0023566776 ##  6:                 African American or Black         8   180 0.4284500546 ##  7:                 African American or Black        11     3 0.0044149775 ##  8:                 African American or Black        13    53 0.1548731642 ##  9:          American Indian or Alaska Native         1     7 0.1450820029 ## 10:          American Indian or Alaska Native         8    36 0.7467699134 ## 11:          American Indian or Alaska Native        13     3 0.1081480837 ## 12:                                     Asian         1   689 0.3051702848 ## 13:                                     Asian         2    32 0.0166409377 ## 14:                                     Asian         4     2 0.0007410683 ## 15:                                     Asian         5     2 0.0009939142 ## 16:                                     Asian         6    12 0.0064949215 ## 17:                                     Asian         7    41 0.0190691777 ## 18:                                     Asian         8  1249 0.5658590003 ## 19:                                     Asian        11    30 0.0161453597 ## 20:                                     Asian        12     1 0.0002583625 ## 21:                                     Asian        13   141 0.0651487332 ## 22:                                     Asian        14     7 0.0034782401 ## 23: Native Hawaiian or other Pacific Islander         1    29 0.4204865855 ## 24: Native Hawaiian or other Pacific Islander         6     1 0.0239513996 ## 25: Native Hawaiian or other Pacific Islander         8    34 0.5555620149 ## 26:                                     White         1  2934 0.3041972747 ## 27:                                     White         2   242 0.0243721513 ## 28:                                     White         3     3 0.0002999808 ## 29:                                     White         4    26 0.0023771364 ## 30:                                     White         5     3 0.0003299170 ## 31:                                     White         6    36 0.0037343793 ## 32:                                     White         7    59 0.0062000853 ## 33:                                     White         8  5765 0.5978921238 ## 34:                                     White        10    14 0.0020777749 ## 35:                                     White        11    37 0.0035603367 ## 36:                                     White        12     8 0.0007298226 ## 37:                                     White        13   516 0.0518479582 ## 38:                                     White        14    25 0.0023810590 ## 39:                               Two or more         1   243 0.4165906782 ## 40:                               Two or more         2    10 0.0142847408 ## 41:                               Two or more         6     6 0.0099882853 ## 42:                               Two or more         8   270 0.4517833211 ## 43:                               Two or more        11     2 0.0033521438 ## 44:                               Two or more        13    60 0.1040008307 ## 45:                                Other race         1    51 0.2979641649 ## 46:                                Other race         5     1 0.0100404948 ## 47:                                Other race         6     1 0.0073445387 ## 48:                                Other race         8   104 0.5797193099 ## 49:                                Other race        11     3 0.0183946303 ## 50:                                Other race        13    13 0.0852055250 ## 51:                                Other race        14     1 0.0013313363 ## 52:                      Prefer not to answer         1   358 0.3525751627 ## 53:                      Prefer not to answer         2    39 0.0415813644 ## 54:                      Prefer not to answer         3     3 0.0038718201 ## 55:                      Prefer not to answer         4     5 0.0039204752 ## 56:                      Prefer not to answer         5     1 0.0004790652 ## 57:                      Prefer not to answer         6     6 0.0046241022 ## 58:                      Prefer not to answer         7     2 0.0011302945 ## 59:                      Prefer not to answer         8   548 0.5225422644 ## 60:                      Prefer not to answer        11     4 0.0023429284 ## 61:                      Prefer not to answer        13    69 0.0657105323 ## 62:                      Prefer not to answer        14     1 0.0012219906 ##                                          race mode_type count         prop ##          prop_se     est     est_se ##            <num>   <num>      <num> ##  1: 0.0282906311   77230  7202.7558 ##  2: 0.0066885378    2492  1331.4537 ##  3: 0.0023500849     465   465.0000 ##  4: 0.0043678202     866   866.0000 ##  5: 0.0023551269     466   466.0000 ##  6: 0.0284115856   84720  7290.3594 ##  7: 0.0026365365     873   521.1549 ##  8: 0.0211938329   30624  4566.8926 ##  9: 0.0583277190    3335  1444.1155 ## 10: 0.0758001371   17166  3291.4253 ## 11: 0.0588410966    2486  1452.3590 ## 12: 0.0112751847  331909 14406.1991 ## 13: 0.0031684441   18099  3472.2550 ## 14: 0.0005374246     806   584.5719 ## 15: 0.0007866950    1081   856.0153 ## 16: 0.0020499103    7064  2236.5492 ## 17: 0.0033706757   20740  3697.6048 ## 18: 0.0121719999  615439 19446.9203 ## 19: 0.0031535242   17560  3455.7525 ## 20: 0.0002583829     281   281.0000 ## 21: 0.0060809393   70857  6815.9100 ## 22: 0.0015826609    3783  1724.5385 ## 23: 0.0704335805   14466  3130.6398 ## 24: 0.0236229664     824   824.0000 ## 25: 0.0710921620   19113  3722.8271 ## 26: 0.0054007054 1473423 28836.5035 ## 27: 0.0017956576  118050  8747.8272 ## 28: 0.0002038448    1453   987.4254 ## 29: 0.0005430718   11514  2631.4671 ## 30: 0.0002123764    1598  1028.7568 ## 31: 0.0007110315   18088  3447.0041 ## 32: 0.0009039482   30031  4384.2723 ## 33: 0.0057494999 2895976 36610.7988 ## 34: 0.0005799747   10064  2811.2886 ## 35: 0.0006760499   17245  3276.7898 ## 36: 0.0003057402    3535  1481.0996 ## 37: 0.0025833876  251133 12671.2132 ## 38: 0.0005582162   11533  2705.1327 ## 39: 0.0231395983  128377  9252.3454 ## 40: 0.0057348621    4402  1780.3574 ## 41: 0.0043327331    3078  1340.5366 ## 42: 0.0233781385  139222  9656.1625 ## 43: 0.0023683811    1033   730.6294 ## 44: 0.0146015906   32049  4757.0427 ## 45: 0.0401920453   26857  4365.3044 ## 46: 0.0099774410     905   905.0000 ## 47: 0.0073183153     662   662.0000 ## 48: 0.0429156650   52253  5852.2429 ## 49: 0.0107967923    1658   980.6406 ## 50: 0.0239410741    7680  2253.0918 ## 51: 0.0013345935     120   120.0000 ## 52: 0.0170273904  188407 11212.9544 ## 53: 0.0072538913   22220  3958.7011 ## 54: 0.0022959360    2069  1229.3224 ## 55: 0.0019000907    2095  1016.4577 ## 56: 0.0004791561     256   256.0000 ## 57: 0.0023053628    2471  1234.3289 ## 58: 0.0010238556     604   547.2946 ## 59: 0.0177823597  279233 13535.4928 ## 60: 0.0016165519    1252   864.6572 ## 61: 0.0087882893   35114  4848.2740 ## 62: 0.0012213144     653   653.0000 ##          prop_se     est     est_se ##  ## $weight_name ## [1] \"trip_weight\" DT = hts_prep_data(summarize_var = 'race',                    summarize_by = 'mode_type',                    variables_dt = variable_list,                    data = test_data)  mode_by_race_summary = hts_summary(prepped_dt = DT$cat,                                     summarize_var = 'race',                                    summarize_by = 'mode_type',                                    summarize_vartype = 'checkbox',                                    weighted = TRUE,                                    wtname = 'trip_weight',                                    se = TRUE)   mode_by_race_summary$summary ## $unwtd ## Key: <mode_type> ##     mode_type                                      race count        prop ##         <int>                                    <fctr> <int>       <num> ##  1:         1                 African American or Black   190 0.039840637 ##  2:         1          American Indian or Alaska Native   100 0.020968757 ##  3:         1                                     Asian   808 0.169427553 ##  4:         1 Native Hawaiian or other Pacific Islander    34 0.007129377 ##  5:         1                                     White  3174 0.665548333 ##  6:         1                                Other race   105 0.022017194 ##  7:         1                      Prefer not to answer   358 0.075068148 ##  8:         2                                     Asian    38 0.114114114 ##  9:         2                                     White   252 0.756756757 ## 10:         2                                Other race     4 0.012012012 ## 11:         2                      Prefer not to answer    39 0.117117117 ## 12:         3                 African American or Black     4 0.400000000 ## 13:         3                                     White     3 0.300000000 ## 14:         3                      Prefer not to answer     3 0.300000000 ## 15:         4                 African American or Black     1 0.029411765 ## 16:         4                                     Asian     2 0.058823529 ## 17:         4                                     White    26 0.764705882 ## 18:         4                      Prefer not to answer     5 0.147058824 ## 19:         5                                     Asian     2 0.285714286 ## 20:         5                                     White     3 0.428571429 ## 21:         5                                Other race     1 0.142857143 ## 22:         5                      Prefer not to answer     1 0.142857143 ## 23:         6                 African American or Black     1 0.014492754 ## 24:         6          American Indian or Alaska Native     1 0.014492754 ## 25:         6                                     Asian    15 0.217391304 ## 26:         6 Native Hawaiian or other Pacific Islander     1 0.014492754 ## 27:         6                                     White    42 0.608695652 ## 28:         6                                Other race     3 0.043478261 ## 29:         6                      Prefer not to answer     6 0.086956522 ## 30:         7                 African American or Black     1 0.009708738 ## 31:         7                                     Asian    41 0.398058252 ## 32:         7                                     White    59 0.572815534 ## 33:         7                      Prefer not to answer     2 0.019417476 ## 34:         8                 African American or Black   202 0.023882715 ## 35:         8          American Indian or Alaska Native    92 0.010877276 ## 36:         8                                     Asian  1405 0.166114921 ## 37:         8 Native Hawaiian or other Pacific Islander    76 0.008985576 ## 38:         8                                     White  5991 0.708323481 ## 39:         8                                Other race   144 0.017025301 ## 40:         8                      Prefer not to answer   548 0.064790731 ## 41:        10                                     White    14 1.000000000 ## 42:        11                 African American or Black     5 0.060240964 ## 43:        11          American Indian or Alaska Native     2 0.024096386 ## 44:        11                                     Asian    30 0.361445783 ## 45:        11                                     White    39 0.469879518 ## 46:        11                                Other race     3 0.036144578 ## 47:        11                      Prefer not to answer     4 0.048192771 ## 48:        12                                     Asian     1 0.111111111 ## 49:        12                                     White     8 0.888888889 ## 50:        13                 African American or Black    70 0.074706510 ## 51:        13          American Indian or Alaska Native    40 0.042689434 ## 52:        13                                     Asian   153 0.163287086 ## 53:        13                                     White   576 0.614727855 ## 54:        13                                Other race    29 0.030949840 ## 55:        13                      Prefer not to answer    69 0.073639274 ## 56:        14                                     Asian     7 0.205882353 ## 57:        14                                     White    25 0.735294118 ## 58:        14                                Other race     1 0.029411765 ## 59:        14                      Prefer not to answer     1 0.029411765 ##     mode_type                                      race count        prop ##  ## $wtd ##     mode_type                                      race count        prop ##         <int>                                    <fctr> <int>       <num> ##  1:         1                 African American or Black   190 0.040013489 ##  2:         1          American Indian or Alaska Native   100 0.021076910 ##  3:         1                                     Asian   808 0.166476198 ##  4:         1 Native Hawaiian or other Pacific Islander    34 0.006831490 ##  5:         1                                     White  3174 0.666577157 ##  6:         1                                Other race   105 0.020586062 ##  7:         1                      Prefer not to answer   358 0.078438695 ##  8:         2                                     Asian    38 0.126072990 ##  9:         2                                     White   252 0.732486705 ## 10:         2                                Other race     4 0.008524104 ## 11:         2                      Prefer not to answer    39 0.132916201 ## 12:         3                 African American or Black     4 0.414366478 ## 13:         3                                     White     3 0.241602927 ## 14:         3                      Prefer not to answer     3 0.344030595 ## 15:         4                 African American or Black     1 0.031250000 ## 16:         4                                     Asian     2 0.054166667 ## 17:         4                                     White    26 0.773790323 ## 18:         4                      Prefer not to answer     5 0.140793011 ## 19:         5                                     Asian     2 0.281510417 ## 20:         5                                     White     3 0.416145833 ## 21:         5                                Other race     1 0.235677083 ## 22:         5                      Prefer not to answer     1 0.066666667 ## 23:         6                 African American or Black     1 0.023968337 ## 24:         6          American Indian or Alaska Native     1 0.013589438 ## 25:         6                                     Asian    15 0.245800006 ## 26:         6 Native Hawaiian or other Pacific Islander     1 0.022805901 ## 27:         6                                     White    42 0.585812737 ## 28:         6                                Other race     3 0.039633556 ## 29:         6                      Prefer not to answer     6 0.068390025 ## 30:         7                 African American or Black     1 0.008989024 ## 31:         7                                     Asian    41 0.400069443 ## 32:         7                                     White    59 0.579290523 ## 33:         7                      Prefer not to answer     2 0.011651010 ## 34:         8                 African American or Black   202 0.022452608 ## 35:         8          American Indian or Alaska Native    92 0.011322711 ## 36:         8                                     Asian  1405 0.163974235 ## 37:         8 Native Hawaiian or other Pacific Islander    76 0.009421685 ## 38:         8                                     White  5991 0.709942163 ## 39:         8                                Other race   144 0.017067744 ## 40:         8                      Prefer not to answer   548 0.065818854 ## 41:        10                                     White    14 1.000000000 ## 42:        11                 African American or Black     5 0.045721688 ## 43:        11          American Indian or Alaska Native     2 0.024779907 ## 44:        11                                     Asian    30 0.421234438 ## 45:        11                                     White    39 0.438458032 ## 46:        11                                Other race     3 0.039772591 ## 47:        11                      Prefer not to answer     4 0.030033344 ## 48:        12                                     Asian     1 0.073637317 ## 49:        12                                     White     8 0.926362683 ## 50:        13                 African American or Black    70 0.080582483 ## 51:        13          American Indian or Alaska Native    40 0.045759209 ## 52:        13                                     Asian   153 0.162498668 ## 53:        13                                     White   576 0.603323604 ## 54:        13                                Other race    29 0.033025119 ## 55:        13                      Prefer not to answer    69 0.074810917 ## 56:        14                                     Asian     7 0.235129592 ## 57:        14                                     White    25 0.716825160 ## 58:        14                                Other race     1 0.007458512 ## 59:        14                      Prefer not to answer     1 0.040586736 ##     mode_type                                      race count        prop ##         prop_se     est     est_se ##           <num>   <num>      <num> ##  1: 0.003480119   96111  7975.0422 ##  2: 0.002542819   50626  5768.3288 ##  3: 0.006568278  399870 16186.7733 ##  4: 0.001479919   16409  3332.9169 ##  5: 0.007787283 1601095 32330.8859 ##  6: 0.002488825   49447  5643.0323 ##  7: 0.004825536  188407 11307.9346 ##  8: 0.021673410   21076  3786.3301 ##  9: 0.027934367  122452  8973.4484 ## 10: 0.005832891    1425   953.4106 ## 11: 0.022521537   22220  3962.3508 ## 12: 0.169167822    2492  1331.5545 ## 13: 0.144247992    1453   987.4602 ## 14: 0.164240660    2069  1229.3905 ## 15: 0.030872908     465   465.0000 ## 16: 0.038590666     806   584.5878 ## 17: 0.076849954   11514  2632.9105 ## 18: 0.064158837    2095  1016.5575 ## 19: 0.189992252    1081   856.0307 ## 20: 0.208480521    1598  1028.8007 ## 21: 0.198601443     905   905.0000 ## 22: 0.068252522     256   256.0000 ## 23: 0.025775549     866   866.0000 ## 24: 0.014784403     491   491.0000 ## 25: 0.063926195    8881  2490.2346 ## 26: 0.024557643     824   824.0000 ## 27: 0.069091983   21166  3700.9843 ## 28: 0.026555002    1432   893.3361 ## 29: 0.036046741    2471  1234.4411 ## 30: 0.008964261     466   466.0000 ## 31: 0.054902198   20740  3701.0089 ## 32: 0.055185761   30031  4390.3553 ## 33: 0.010514366     604   547.2982 ## 34: 0.001873969   95254  7769.5082 ## 35: 0.001398626   48036  5771.9859 ## 36: 0.004762250  695652 21306.4777 ## 37: 0.001276091   39971  5261.1217 ## 38: 0.005617560 3011892 43812.4684 ## 39: 0.001666708   72409  6895.2034 ## 40: 0.003230268  279233 13708.1607 ## 41: 0.000000000   10064  2812.2928 ## 42: 0.022381920    1906   897.4773 ## 43: 0.018255748    1033   730.6515 ## 44: 0.063430268   17560  3458.3451 ## 45: 0.063068208   18278  3359.7885 ## 46: 0.024280629    1658   980.6957 ## 47: 0.021499876    1252   864.6859 ## 48: 0.073962514     281   281.0000 ## 49: 0.073962514    3535  1481.3100 ## 50: 0.011247084   37823  5066.8771 ## 51: 0.008727320   21478  3852.7941 ## 52: 0.015009542   76272  7108.1562 ## 53: 0.018695102  283182 13670.8385 ## 54: 0.007444624   15501  3261.5427 ## 55: 0.010821499   35114  4855.8112 ## 56: 0.091554896    3783  1724.7373 ## 57: 0.095130908   11533  2706.5373 ## 58: 0.007557031     120   120.0000 ## 59: 0.039773659     653   653.0000 ##         prop_se     est     est_se ##  ## $weight_name ## [1] \"trip_weight\" DT = hts_prep_data(summarize_var = 'mode_type',                    summarize_by = c('race', 'ethnicity'),                    variables_dt = variable_list,                    data = list('hh' = hh,                                'person' = person,                                'day' = day,                                'trip' = trip,                                'vehicle' = vehicle))  mode_by_race_ethnicity_summary = hts_summary(prepped_dt = DT$cat,                                               summarize_var = 'mode_type',                                              summarize_by = c('race', 'ethnicity'),                                              summarize_vartype = 'categorical',                                              weighted = TRUE,                                              wtname = 'trip_weight',                                              se = TRUE)   head(mode_by_race_ethnicity_summary$summary$wtd, 10) ##                          race                                   ethnicity ##                        <fctr>                                      <fctr> ##  1: African American or Black  Not of Hispanic, Latino, or Spanish origin ##  2: African American or Black  Not of Hispanic, Latino, or Spanish origin ##  3: African American or Black  Not of Hispanic, Latino, or Spanish origin ##  4: African American or Black  Not of Hispanic, Latino, or Spanish origin ##  5: African American or Black  Not of Hispanic, Latino, or Spanish origin ##  6: African American or Black  Not of Hispanic, Latino, or Spanish origin ##  7: African American or Black  Not of Hispanic, Latino, or Spanish origin ##  8: African American or Black  Not of Hispanic, Latino, or Spanish origin ##  9: African American or Black Another Hispanic, Latino, or Spanish origin ## 10: African American or Black Another Hispanic, Latino, or Spanish origin ##     mode_type count        prop     prop_se   est    est_se ##         <int> <int>       <num>       <num> <num>     <num> ##  1:         1   143 0.395021634 0.028786577 75777 7152.8334 ##  2:         3     4 0.012990669 0.006892942  2492 1331.4537 ##  3:         4     1 0.002424021 0.002422381   465  465.0000 ##  4:         6     1 0.004514414 0.004501905   866  866.0000 ##  5:         7     1 0.002429234 0.002427578   466  466.0000 ##  6:         8   173 0.418427775 0.028683214 80267 7061.2787 ##  7:        11     3 0.004550904 0.002717711   873  521.1549 ##  8:        13    53 0.159641349 0.021778953 30624 4566.8926 ##  9:         1     2 0.270056497 0.179646281   956  696.6059 ## 10:         8     4 0.729943503 0.179646281  2584 1413.9469"},{"path":"https://rsginc.github.io/travelSurveyTools/articles/getting_started.html","id":"calculating-trip-rates","dir":"Articles","previous_headings":"Using travelSurveyTools","what":"Calculating trip rates","title":"Getting Started","text":"hts_summary can also used calculate trip rates.","code":"DT = hts_prep_triprate(summarize_by = 'employment',                        variables_dt = variable_list,                        trip_name = 'trip',                        day_name = 'day',                        hts_data = list('hh' = hh,                                        'person' = person,                                        'day' = day,                                        'trip' = trip,                                        'vehicle' = vehicle))  trip_rate_by_employment_summary = hts_summary(prepped_dt = DT$num,                                                summarize_var = 'num_trips_wtd',                                               summarize_by = 'employment',                                               summarize_vartype = 'numeric',                                               weighted = TRUE,                                               wtname = 'day_weight',                                               se = TRUE)  head(trip_rate_by_employment_summary$summary$wtd, 10) ##    employment count   min      max     mean    mean_se   median ##         <int> <int> <num>    <num>    <num>      <num>    <num> ## 1:          1  1858     0 62.56075 3.770511 0.08744228 2.562929 ## 2:          2   333     0 49.51000 4.518665 0.26799833 3.027821 ## 3:          3   251     0 63.59574 3.750584 0.25813849 2.478788 ## 4:          5  1000     0 59.23973 3.394865 0.12525765 2.021469 ## 5:          6   164     0 45.62069 3.144907 0.26774656 2.197662 ## 6:          7    52     0 32.36364 4.070054 0.56907009 2.720099 ## 7:          8    14     0 21.92248 2.728166 0.92991111 0.904000 ## 8:        995   513     0 58.78947 2.098985 0.10435428 1.272311"},{"path":"https://rsginc.github.io/travelSurveyTools/articles/getting_started.html","id":"labeling-values","dir":"Articles","previous_headings":"Using travelSurveyTools","what":"Labeling Values","title":"Getting Started","text":"label values can use factorize_column.","code":"trip_rate_by_employment_summary$summary$wtd$employment =  factorize_column(   trip_rate_by_employment_summary$summary$wtd$employment,   'employment',   value_labels,   variable_colname = 'variable',   value_colname = 'value',   value_label_colname = 'label',   value_order_colname = 'val_order' )   trip_rate_by_employment_summary$summary$wtd ##                                                                             employment ##                                                                                  <ord> ## 1:                                           Employed full-time (35+ hours/week, paid) ## 2:                                 Employed part-time (fewer than 35 hours/week, paid) ## 3:                                                                       Self-employed ## 4: Not employed and not looking for work (e.g., retired, stay-at-home parent, student) ## 5:                                                     Unemployed and looking for work ## 6:                                                          Unpaid volunteer or intern ## 7:               Employed, but not currently working (e.g., on leave, furloughed 100%) ## 8:                                                                    Missing Response ##    count   min      max     mean    mean_se   median ##    <int> <num>    <num>    <num>      <num>    <num> ## 1:  1858     0 62.56075 3.770511 0.08744228 2.562929 ## 2:   333     0 49.51000 4.518665 0.26799833 3.027821 ## 3:   251     0 63.59574 3.750584 0.25813849 2.478788 ## 4:  1000     0 59.23973 3.394865 0.12525765 2.021469 ## 5:   164     0 45.62069 3.144907 0.26774656 2.197662 ## 6:    52     0 32.36364 4.070054 0.56907009 2.720099 ## 7:    14     0 21.92248 2.728166 0.92991111 0.904000 ## 8:   513     0 58.78947 2.098985 0.10435428 1.272311"},{"path":"https://rsginc.github.io/travelSurveyTools/articles/getting_started.html","id":"creating-visuals-using-hts_summary-output","dir":"Articles","previous_headings":"Using travelSurveyTools","what":"Creating Visuals using hts_summary output","title":"Getting Started","text":"hts_summary creates outputs can easily used create visuals.","code":"library(ggplot2) ## Warning: package 'ggplot2' was built under R version 4.3.2 p = ggplot(   trip_rate_by_employment_summary$summary$wtd,    aes(x = mean, y = employment)) +   geom_bar(stat = 'identity') +    geom_errorbar(     aes(xmin = (mean - mean_se),          xmax = (mean + mean_se),         width = .2)   ) +    labs(x = 'Mean Trip Rate',        y = 'Employment')  +   scale_y_discrete(labels = function(x) stringr::str_wrap(x, width = 50),                    limits = rev)      print(p)"},{"path":"https://rsginc.github.io/travelSurveyTools/articles/getting_started.html","id":"summarizing-a-new-variable","dir":"Articles","previous_headings":"Using travelSurveyTools","what":"Summarizing a new variable","title":"Getting Started","text":"summarize new variable hts_summary must first added variable_list value_labels. example creating new variable called hh_size want summarize.","code":"test_data$hh[, hh_size := ifelse(num_people < 4, 0, 1)]  variable_list = rbind(variable_list,                       data.table(variable = 'hh_size',                                  is_checkbox = 0,                                  hh = 1,                                  person = 0,                                  day = 0,                                  trip = 0,                                  vehicle = 0,                                  description = 'Household size',                                  data_type = 'integer/categorical',                                  shared_name = 'hh_size')                       )  value_labels = rbind(value_labels,                      data.table(variable = rep('hh_size', 2),                                 value = c(0,1),                                 label = c('Small household', 'Large household'),                                 val_order = c(214:215))                       )  DT = hts_prep_data(summarize_var = 'hh_size',                    variables_dt = variable_list,                    data = test_data)  hh_size_summary = hts_summary(prepped_dt = DT$cat,                                summarize_var = 'hh_size',                               summarize_vartype = 'categorical',                               weighted = TRUE,                               wtname = 'hh_weight')  factorize_df(df = hh_size_summary$summary$wtd, value_labels, value_label_colname = 'label') ##            hh_size count      prop    est ##              <ord> <int>     <num>  <int> ## 1: Small household   881 0.8786678 448161 ## 2: Large household   119 0.1213322  61885"},{"path":"https://rsginc.github.io/travelSurveyTools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"RSG Inc.. Author, maintainer. Ashley Asmus. Author. Erika Redding. Author. Jacob Moore. Author. James Clark. Author. Matt Landis. Author.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Inc. R, Asmus , Redding E, Moore J, Clark J (2024). “travelSurveyTools: Tools using household travel survey data.” https://rsginc.github.io/travelSurveyTools/.","code":"@Misc{,   title = {travelSurveyTools: Tools for using household travel survey data},   author = {RSG Inc. and Ashley Asmus and Erika Redding and Jacob Moore and James Clark},   url = {https://rsginc.github.io/travelSurveyTools/},   year = {2024}, }"},{"path":"https://rsginc.github.io/travelSurveyTools/CONTRIBUTING.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"NA","text":"project uses feature-branch naming convention workflow. main main branch (master), base work main. Contribute project making changes feature branch issuing pull-requests ’re ready integrate main branch.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/CONTRIBUTING.html","id":"create-a-feature-branch","dir":"","previous_headings":"Contributing","what":"Create a feature branch","title":"NA","text":"Pull main branch; git pull, necessary git checkout main switch main Create feature branch check branch, e.g., git checkout -b crosstab-performance * can use initials prefix feature branch, e.g., aa-crosstab-performance.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/CONTRIBUTING.html","id":"your-feature-branch-should-do-one-thing-only","dir":"","previous_headings":"Contributing","what":"Your feature branch should do one thing only","title":"NA","text":"example: debug error, create new function, generate new part dashboard, integrate new dataset, fix issue - please name branch issue number","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/CONTRIBUTING.html","id":"save-and-share-your-work","dir":"","previous_headings":"Contributing","what":"Save and share your work","title":"NA","text":"Commit changes related feature push GitHub. Push changes feature branch time. Create pull request GitHub ’re ready work reviewed. can submit PR done, want guidance work--progress. Make changes respond comments pull-request reviews. New commits pushed branch update pull-request.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/CONTRIBUTING.html","id":"keep-it-clean","dir":"","previous_headings":"Contributing","what":"Keep it clean","title":"NA","text":"pull request approved approver merge branch main may delete branch GitHub. remove deleted feature branches local copy repository run git remote prune origin. attempt push additional commits merged pull-request. Instead, start new feature branch issue new pull request. Remember update branch main whenever start new feature, e.g., git checkout main; git pull origin main; git checkout -b -new-feature.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/index.html","id":"travel-survey-tools","dir":"","previous_headings":"","what":"Travel Survey Tools","title":"travelSurveyTools","text":"travelSurveyTools R package empowers users household travel survey (HTS) data create meaningful summaries data. Currently, travelSurveyTools compatible HTS datasets RSG, Inc., hope expand travel survey. like collaborate, please contact Erika Redding erika.redding@rsginc.com. datasets usually contain six tables: household, person, day, trip, vehicle, location. future, may expand travelSurveyTools work types travel survey data types surveys. travelSurveyTools active development open-source; anyone can contribute 🤝. See CONTRIBUTING page learn .","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/index.html","id":"cloning-instructions","dir":"","previous_headings":"Travel Survey Tools","what":"Cloning instructions","title":"travelSurveyTools","text":"Set config - usethis::use_git_config(user.name = {\"username\"}, user.email = {your_email@email.com}) Go github page generate token - usethis::create_github_token() Paste PAT pop-follows - credentials::set_github_pat() Lastly, remotes::install_github() work - remotes::install_github('RSGInc/travelSurveyTools')","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/index.html","id":"what-can-this-package-do","dir":"","previous_headings":"Travel Survey Tools","what":"What can this package do?","title":"travelSurveyTools","text":"things package enables include: Cross tabs unlimited number variables Summarizes numeric, categorical, date, date-time variables Accepts weighted unweighted data Numeric summaries return means, medians, summaries binned data Ability use customized datasets (e.g., filtered, binned, renamed data) Data labeling helper functions Returns sample sizes/unweighted counts Standard errors calculated survey statistics Ability specify custom weights Trip rate calculations","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/index.html","id":"creating-the-prepared-data-list","dir":"","previous_headings":"","what":"Creating the prepared data list","title":"travelSurveyTools","text":"","code":"flowchart TD     A(hts_prep_variable) --> B{hts_validate_variable_list}     B --> C{remove_missing}     C --> |TRUE| CA(hts_remove_missing_data)     C --> |FALSE| D{hts_find_var}     CA --> D{hts_find_var}     D --> E(var_is_shared)     E --> |TRUE| EA(hts_melt_vars)     E --> |FALSE| F(summarize_var)     EA --> F(summarize_var)     F --> |numeric| FA(remove_outliers)     F --> |categorical| G(\"summarize_by > 0\")     FA --> FB(hts_bin_var)     FB --> G(\"summarize_by > 0\")     G --> |TRUE| GA(hts_find_var)     GA --> GB(hts_prep_byvar)     G --> H{\"!is.null(strataname)\"}     GB --> H{\"!is.null(strataname)\"}     H --> |TRUE| HA(hts_cbind_var)     H --> |FALSE| I((prepped_dt_ls))     HA --> I"},{"path":"https://rsginc.github.io/travelSurveyTools/index.html","id":"creating-the-summary","dir":"","previous_headings":"","what":"Creating the summary","title":"travelSurveyTools","text":"","code":"flowchart TD     A((prepped_dt_ls))     A --> B(hts_get_ns)     B --> |categorical| BB(hts_summary_cat)     B --> |numeric| CB(hts_summary_num)     BB --> BC{se}     BC --> |TRUE| BCA(hts_to_so)     BCA --> BD((cat_summary_ls))     BC --> |FALSE| BD     CB --> CC{weighted}     CC --> |TRUE| CCA(hts_to_so)     CCA --> CD((num_summary_ls))     CC --> |FALSE| CD"},{"path":"https://rsginc.github.io/travelSurveyTools/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://rsginc.github.io/travelSurveyTools/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://rsginc.github.io/travelSurveyTools/PULL_REQUEST_TEMPLATE.html","id":"summary","dir":"","previous_headings":"","what":"Summary","title":"NA","text":"Provide detailed summary changes introduced codebase.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/PULL_REQUEST_TEMPLATE.html","id":"checklist","dir":"","previous_headings":"","what":"Checklist","title":"NA","text":"fixes closes #XXX (Replace github issues ticket#) updated version using usethis::use_version() updated relevant docs News.md reflect changes made run pkgdown::build_site() adding vignettes articles","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/day.html","id":null,"dir":"Reference","previous_headings":"","what":"Test day dataset — day","title":"Test day dataset — day","text":"dataset containing information participant travel days 2023 Puget Sound Regional Council Household Travel Survey. variables follows:","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/day.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test day dataset — day","text":"","code":"day"},{"path":[]},{"path":"https://rsginc.github.io/travelSurveyTools/reference/day.html","id":"day","dir":"Reference","previous_headings":"","what":"day","title":"Test day dataset — day","text":"data frame 5,602 rows 13 columns: hh_id 8 digit household ID person_id 10 digit person ID day_id 12 digit day ID delivery_2 Take-/prepared food delivered home, response codes delivery_3 Someone came work home (e.g., babysitter, housecleaning, lawn), response codes delivery_4 Groceries delivered home, response codes delivery_5 Received packages home (e.g., USPS, FedEx, UPS), response codes delivery_6 Received personal packages work, response codes delivery_7 Received packages another location (e.g., Amazon Locker, package pick-point), response codes delivery_8 item delivered home (e.g., appliance), response codes delivery_996 None , response codes begin_day Location beginning day, response codes end_day Location end day, response codes","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/day.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Test day dataset — day","text":"Export tables compiled internal RSG database 11/22/2023","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/factorize_column.html","id":null,"dir":"Reference","previous_headings":"","what":"Factorize a column. — factorize_column","title":"Factorize a column. — factorize_column","text":"Factorize column. function typically called directly, called part factorize_df function.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/factorize_column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Factorize a column. — factorize_column","text":"","code":"factorize_column(   x,   var_str,   vals_df,   variable_colname = \"variable\",   value_colname = \"value\",   value_label_colname = \"value_label\",   value_order_colname = \"value\",   extra_labels = NULL,   add_na = TRUE )"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/factorize_column.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Factorize a column. — factorize_column","text":"x vector (variable) 'factorized' labeled. X often single variable column within dataframe. var_str name vector variable factorized (e.g., \"sample_segment\"). vals_df dataframe variable labels (.e., factor levels labels) format specified . variable_colname name variable column vals_df. Default 'variable'. value_colname name value column vals_df. Default 'value', value_label_colname name value label column vals_df. Default 'value_label' value_order_colname name value order column vals_df (can value column ). Default 'value'. extra_labels Pass vector names variables values dataframe use labeling. Common uses include missing values, universal values (e.g., \"Total\" \"Subtotal\" row), similar variables (e.g., \"mode_1\" reuse mode_1 labels mode_2). Default NULL. add_na TRUE FALSE setting whether add NA explicit level factor. Default setting TRUE.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/factorize_column.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Factorize a column. — factorize_column","text":"'factorized' version vector passed (.e., factor). returned invisibly.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/factorize_column.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Factorize a column. — factorize_column","text":"function expects values dataframe (vals_df) columns variable name, value, value label, value order (can value ) \"factorize\" functions borrowed updated 'tmr.Rite..tester' package Matt Landis.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/factorize_column.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Factorize a column. — factorize_column","text":"","code":"factored = factorize_column(   x = hh$income_detailed,   var_str = \"income_detailed\",   vals_df = value_labels,   extra_labels = \"Missing\",   value_label_colname = \"label\" )"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/factorize_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Factorize a dataframe — factorize_df","title":"Factorize a dataframe — factorize_df","text":"Factorize dataframe. function loops dataframe (calling factorize_column) labels variable provide labels.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/factorize_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Factorize a dataframe — factorize_df","text":"","code":"factorize_df(df, vals_df, verbose = TRUE, ...)"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/factorize_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Factorize a dataframe — factorize_df","text":"df dataframe label vals_df dataframe variable labels (.e., factor levels labels) format specified . Passed factorize_column function. verbose Prints vars labeled unlabeled ... Additional arguments passed factorize_column","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/factorize_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Factorize a dataframe — factorize_df","text":"factorized (.e. labeled) version dataframe passed.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/factorize_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Factorize a dataframe — factorize_df","text":"function expects values dataframe (vals_df) following format: variable (character/string names variable), value (integer values variable), val_order (sequential ordering value), label (strings names use levels factor). \"factorize\" functions borrowed updated 'tmr.Rite..tester' package Matt Landis.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/factorize_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Factorize a dataframe — factorize_df","text":"","code":"hh_labeled = factorize_df(   df = hh,   vals_df = value_labels,   value_label_colname = \"label\",   extra_labels = c(\"Missing\") ) #> Warning: Missing labels in variable \"num_people\". Values missing labels: 0 #>  #>  Labeled vars:  #> - home_county #> - income_detailed #> - income_followup #> - num_people #> - residence_type #> - sample_segment #> Unlabeled vars:  #> - hh_id #> - hh_weight #> - home_lat #> - home_lon #> - num_trips"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/get_distance_meters.html","id":null,"dir":"Reference","previous_headings":"","what":"Get distance between points — get_distance_meters","title":"Get distance between points — get_distance_meters","text":"Function get haversine distance meters two points Based calculation geosphere package","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/get_distance_meters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get distance between points — get_distance_meters","text":"","code":"get_distance_meters(location_1, location_2, radius = 6378137)"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/get_distance_meters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get distance between points — get_distance_meters","text":"location_1 matrix vector longitudes latitudes location_2 matrix vector longitudes latitudes radius Radius sphere use haversine calculation (Defaults meters)","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/get_distance_meters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get distance between points — get_distance_meters","text":"vector distances meters","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/get_distance_meters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get distance between points — get_distance_meters","text":"","code":"get_distance_meters(c(38.8734, -75.2394), c(40.3497, -76.2314)) #> [1] 117610.6"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hh.html","id":null,"dir":"Reference","previous_headings":"","what":"Test household dataset — hh","title":"Test household dataset — hh","text":"dataset containing household level attributes 1,000 households 2023 Puget Sound Regional Council Household Travel Survey. variables follows:","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test household dataset — hh","text":"","code":"hh"},{"path":[]},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hh.html","id":"hh","dir":"Reference","previous_headings":"","what":"hh","title":"Test household dataset — hh","text":"data frame 1,000 rows 6 columns: hh_id 8 digit household ID sample_segment Sample segment income_detailed 2022 household income (detailed categories), response codes income_followup 2022 household income (broad categories), response codes num_people Household size, response codes residence_type Type residence, response codes","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hh.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Test household dataset — hh","text":"Export tables compiled internal RSG database 11/22/2023","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_bin_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Bin numeric variables — hts_bin_var","title":"Bin numeric variables — hts_bin_var","text":"Bin numeric variables","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_bin_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bin numeric variables — hts_bin_var","text":"","code":"hts_bin_var(prepped_dt, numvar, nbins = 7)"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_bin_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bin numeric variables — hts_bin_var","text":"prepped_dt Dataset containing variable bin data.table format numvar Name numeric variable bin nbins Number bins variable. Defaults 7.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_bin_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bin numeric variables — hts_bin_var","text":"Inputted dataset specified variable binned data.table format.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_bin_var.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bin numeric variables — hts_bin_var","text":"","code":"require(data.table) #> Loading required package: data.table require(stringr) #> Loading required package: stringr hts_bin_var(prepped_dt = trip, numvar = \"speed_mph\") #>        day_id trip_id distance_miles mode_type mode_1 mode_2 num_travelers #>     1:      1    6848     0.07736261         8      6    995             1 #>     2:      1    6099     0.31691692         8     34    995             2 #>     3:      1   15759     0.16244826         1      1    995             1 #>     4:      1   13883    10.72894403        13      2     23             1 #>     5:      1    9240     0.47308002         2      2    995             1 #>    ---                                                                     #> 15870:   4125    4505     3.23577517         8      6    995             1 #> 15871:   4125    7897    22.65734754         8      6    995             1 #> 15872:   4125     719     7.77203953         1      1    995             1 #> 15873:   4125   14260     1.76325532         8      7    995             1 #> 15874:   4125    4397     1.42201419         8     34    995             2 #>        d_purpose_category hh_id person_id travel_date trip_weight speed_mph #>     1:                  7   642       820  2023-05-28         957 1 or less #>     2:                  7   642       820  2023-05-28         237      1-23 #>     3:                  9   642       820  2023-05-28         287      1-23 #>     4:                 11   642       820  2023-05-28         361      1-23 #>     5:                  1   642       820  2023-05-28         578      1-23 #>    ---                                                                      #> 15870:                 12   876      1684  2023-05-30         999      1-23 #> 15871:                  2   876      1684  2023-05-30         167     23-45 #> 15872:                 12   876      1684  2023-05-30         954      1-23 #> 15873:                  2   876      1684  2023-05-30         841      1-23 #> 15874:                  7   876      1684  2023-05-30         977      1-23"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_calculate_vmt.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate vmt for each trip — hts_calculate_vmt","title":"Calculate vmt for each trip — hts_calculate_vmt","text":"Calculate vmt trip","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_calculate_vmt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate vmt for each trip — hts_calculate_vmt","text":"","code":"hts_calculate_vmt(   data,   trip_name = \"trip\",   ids = c(\"hh_id\", \"person_id\", \"day_id\", \"trip_id\", \"vehicle_id\"),   agg_tbl = \"trip\",   mode_cols,   miles_col,   vehicle_modes,   occupancy_var = NULL )"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_calculate_vmt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate vmt for each trip — hts_calculate_vmt","text":"data List data tables trip_name Name trip table data ids Unique id order table data agg_tbl Table append vmt mode_cols Column(s) trip_dt containing trip mode miles_col Column trip_dt containing miles per trip vehicle_modes List modes considered vehicle occupancy_var Ocuupancy column divide distance specified. Default NULL","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_calculate_vmt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate vmt for each trip — hts_calculate_vmt","text":"List vmt trip trip_dt","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_calculate_vmt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate vmt for each trip — hts_calculate_vmt","text":"","code":"hts_calculate_vmt(   trip_name = \"trip\",   data = test_data,   agg_tbl = \"day\",   mode_cols = c(\"mode_1\", \"mode_2\"),   miles_col = \"distance_miles\",   vehicle_modes = c(6, 7, 10) ) #>       day_id person_id delivery_2 delivery_3 delivery_4 delivery_5 delivery_6 #>    1:      1       820        995        995        995        995        995 #>    2:      2        24          0          0          0          0          0 #>    3:      3      1866          0          0          0          0          0 #>    4:      4      1915        995        995        995        995        995 #>    5:      5       415          0          0          0          1          0 #>   ---                                                                         #> 4121:   4121      1321          0          1          0          1          0 #> 4122:   4122      1619          0          0          0          0          0 #> 4123:   4123       886        995        995        995        995        995 #> 4124:   4124       964          0          0          0          0          0 #> 4125:   4125      1684          0          0          0          0          0 #>       delivery_7 delivery_8 delivery_996 travel_date begin_day end_day hh_id #>    1:        995        995          995  2023-05-28         1       1   642 #>    2:          0          0            1  2023-05-23         1       1    24 #>    3:          0          0            1  2023-05-25         1       1   888 #>    4:        995        995          995  2023-04-17         1       1   875 #>    5:          0          0            0  2023-05-26         1       1   976 #>   ---                                                                        #> 4121:          0          0            0  2023-05-20         1       1   595 #> 4122:          0          0            1  2023-04-09         1       1    47 #> 4123:        995        995          995  2023-04-12       995     995   474 #> 4124:          0          0            1  2023-04-22         1       1   764 #> 4125:          0          0            1  2023-05-30         1       1   876 #>       num_trips day_weight         vmt #>    1:         5        583  0.07736261 #>    2:         5        220  4.96664814 #>    3:         2         73  0.00000000 #>    4:         6         63 70.00022978 #>    5:         3        139 30.63127183 #>   ---                                  #> 4121:         1        755  2.48464220 #> 4122:         5        996 11.25108555 #> 4123:         5        818 18.06692119 #> 4124:         2        460  0.80502711 #> 4125:         5        762 27.65637803   hts_calculate_vmt(   data = test_data,   trip_name = \"trip\",   agg_tbl = \"trip\",   mode_cols = \"mode_type\",   miles_col = \"distance_miles\",   vehicle_modes = 8,   occupancy_var = \"num_travelers\" ) #>        day_id trip_id  speed_mph distance_miles mode_type mode_1 mode_2 #>     1:      1    6848  0.3570582     0.07736261         8      6    995 #>     2:      1    6099  3.8030030     0.31691692         8     34    995 #>     3:      1   15759  9.2827577     0.16244826         1      1    995 #>     4:      1   13883 10.7289440    10.72894403        13      2     23 #>     5:      1    9240  1.3936891     0.47308002         2      2    995 #>    ---                                                                  #> 15870:   4125    4505 16.3377147     3.23577517         8      6    995 #> 15871:   4125    7897 42.9297111    22.65734754         8      6    995 #> 15872:   4125     719  1.5648402     7.77203953         1      1    995 #> 15873:   4125   14260 10.5795319     1.76325532         8      7    995 #> 15874:   4125    4397  8.5320851     1.42201419         8     34    995 #>        num_travelers d_purpose_category hh_id person_id travel_date trip_weight #>     1:             1                  7   642       820  2023-05-28         957 #>     2:             2                  7   642       820  2023-05-28         237 #>     3:             1                  9   642       820  2023-05-28         287 #>     4:             1                 11   642       820  2023-05-28         361 #>     5:             1                  1   642       820  2023-05-28         578 #>    ---                                                                          #> 15870:             1                 12   876      1684  2023-05-30         999 #> 15871:             1                  2   876      1684  2023-05-30         167 #> 15872:             1                 12   876      1684  2023-05-30         954 #> 15873:             1                  2   876      1684  2023-05-30         841 #> 15874:             2                  7   876      1684  2023-05-30         977 #>                vmt #>     1:  0.07736261 #>     2:  0.15845846 #>     3:  0.00000000 #>     4:  0.00000000 #>     5:  0.00000000 #>    ---             #> 15870:  3.23577517 #> 15871: 22.65734754 #> 15872:  0.00000000 #> 15873:  1.76325532 #> 15874:  0.71100709"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_cbind_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Bind a column from one table to another — hts_cbind_var","title":"Bind a column from one table to another — hts_cbind_var","text":"Bind column one table another","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_cbind_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bind a column from one table to another — hts_cbind_var","text":"","code":"hts_cbind_var(   lhs_table,   rhs_var,   hts_data,   variable_list = variable_list,   return_weight_cols = FALSE,   cbind_ids = c(\"hh_id\", \"person_id\", \"day_id\", \"trip_id\", \"vehicle_id\"),   cbind_wts = c(\"hh_weight\", \"person_weight\", \"day_weight\", \"trip_weight\", \"hh_weight\") )"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_cbind_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bind a column from one table to another — hts_cbind_var","text":"lhs_table Table bind column data.table format rhs_var Variable bind lhs_table. hts_data List household, person, vehicle, day, trip tables data.table format. variable_list variable list descriptions table locations variables. return_weight_cols true binds weight variable along rhs_var lhs_table. Default FALSE. cbind_ids list unique identifiers table hts_data cbind_wts list weight table hts_data","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_cbind_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bind a column from one table to another — hts_cbind_var","text":"Inputted table inputted variable binded.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_cbind_var.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bind a column from one table to another — hts_cbind_var","text":"","code":"require(data.table) hts_cbind_var(   lhs_table = trip,   rhs_var = \"speed_mph\",   hts_data = test_data,   variable_list = variable_list ) #> Joining speed_mph to table on day_id, trip_id, speed_mph, hh_id, person_id, trip_weight #>        day_id trip_id  speed_mph hh_id person_id trip_weight distance_miles #>     1:      1    6099  3.8030030   642       820         237     0.31691692 #>     2:      1    6848  0.3570582   642       820         957     0.07736261 #>     3:      1    9240  1.3936891   642       820         578     0.47308002 #>     4:      1   13883 10.7289440   642       820         361    10.72894403 #>     5:      1   15759  9.2827577   642       820         287     0.16244826 #>    ---                                                                      #> 15870:   4125     719  1.5648402   876      1684         954     7.77203953 #> 15871:   4125    4397  8.5320851   876      1684         977     1.42201419 #> 15872:   4125    4505 16.3377147   876      1684         999     3.23577517 #> 15873:   4125    7897 42.9297111   876      1684         167    22.65734754 #> 15874:   4125   14260 10.5795319   876      1684         841     1.76325532 #>        mode_type mode_1 mode_2 num_travelers d_purpose_category travel_date #>     1:         8     34    995             2                  7  2023-05-28 #>     2:         8      6    995             1                  7  2023-05-28 #>     3:         2      2    995             1                  1  2023-05-28 #>     4:        13      2     23             1                 11  2023-05-28 #>     5:         1      1    995             1                  9  2023-05-28 #>    ---                                                                      #> 15870:         1      1    995             1                 12  2023-05-30 #> 15871:         8     34    995             2                  7  2023-05-30 #> 15872:         8      6    995             1                 12  2023-05-30 #> 15873:         8      6    995             1                  2  2023-05-30 #> 15874:         8      7    995             1                  2  2023-05-30 hts_cbind_var(   lhs_table = trip,   rhs_var = \"speed_mph\",   hts_data = test_data,   variable_list = variable_list,   return_weight_cols = TRUE ) #> Joining speed_mph to table on day_id, trip_id, speed_mph, hh_id, person_id, trip_weight #>        day_id trip_id  speed_mph hh_id person_id trip_weight distance_miles #>     1:      1    6099  3.8030030   642       820         237     0.31691692 #>     2:      1    6848  0.3570582   642       820         957     0.07736261 #>     3:      1    9240  1.3936891   642       820         578     0.47308002 #>     4:      1   13883 10.7289440   642       820         361    10.72894403 #>     5:      1   15759  9.2827577   642       820         287     0.16244826 #>    ---                                                                      #> 15870:   4125     719  1.5648402   876      1684         954     7.77203953 #> 15871:   4125    4397  8.5320851   876      1684         977     1.42201419 #> 15872:   4125    4505 16.3377147   876      1684         999     3.23577517 #> 15873:   4125    7897 42.9297111   876      1684         167    22.65734754 #> 15874:   4125   14260 10.5795319   876      1684         841     1.76325532 #>        mode_type mode_1 mode_2 num_travelers d_purpose_category travel_date #>     1:         8     34    995             2                  7  2023-05-28 #>     2:         8      6    995             1                  7  2023-05-28 #>     3:         2      2    995             1                  1  2023-05-28 #>     4:        13      2     23             1                 11  2023-05-28 #>     5:         1      1    995             1                  9  2023-05-28 #>    ---                                                                      #> 15870:         1      1    995             1                 12  2023-05-30 #> 15871:         8     34    995             2                  7  2023-05-30 #> 15872:         8      6    995             1                 12  2023-05-30 #> 15873:         8      6    995             1                  2  2023-05-30 #> 15874:         8      7    995             1                  2  2023-05-30"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_filter_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter datasets to only keep specified ids — hts_filter_data","title":"Filter datasets to only keep specified ids — hts_filter_data","text":"Filter datasets keep specified ids","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_filter_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter datasets to only keep specified ids — hts_filter_data","text":"","code":"hts_filter_data(hts_data, ids, id_name)"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_filter_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter datasets to only keep specified ids — hts_filter_data","text":"hts_data List containing household travel data tables. ids List ids keep tables id_name Name id used filtering (e.g., hh_id, person_id)","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_filter_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter datasets to only keep specified ids — hts_filter_data","text":"Inputted list tables filtered specified ids.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_filter_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter datasets to only keep specified ids — hts_filter_data","text":"","code":"require(data.table)  data(test_data)  hts_filter_data(   hts_data = test_data,   ids = hh[num_people > 5, hh_id],   id_name = \"hh_id\" ) #> $hh #>     hh_id sample_segment income_detailed income_followup  home_lon home_lat #>  1:    28             13             999               1 -93.87387 35.32633 #>  2:   176             21               2             995 -89.80981 37.44244 #>  3:   194             18               6             995 -96.11612 36.69269 #>  4:   216             16               6             995 -86.66667 36.93093 #>  5:   243             16               9             995 -86.54655 37.57558 #>  6:   270             18               2             995 -90.09009 35.20721 #>  7:   277             17             999               3 -97.33734 35.52252 #>  8:   462             17               2             995 -82.76276 34.18418 #>  9:   562             10               7             995 -87.44745 36.51752 #> 10:   664             17               7             995 -98.81882 35.70470 #> 11:   724              9               3             995 -92.25225 38.58458 #> 12:   745             19               7             995 -98.13814 37.12012 #> 13:   820             16             999             999 -89.16917 34.84284 #> 14:   845             18               6             995 -99.37938 38.29029 #> 15:   981              2               7             995 -83.22322 34.74474 #>     home_county residence_type num_people num_trips hh_weight #>  1:           2            997          6        37       522 #>  2:           1              4          6        35        90 #>  3:           2              4          6        28       591 #>  4:           2              4          6        43       972 #>  5:           1              1          6        35       523 #>  6:           1              4          6        48       355 #>  7:           3              4          6        56       486 #>  8:           1              4          6        47        15 #>  9:           1              1          6        44       154 #> 10:           3              1          6        43       524 #> 11:           2              4          6        31       664 #> 12:           2              1          9        86       678 #> 13:           1              1          6        40       107 #> 14:           1              4          7        66       498 #> 15:           1              4          6        45       414 #>  #> $person #>     person_id ethnicity_1 ethnicity_2 ethnicity_3 ethnicity_4 ethnicity_997 #>  1:         2           1           0           0           1             1 #>  2:        13           1           0           1           0             1 #>  3:        20           0           0           0           0             0 #>  4:        56           0           0           0           0             0 #>  5:        60           0           0           0           1             0 #>  6:       101           0           0           0           0             0 #>  7:       120           0           0           0           0             0 #>  8:       121           1           0           1           0             0 #>  9:       149           0           0           0           0             0 #> 10:       150           0           0           0           0             0 #> 11:       153           1           1           0           1             1 #> 12:       164           0           0           0           0             0 #> 13:       169           0           0           0           0             0 #> 14:       198           0           0           0           0             0 #> 15:       238           0           0           0           0             0 #> 16:       253           1           1           0           0             1 #> 17:       299           0           0           0           0             0 #> 18:       307           0           0           0           0             0 #> 19:       354           0           0           0           0             0 #> 20:       365           0           0           0           0             0 #> 21:       383           1           1           1           1             0 #> 22:       388           0           0           1           1             1 #> 23:       397           0           0           0           0             0 #> 24:       410           0           0           0           0             0 #> 25:       461           0           0           1           1             1 #> 26:       469           1           0           0           0             0 #> 27:       474           1           0           0           1             1 #> 28:       480           0           0           0           0             0 #> 29:       519           0           1           1           1             1 #> 30:       525           0           0           0           0             0 #> 31:       542           1           0           0           1             1 #> 32:       557           1           0           1           1             0 #> 33:       578           0           0           0           0             0 #> 34:       588           0           1           1           0             1 #> 35:       616           0           0           0           0             0 #> 36:       668           0           1           1           0             0 #> 37:       701           0           0           1           1             0 #> 38:       713           0           0           0           0             0 #> 39:       728           0           0           0           0             0 #> 40:       734           0           1           1           1             0 #> 41:       784           0           0           0           0             0 #> 42:       819           0           1           1           1             0 #> 43:       821           0           0           1           1             1 #> 44:       826           0           0           0           0             0 #> 45:       867           0           1           0           0             1 #> 46:       885           0           0           0           0             0 #> 47:       888           0           0           0           0             0 #> 48:       914           0           0           0           0             0 #> 49:       942           0           0           1           1             1 #> 50:       944           1           0           1           0             0 #> 51:       985           1           1           0           1             0 #> 52:       996           0           0           0           0             0 #> 53:      1028           0           0           0           0             0 #> 54:      1064           0           1           1           1             0 #> 55:      1153           0           0           0           0             0 #> 56:      1163           0           0           0           0             0 #> 57:      1169           0           0           0           0             0 #> 58:      1205           0           0           0           0             0 #> 59:      1231           0           0           0           0             0 #> 60:      1236           0           0           0           0             0 #> 61:      1238           0           0           0           0             0 #> 62:      1250           1           1           0           0             0 #> 63:      1255           0           0           0           0             0 #> 64:      1266           1           1           1           1             1 #> 65:      1292           1           0           1           1             1 #> 66:      1303           1           0           0           1             1 #> 67:      1313           1           1           1           0             1 #> 68:      1344           0           1           0           0             0 #> 69:      1409           0           1           1           0             1 #> 70:      1418           1           0           0           0             1 #> 71:      1435           0           1           0           0             1 #> 72:      1438           1           1           0           1             1 #> 73:      1441           0           0           0           0             0 #> 74:      1452           0           1           1           1             1 #> 75:      1455           0           0           0           0             0 #> 76:      1554           0           0           0           0             0 #> 77:      1566           0           0           0           0             0 #> 78:      1578           0           0           0           0             0 #> 79:      1586           0           0           0           0             0 #> 80:      1629           0           0           0           0             0 #> 81:      1664           0           0           0           0             0 #> 82:      1681           0           0           0           0             0 #> 83:      1699           0           1           0           0             0 #> 84:      1735           0           0           1           1             1 #> 85:      1738           0           0           0           0             0 #> 86:      1757           0           1           1           1             1 #> 87:      1763           0           0           0           0             0 #> 88:      1821           1           1           0           0             0 #> 89:      1864           0           0           1           0             1 #> 90:      1901           0           0           0           0             0 #> 91:      1924           0           0           0           0             0 #> 92:      1974           0           0           0           0             0 #> 93:      2013           1           1           1           1             0 #> 94:      2029           0           1           1           1             1 #>     person_id ethnicity_1 ethnicity_2 ethnicity_3 ethnicity_4 ethnicity_997 #>     ethnicity_999 race_1 race_2 race_3 race_4 race_5 race_997 race_999 hh_id #>  1:             0      1      1      0      0      0        1        0   724 #>  2:             0      1      0      0      0      1        0        0    28 #>  3:             1      0      0      0      0      0        0        1   724 #>  4:             1      1      1      1      1      1        1        0   462 #>  5:             0      0      0      0      0      0        0        1   664 #>  6:             1      0      0      0      0      0        0        1   820 #>  7:             1      1      0      1      0      1        0        0   845 #>  8:             0      0      0      0      0      0        0        1   243 #>  9:             1      0      0      0      0      0        0        1   724 #> 10:             1      0      0      0      0      0        0        1   981 #> 11:             0      0      0      0      0      0        0        1   845 #> 12:             1      1      0      0      1      1        0        0   462 #> 13:             1      1      1      0      1      1        0        0   664 #> 14:             1      0      0      0      0      0        0        1   216 #> 15:             1      1      0      1      1      1        0        0   216 #> 16:             0      1      0      0      1      1        0        0    28 #> 17:             1      0      1      1      1      0        1        0   194 #> 18:             1      0      0      0      0      0        0        1   270 #> 19:             1      0      0      0      0      0        0        1   820 #> 20:             1      0      0      0      0      0        0        1   981 #> 21:             0      1      0      1      0      0        0        0   176 #> 22:             0      0      0      0      0      0        0        1   820 #> 23:             0      0      0      0      0      0        0        1   270 #> 24:             1      0      0      0      0      0        0        1    28 #> 25:             0      1      1      0      0      1        0        0   745 #> 26:             0      0      1      0      1      0        0        0   562 #> 27:             0      1      1      1      0      1        1        0   745 #> 28:             1      0      0      0      0      0        0        1    28 #> 29:             0      1      0      0      0      1        0        0   216 #> 30:             1      1      1      1      0      1        0        0   820 #> 31:             0      0      1      0      1      0        1        0   277 #> 32:             0      1      0      1      0      0        1        0   277 #> 33:             1      0      0      0      0      0        0        1   176 #> 34:             0      0      0      0      0      0        0        1   820 #> 35:             1      0      0      0      0      0        0        1   270 #> 36:             0      0      0      0      0      0        0        1   270 #> 37:             0      0      0      1      0      0        0        0   216 #> 38:             1      0      1      0      1      1        0        0   745 #> 39:             1      0      1      0      0      0        0        0   277 #> 40:             0      1      0      0      0      1        1        0   243 #> 41:             1      0      0      0      1      0        1        0   845 #> 42:             0      1      1      1      1      1        0        0   216 #> 43:             0      1      0      0      1      0        1        0   243 #> 44:             1      0      0      0      0      0        0        1   845 #> 45:             0      0      0      1      0      1        1        0   981 #> 46:             1      0      0      0      1      0        0        0   243 #> 47:             1      0      0      0      0      0        0        1   277 #> 48:             1      0      0      0      0      0        0        1   176 #> 49:             0      0      1      0      1      0        1        0   194 #> 50:             0      1      1      0      0      1        0        0   724 #> 51:             0      0      0      1      0      1        1        0   981 #> 52:             1      0      0      0      0      0        0        1   462 #> 53:             1      0      0      0      0      0        0        1   845 #> 54:             0      0      0      0      0      0        0        1   176 #> 55:             1      0      0      0      0      0        0        1   745 #> 56:             1      0      0      0      0      0        0        1   745 #> 57:             1      0      0      1      1      0        1        0   664 #> 58:             1      0      0      0      0      0        0        1   981 #> 59:             1      0      1      1      0      0        0        0   981 #> 60:             1      0      0      1      1      1        1        0   270 #> 61:             1      0      0      0      0      0        0        1   745 #> 62:             0      0      0      0      0      0        0        1   277 #> 63:             1      0      0      0      0      0        0        1   664 #> 64:             0      1      0      1      1      0        0        0   176 #> 65:             0      0      0      0      0      0        0        1   562 #> 66:             0      1      0      0      0      0        0        0   194 #> 67:             0      1      0      1      0      0        0        0   562 #> 68:             0      0      0      0      0      0        0        1   745 #> 69:             0      0      0      0      0      0        0        1    28 #> 70:             0      0      0      0      0      0        0        1   724 #> 71:             0      0      1      0      1      1        1        0   664 #> 72:             0      0      1      1      0      0        0        0   194 #> 73:             1      0      0      0      0      0        0        1   462 #> 74:             0      0      1      0      1      1        1        0   562 #> 75:             1      0      0      0      0      0        0        1   462 #> 76:             1      0      0      0      0      0        0        1   216 #> 77:             1      0      0      0      0      0        0        1   724 #> 78:             1      1      0      1      0      1        1        0    28 #> 79:             1      0      1      0      1      1        1        0   243 #> 80:             1      0      0      0      0      0        0        1   462 #> 81:             1      1      0      0      0      0        1        0   745 #> 82:             1      0      0      0      0      0        0        1   194 #> 83:             0      0      0      1      0      1        1        0   845 #> 84:             0      0      0      0      0      0        0        1   277 #> 85:             1      0      0      0      0      0        0        1   243 #> 86:             0      0      0      0      0      0        0        1   562 #> 87:             1      0      1      0      1      0        0        0   176 #> 88:             0      0      0      0      0      0        0        1   194 #> 89:             0      0      0      0      0      0        0        1   270 #> 90:             1      0      0      0      0      0        1        0   845 #> 91:             1      0      0      0      0      0        0        1   664 #> 92:             1      0      0      0      0      0        0        1   745 #> 93:             0      1      0      0      0      1        1        0   562 #> 94:             0      1      1      0      0      0        1        0   820 #>     ethnicity_999 race_1 race_2 race_3 race_4 race_5 race_997 race_999 hh_id #>     age gender employment job_type education num_trips person_weight #>  1:  11      2          3      995         2         0           128 #>  2:   5      2          1        5         7         8           492 #>  3:   7    995          1        5         6         0           871 #>  4:   3      2          5      995         4        11           683 #>  5:  10    995          2        1       995         4           736 #>  6:  11    999          1        1         6         0           608 #>  7:   6      2          1        1         1         8            59 #>  8:   1      1          5      995       995         0           572 #>  9:   1    999          1        2         4         8           394 #> 10:   9      4          6      995         6         2            15 #> 11:   3    999          1        1         3         6           850 #> 12:   9    999          1        1         4         5           890 #> 13:  10      2          1        1         2         8           163 #> 14:  11      4          5      995       999        10           791 #> 15:   1      2          1        5         7         5           553 #> 16:   1      2          2        2       999         0           895 #> 17:   5    995          5      995         6         9           978 #> 18:  10      2          5      995       999        10           688 #> 19:   5      1          5      995         7        20           427 #> 20:   2      2          5      995       999         1           682 #> 21:   9    999          1        3         3        10           179 #> 22:   6      4          5      995         6         3           951 #> 23:   3      2        995      995         2         8           446 #> 24:  11      2          3        3         3         8           989 #> 25:   1    999          5      995         6        10           884 #> 26:   5      1          5      995         4        11           194 #> 27:  11      4          3        3         5         5           730 #> 28:   8      2          6      995         7         3           375 #> 29:   1      4        995      995         7        14           128 #> 30:  10      2          1        1         2         7           646 #> 31:   4    999        995      995         1        15           804 #> 32:   4      1          2        1         4         0           648 #> 33:   6    999          1        1       999         5            31 #> 34:  11    995          5      995         5         0           825 #> 35:   3      1          1        5       999        20           337 #> 36:  11      4          1        3         2         4           954 #> 37:  12    999        995      995         2         0           479 #> 38:   6      2          5      995       995         4           386 #> 39:   1    995          6      995       995         4           831 #> 40:  12      4          1        1         2        11           544 #> 41:   6    995        995      995         1         3           577 #> 42:   7      2          1        5         6         9           856 #> 43:  11      1          1        5         2         6           556 #> 44:   3    995          3      995         1        16            52 #> 45:   3    995        995      995         6        10           690 #> 46:  12      1        995      995         3        17           227 #> 47:   9      2          1        5       995         4           649 #> 48:   3      4          1        5         3         3           426 #> 49:  11      4          1        1       995         5            33 #> 50:   9    995        995      995         1         8           389 #> 51:   9      1        995      995         2         0            21 #> 52:   2      2          1      995         1        19           618 #> 53:   3      2          1        1         7         9           223 #> 54:  11      4          1      995         1         4           967 #> 55:   1      1        995      995         1        13           166 #> 56:   1    999          1        5         5        24           788 #> 57:  11      2          5      995         4         4            92 #> 58:   1      4        995      995         5         6           540 #> 59:   7      2          1      995         2        26           586 #> 60:   1    999          1        5         4         0           336 #> 61:   5      1        995      995         7         8           321 #> 62:   5    999          3        2         5        15           566 #> 63:   2    999          1        5         4         9           537 #> 64:   6      1          1        1         6         9           376 #> 65:  12    995          2        1       999         7           432 #> 66:   1    999          5      995         1         3           860 #> 67:   1      2          1        2         4         0           113 #> 68:   3      4        995      995         7         3           962 #> 69:   7      1          5      995         5         5           586 #> 70:  11      4          1        5         7         9           594 #> 71:  12      4          1        2       995         5           604 #> 72:   4    999          2        3         7         0           884 #> 73:  11      2          1        5         7         0           590 #> 74:  11      4          3        3       995         8           171 #> 75:  10      2          1        1       995        12           678 #> 76:   4      4          1      995         4         5            51 #> 77:   3    999          1        1         4         6           620 #> 78:  12      2          1        5         1        13           339 #> 79:   3      1          1        1         2         0           474 #> 80:  12    999          2      995         2         0           222 #> 81:   9      4          5      995         6         5           396 #> 82:  12    999          5      995         2         3           287 #> 83:   1      1          5      995         2        18           100 #> 84:   5      2          1        5         1        18            89 #> 85:   9      2          1        2       999         1           578 #> 86:   1    995          5      995       999         0           872 #> 87:  10    995          1        5       999         4           937 #> 88:  12      4          3        5       999         8           321 #> 89:   9      4          5      995         4         6           409 #> 90:   3    995          6      995         6         6            51 #> 91:   7      1          1        1         4        13           294 #> 92:  12    995          1        1         4        14            94 #> 93:   8      2        995      995         3        18           659 #> 94:   2      4          1        3         4        10           438 #>     age gender employment job_type education num_trips person_weight #>  #> $day #>      day_id person_id delivery_2 delivery_3 delivery_4 delivery_5 delivery_6 #>   1:     39       153          0          0          0          1          0 #>   2:     66       578          0          0          0          0          0 #>   3:     99       885          0          0          0          0          0 #>   4:    108       519          0          0          0          0          0 #>   5:    117        56        995        995        995        995        995 #>  ---                                                                         #> 179:   4085       153          0          0          0          0          0 #> 180:   4098      1231          0          0          0          0          0 #> 181:   4099       525          0          0          0          1          0 #> 182:   4116      1664        995        995        995        995        995 #> 183:   4117      2013        995        995        995        995        995 #>      delivery_7 delivery_8 delivery_996 travel_date begin_day end_day hh_id #>   1:          0          0            0  2023-05-16         1       1   845 #>   2:          0          0            1  2023-04-29         1       1   176 #>   3:          0          0            1  2023-04-26         1       1   243 #>   4:          0          0            1  2023-06-07         1       1   216 #>   5:        995        995          995  2023-05-28         1       1   462 #>  ---                                                                        #> 179:          0          0            1  2023-05-15         1       1   845 #> 180:          0          0            1  2023-06-08         1       1   981 #> 181:          0          0            0  2023-05-08         1       1   820 #> 182:        995        995          995  2023-04-21         1       1   745 #> 183:        995        995          995  2023-04-20         1     995   562 #>      num_trips day_weight #>   1:         4        519 #>   2:         3        199 #>   3:         3        614 #>   4:         2        381 #>   5:         6         66 #>  ---                      #> 179:         2        449 #> 180:         2        454 #> 181:         4        272 #> 182:         1        390 #> 183:         7         44 #>  #> $trip #>      day_id trip_id speed_mph distance_miles mode_type mode_1 mode_2 #>   1:     39    7123  9.505124      1.5841873         8      6    995 #>   2:     39    2763 26.539083      4.7328031         8     34    995 #>   3:     39    9715 16.791985      6.9966606         8      6    995 #>   4:     39    5116 14.918498      1.7404915         8      6    995 #>   5:     66   11311 42.142684      9.1309148         8     49     22 #>  ---                                                                 #> 680:   4117   13390 79.054610      0.1537173         1      1    995 #> 681:   4117    5446  2.317582      0.4557911         1      1    995 #> 682:   4117    5688 31.027928      3.4044533         8      7    995 #> 683:   4117    9478 31.305647     46.9584709         8      7    995 #> 684:   4117   14114  8.680979      1.4468299         8      6    995 #>      num_travelers d_purpose_category hh_id person_id travel_date trip_weight #>   1:             1                  7   845       153  2023-05-16         903 #>   2:             2                 12   845       153  2023-05-16         308 #>   3:             4                  7   845       153  2023-05-16         903 #>   4:             1                  7   845       153  2023-05-16         383 #>   5:             5                  8   176       578  2023-04-29         459 #>  ---                                                                          #> 680:             4                  8   562      2013  2023-04-20         888 #> 681:             2                  7   562      2013  2023-04-20         613 #> 682:             2                  1   562      2013  2023-04-20         909 #> 683:             1                  2   562      2013  2023-04-20         937 #> 684:             3                  9   562      2013  2023-04-20         443 #>  #> $vehicle #>     hh_id vehicle_id fuel_type hh_weight #>  1:    28        427         1       522 #>  2:   194        101         1       591 #>  3:   216       1321         1       972 #>  4:   270        378         5       355 #>  5:   270        418         1       355 #>  6:   462       1422         1        15 #>  7:   664       1334         1       524 #>  8:   664         85         5       524 #>  9:   724        321         2       664 #> 10:   745         46         1       678 #> 11:   845       1425         1       498 #> 12:   981        142         1       414 #> 13:   981        446         1       414 #> 14:   981        644         1       414 #>"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_find_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Find table location of a variable — hts_find_var","title":"Find table location of a variable — hts_find_var","text":"Find table location variable","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_find_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find table location of a variable — hts_find_var","text":"","code":"hts_find_var(var, data, variables_dt = variable_list)"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_find_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find table location of a variable — hts_find_var","text":"var searchable variable string format data List household, person, vehicle, day, trip tables data.table format. variables_dt codebook variable list data table format","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_find_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find table location of a variable — hts_find_var","text":"variable location string format","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_find_var.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find table location of a variable — hts_find_var","text":"","code":"hts_find_var(\"income_detailed\", data = test_data) #> [1] \"hh\""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_get_keycols.html","id":null,"dir":"Reference","previous_headings":"","what":"Find key columns in table — hts_get_keycols","title":"Find key columns in table — hts_get_keycols","text":"Find key columns table","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_get_keycols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find key columns in table — hts_get_keycols","text":"","code":"hts_get_keycols(dt, ids = TRUE, weights = TRUE, priority = FALSE)"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_get_keycols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find key columns in table — hts_get_keycols","text":"dt Dataset find key columns data.table format ids Boolean whether return id columns. Default TRUE. weights Boolean whether return weight columns. Default TRUE. priority Boolean whether return highest level weight/id. Default FALSE.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_get_keycols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find key columns in table — hts_get_keycols","text":"List names key columns dataset.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_get_keycols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find key columns in table — hts_get_keycols","text":"","code":"require(data.table) hts_get_keycols(dt = trip) #> [1] \"hh_id\"       \"person_id\"   \"day_id\"      \"trip_id\"     \"trip_weight\" hts_get_keycols(dt = trip, priority = TRUE) #> [1] \"trip_id\"     \"trip_weight\""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_get_ns.html","id":null,"dir":"Reference","previous_headings":"","what":"Get counts from dataset — hts_get_ns","title":"Get counts from dataset — hts_get_ns","text":"Get counts dataset","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_get_ns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get counts from dataset — hts_get_ns","text":"","code":"hts_get_ns(   prepped_dt,   weighted,   ids = c(\"hh_id\", \"person_id\", \"day_id\", \"trip_id\", \"vehicle_id\"),   wt_col )"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_get_ns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get counts from dataset — hts_get_ns","text":"prepped_dt Dataset pull counts . weighted Boolean whether pull weighted estimates. ids list possible ids return counts wt_col weight column return sum ","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_get_ns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get counts from dataset — hts_get_ns","text":"List unweighted counts, weighted counts, highest level unit.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_get_ns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get counts from dataset — hts_get_ns","text":"","code":"require(data.table)"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_melt_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Melts checkbox variables into a single variable — hts_melt_vars","title":"Melts checkbox variables into a single variable — hts_melt_vars","text":"Melts checkbox variables single variable","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_melt_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Melts checkbox variables into a single variable — hts_melt_vars","text":"","code":"hts_melt_vars(   shared_name = NULL,   wide_dt = NULL,   shared_name_vars = NULL,   variables_dt = variable_list,   data = hts_data,   ids = c(\"hh_id\", \"person_id\", \"day_id\", \"trip_id\", \"vehicle_id\"),   remove_missing = TRUE,   missing_values = c(\"Missing Response\", \"995\"),   checkbox_label_sep = \":\",   to_single_row = FALSE )"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_melt_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Melts checkbox variables into a single variable — hts_melt_vars","text":"shared_name Shared name checkbox variable melt (e.g., 'race_1', 'race_2' shared name 'race'). Defaults NULL. wide_dt Table containing checkbox variables melt data.table format. shared_name_vars List checkbox variables shared name. Defaults NULL. variables_dt List variable locations descriptions data.table format. data List containing household, person, day, trip, vehicle datasets data.table format. ids unique identifiers appearing wide_dt remove_missing Boolean remove rows missing values. Defaults TRUE. missing_values Missing values remove. Defaults 'Missing Response' 995. checkbox_label_sep Character use split description checkbox variable variable list. Defaults ':' to_single_row Boolean treating multiple checkbox selections 'Two '. Defaults FALSE.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_melt_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Melts checkbox variables into a single variable — hts_melt_vars","text":"Inputted data table checkbox variables melted single variable, 'variable' column indicate original variable names 'value' column original value checkbox variable.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_melt_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Melts checkbox variables into a single variable — hts_melt_vars","text":"","code":"require(data.table) require(stringr) hts_melt_vars(   shared_name = \"race\",   wide_dt = person,   data = list(     \"hh\" = hh,     \"person\" = person,     \"day\" = day,     \"trip\" = trip,     \"vehicle\" = vehicle   ) ) #>        person_id hh_id variable value                      race #>     1:         1   356   race_1     0 African American or Black #>     2:         2   724   race_1     1 African American or Black #>     3:         3   681   race_1     0 African American or Black #>     4:         4   114   race_1     0 African American or Black #>     5:         5   165   race_1     0 African American or Black #>    ---                                                          #> 14325:      2043   931 race_999     0      Prefer not to answer #> 14326:      2044   667 race_999     1      Prefer not to answer #> 14327:      2045   543 race_999     1      Prefer not to answer #> 14328:      2046   749 race_999     1      Prefer not to answer #> 14329:      2047   364 race_999     1      Prefer not to answer"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_prep_byvar.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare variable to be summarized — hts_prep_byvar","title":"Prepare variable to be summarized — hts_prep_byvar","text":"Prepare variable summarized","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_prep_byvar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare variable to be summarized — hts_prep_byvar","text":"","code":"hts_prep_byvar(   summarize_by = NULL,   variables_dt = variable_list,   hts_data,   byvar_ids = c(\"hh_id\", \"person_id\", \"day_id\", \"trip_id\", \"vehicle_id\"),   byvar_wts = c(\"hh_weight\", \"person_weight\", \"day_weight\", \"trip_weight\", \"hh_weight\"),   ... )"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_prep_byvar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare variable to be summarized — hts_prep_byvar","text":"summarize_by Name variable prepped. Default NULL. variables_dt List variable locations descriptions data.table format. hts_data List containing household, person, day, trip, vehicle datasets data.table format. byvar_ids unique identifiers table hts_data byvar_wts weight column table hts_data ... Additional parameters pass link{hts_melt_vars}","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_prep_byvar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare variable to be summarized — hts_prep_byvar","text":"Data table containing variable summarized key columns.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_prep_byvar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare variable to be summarized — hts_prep_byvar","text":"","code":"hts_prep_byvar(   summarize_by = \"age\",   variables_dt = variable_list,   hts_data = list(     \"hh\" = hh,     \"person\" = person,     \"day\" = day,     \"trip\" = trip,     \"vehicle\" = vehicle   ) ) #>       hh_id person_id person_weight age #>    1:   356         1           229  10 #>    2:   724         2           128  11 #>    3:   681         3           888   7 #>    4:   114         4           350   2 #>    5:   165         5           825  10 #>   ---                                   #> 2043:   931      2043           116   7 #> 2044:   667      2044           122   1 #> 2045:   543      2045           494   3 #> 2046:   749      2046           874  11 #> 2047:   364      2047           393  11 hts_prep_byvar(   summarize_by = \"race\",   variables_dt = variable_list,   hts_data = list(     \"hh\" = hh,     \"person\" = person,     \"day\" = day,     \"trip\" = trip,     \"vehicle\" = vehicle   ) ) #>       person_id hh_id                 race #>    1:         2   724          Two or more #>    2:         8   365          Two or more #>    3:        12   921          Two or more #>    4:        13    28          Two or more #>    5:        16   368          Two or more #>   ---                                      #> 2022:      2042   461 Prefer not to answer #> 2023:      2044   667 Prefer not to answer #> 2024:      2045   543 Prefer not to answer #> 2025:      2046   749 Prefer not to answer #> 2026:      2047   364 Prefer not to answer"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_prep_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare datasets to make summaries — hts_prep_data","title":"Prepare datasets to make summaries — hts_prep_data","text":"Prepare datasets make summaries","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_prep_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare datasets to make summaries — hts_prep_data","text":"","code":"hts_prep_data(   summarize_var = NULL,   summarize_by = NULL,   variables_dt = variable_list,   data = hts_data,   id_cols = c(\"hh_id\", \"person_id\", \"day_id\", \"trip_id\", \"vehicle_id\"),   weighted = TRUE,   wt_cols = c(\"hh_weight\", \"person_weight\", \"day_weight\", \"trip_weight\", \"hh_weight\"),   remove_outliers = TRUE,   threshold = 0.975,   remove_missing = TRUE,   missing_values = c(\"Missing Response\", \"995\"),   not_imputable = -1,   strataname = NULL )"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_prep_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare datasets to make summaries — hts_prep_data","text":"summarize_var Name variable summarize. Default NULL summarize_by Name variable summarize summarize_var . Default NULL. variables_dt List variable locations descriptions data.table format. data List household, person, vehicle, day, trip tables data.table format. id_cols name unique identifier table hts_data weighted Whether data weighted. Default TRUE. wt_cols weight name table hts_data remove_outliers Whether remove outliers numeric variable. Default TRUE. threshold Threshold define outliers. Default 0.975. remove_missing Whether remove missing values summary. Default TRUE. missing_values Missing values remove. Default 995. not_imputable Value representing 'imputable' remove. Default -1. strataname Name strata name bring . Default NULL.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_prep_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare datasets to make summaries — hts_prep_data","text":"List containing categorical numeric datasets summary variables key columns, either whether summarize variable shared breakdown outliers, depending summarize variable categorical numeric.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_prep_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare datasets to make summaries — hts_prep_data","text":"","code":"require(data.table) require(stringr) hts_prep_data(summarize_var = 'age',               variables_dt = variable_list,               data = list('hh' = hh,                             'person' = person,                             'day' = day,                             'trip' = trip,                             'vehicle' = vehicle)) #> Creating a summary of person age  #> $cat #>       hh_id person_id age person_weight #>    1:   356         1  10           229 #>    2:   724         2  11           128 #>    3:   681         3   7           888 #>    4:   114         4   2           350 #>    5:   165         5  10           825 #>   ---                                   #> 2043:   931      2043   7           116 #> 2044:   667      2044   1           122 #> 2045:   543      2045   3           494 #> 2046:   749      2046  11           874 #> 2047:   364      2047  11           393 #>  #> $num #> NULL #>  hts_prep_data(summarize_var = 'speed_mph',               summarize_by = 'age',               variables_dt = variable_list,               data = list('hh' = hh,                             'person' = person,                             'day' = day,                             'trip' = trip,                             'vehicle' = vehicle)) #> Creating a summary of trip speed_mph broken down by person age #> $cat #>        hh_id person_id day_id trip_id person_weight trip_weight speed_mph age #>     1:     2       425    388   11340           130         258      1-10  12 #>     2:     2       425    388    9915           130          57     19-28  12 #>     3:     2       425   1320    4947           130         233     10-19  12 #>     4:     2       892   1559    4450           715         845 1 or less   3 #>     5:     2       892   1559    7943           715         685     10-19   3 #>    ---                                                                        #> 14718:  1000       352   1663    2279           883         177     19-28  10 #> 14719:  1000       352   3389    7926           883         819     10-19  10 #> 14720:  1000       352   3389    1639           883          25     10-19  10 #> 14721:  1000       352   3389   13926           883         216      1-10  10 #> 14722:  1000       352   3389   11951           883         700      1-10  10 #>  #> $num #>        hh_id person_id day_id trip_id person_weight trip_weight speed_mph age #>     1:     2       425    388   11340           130         258  2.981870  12 #>     2:     2       425    388    9915           130          57 20.761805  12 #>     3:     2       425   1320    4947           130         233 16.885215  12 #>     4:     2       892   1559    4450           715         845  0.610109   3 #>     5:     2       892   1559    7943           715         685 10.902785   3 #>    ---                                                                        #> 14718:  1000       352   1663    2279           883         177 26.002610  10 #> 14719:  1000       352   3389    7926           883         819 10.201849  10 #> 14720:  1000       352   3389    1639           883          25 13.915420  10 #> 14721:  1000       352   3389   13926           883         216  3.337872  10 #> 14722:  1000       352   3389   11951           883         700  2.583252  10 #>  #> $outliers #>    threshold num_removed min_outlier max_outlier #> 1:     0.975         378    112.9918    228233.1 #>                                                            hts_prep_data(summarize_var = 'employment',               summarize_by = c('age', 'race'),               variables_dt = variable_list,               data = list('hh' = hh,                             'person' = person,                             'day' = day,                             'trip' = trip,                             'vehicle' = vehicle)) #> Creating a summary of person employment broken down by person age and person race #> $cat #>       hh_id person_id person_weight employment age                 race #>    1:     2       217            92          3   3          Two or more #>    2:     2       425           130          5  12          Two or more #>    3:     2       892           715          1   3 Prefer not to answer #>    4:     3       417           987          8  10 Prefer not to answer #>    5:     3      1671           644          5   9          Two or more #>   ---                                                                   #> 1749:   997      1724           452          2  11 Prefer not to answer #> 1750:   998       409           406          5   7          Two or more #> 1751:   998       817           664          6   4 Prefer not to answer #> 1752:   999      1305           836          6  10          Two or more #> 1753:  1000       352           883          1  10          Two or more #>  #> $num #> NULL #>"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_prep_triprate.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare datasets for trip rate calculations — hts_prep_triprate","title":"Prepare datasets for trip rate calculations — hts_prep_triprate","text":"Prepare datasets trip rate calculations","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_prep_triprate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare datasets for trip rate calculations — hts_prep_triprate","text":"","code":"hts_prep_triprate(   summarize_by = NULL,   variables_dt = variable_list,   trip_name = \"trip\",   day_name = \"day\",   ids = c(\"hh_id\", \"person_id\", \"day_id\", \"trip_id\", \"vehicle_id\"),   wts = c(\"hh_weight\", \"person_weight\", \"day_weight\", \"trip_weight\", \"hh_weight\"),   remove_outliers = TRUE,   threshold = 0.975,   weighted = TRUE,   hts_data )"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_prep_triprate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare datasets for trip rate calculations — hts_prep_triprate","text":"summarize_by Name variable summarize trip rates . Default NULL. variables_dt List variable locations descriptions data.table format. trip_name Name trip dataset hts_data. day_name Name day dataset hts_data. ids name unique identifier table hts_data wts name weight column table hts_data remove_outliers Boolean whether remove outliers dataset. Default TRUE. threshold Threshold define outliers. Default 0.975. weighted Whether data weighted. Default TRUE. hts_data List containing household, person, day, trip, vehicle datasets data.table format.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_prep_triprate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare datasets for trip rate calculations — hts_prep_triprate","text":"List binned number trips key columns summarize variable, unbinned number trips key columns summarize variable, breakdown outliers removed.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_prep_triprate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare datasets for trip rate calculations — hts_prep_triprate","text":"","code":"require(data.table) require(stringr) hts_prep_triprate(   variables_dt = variable_list,   trip_name = \"trip\",   day_name = \"day\",   hts_data = list(     \"hh\" = hh,     \"person\" = person,     \"day\" = day,     \"trip\" = trip,     \"vehicle\" = vehicle   ) ) #> $cat #>       day_id person_id hh_id day_weight num_trips_wtd #>    1:      1       820   642        583           0-7 #>    2:      2        24    24        220           0-7 #>    3:      3      1866   888         73          7-14 #>    4:      4      1915   875         63         28-34 #>    5:      5       415   976        139          7-14 #>   ---                                                 #> 4017:   4121      1321   595        755           0-7 #> 4018:   4122      1619    47        996           0-7 #> 4019:   4123       886   474        818           0-7 #> 4020:   4124       964   764        460           0-7 #> 4021:   4125      1684   876        762           0-7 #>  #> $num #>       day_id person_id hh_id day_weight num_trips_wtd #>    1:      1       820   642        583     4.1509434 #>    2:      2        24    24        220     3.5090909 #>    3:      3      1866   888         73     9.2465753 #>    4:      4      1915   875         63    30.0793651 #>    5:      5       415   976        139    13.2805755 #>   ---                                                 #> 4017:   4121      1321   595        755     0.6556291 #> 4018:   4122      1619    47        996     2.8945783 #> 4019:   4123       886   474        818     3.8581907 #> 4020:   4124       964   764        460     2.9608696 #> 4021:   4125      1684   876        762     5.1679790 #>  #> $outliers #>    threshold num_removed min_outlier max_outlier #> 1:     0.975         104    66.95918    391.8182 #>  hts_prep_triprate(   summarize_by = \"age\",   variables_dt = variable_list,   trip_name = \"trip\",   day_name = \"day\",   hts_data = list(     \"hh\" = hh,     \"person\" = person,     \"day\" = day,     \"trip\" = trip,     \"vehicle\" = vehicle   ) ) #> $cat #>       hh_id person_id day_id day_weight person_weight age trip_count_wtd #>    1:     2       425    388        613           130  12           1284 #>    2:     2       425   1320        593           130  12            233 #>    3:     2       892   1559        983           715   3           2326 #>    4:     2       973   1178        556            57   5           2293 #>    5:     2       973   3183        518            57   5           2406 #>   ---                                                                    #> 4017:   999      1305   2315        119           836  10           1721 #> 4018:   999      1305   3055        463           836  10           2337 #> 4019:  1000       352   1165        245           883  10           1633 #> 4020:  1000       352   1663        751           883  10           1141 #> 4021:  1000       352   3389        969           883  10           1760 #>       num_trips_wtd #>    1:           0-7 #>    2:           0-7 #>    3:           0-7 #>    4:           0-7 #>    5:           0-7 #>   ---               #> 4017:         14-21 #> 4018:           0-7 #> 4019:           0-7 #> 4020:           0-7 #> 4021:           0-7 #>  #> $num #>       hh_id person_id day_id day_weight person_weight age trip_count_wtd #>    1:     2       425    388        613           130  12           1284 #>    2:     2       425   1320        593           130  12            233 #>    3:     2       892   1559        983           715   3           2326 #>    4:     2       973   1178        556            57   5           2293 #>    5:     2       973   3183        518            57   5           2406 #>   ---                                                                    #> 4017:   999      1305   2315        119           836  10           1721 #> 4018:   999      1305   3055        463           836  10           2337 #> 4019:  1000       352   1165        245           883  10           1633 #> 4020:  1000       352   1663        751           883  10           1141 #> 4021:  1000       352   3389        969           883  10           1760 #>       num_trips_wtd #>    1:     2.0946166 #>    2:     0.3929174 #>    3:     2.3662258 #>    4:     4.1241007 #>    5:     4.6447876 #>   ---               #> 4017:    14.4621849 #> 4018:     5.0475162 #> 4019:     6.6653061 #> 4020:     1.5193076 #> 4021:     1.8163055 #>  #> $outliers #>    threshold num_removed min_outlier max_outlier #> 1:     0.975         104    66.95918    391.8182 #>"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_prep_variable.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare datasets to make summaries — hts_prep_variable","title":"Prepare datasets to make summaries — hts_prep_variable","text":"Prepare datasets make summaries","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_prep_variable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare datasets to make summaries — hts_prep_variable","text":"","code":"hts_prep_variable(   summarize_var = NULL,   summarize_by = NULL,   variables_dt = variable_list,   data = hts_data,   id_cols = c(\"hh_id\", \"person_id\", \"day_id\", \"trip_id\", \"vehicle_id\"),   weighted = TRUE,   wt_cols = c(\"hh_weight\", \"person_weight\", \"day_weight\", \"trip_weight\", \"hh_weight\"),   remove_outliers = TRUE,   threshold = 0.975,   remove_missing = TRUE,   missing_values = c(\"Missing Response\", \"995\"),   not_imputable = -1,   strataname = NULL )"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_prep_variable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare datasets to make summaries — hts_prep_variable","text":"summarize_var Name variable summarize. Default NULL summarize_by Name variable summarize summarize_var . Default NULL. variables_dt List variable locations descriptions data.table format. data List household, person, vehicle, day, trip tables data.table format. id_cols name unique identifier table hts_data weighted Whether data weighted. Default TRUE. wt_cols weight name table hts_data remove_outliers Whether remove outliers numeric variable. Default TRUE. threshold Threshold define outliers. Default 0.975. remove_missing Whether remove missing values summary. Default TRUE. missing_values Missing values remove. Default 995. not_imputable Value representing 'imputable' remove. Default -1. strataname Name strata name bring . Default NULL.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_prep_variable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare datasets to make summaries — hts_prep_variable","text":"List containing categorical numeric datasets summary variables key columns, either whether summarize variable shared breakdown outliers, depending summarize variable categorical numeric.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_prep_variable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare datasets to make summaries — hts_prep_variable","text":"","code":"require(data.table) require(stringr) hts_prep_variable(   summarize_var = \"age\",   variables_dt = variable_list,   data = list(     \"hh\" = hh,     \"person\" = person,     \"day\" = day,     \"trip\" = trip,     \"vehicle\" = vehicle   ) ) #> $cat #>       hh_id person_id age person_weight #>    1:   356         1  10           229 #>    2:   724         2  11           128 #>    3:   681         3   7           888 #>    4:   114         4   2           350 #>    5:   165         5  10           825 #>   ---                                   #> 2043:   931      2043   7           116 #> 2044:   667      2044   1           122 #> 2045:   543      2045   3           494 #> 2046:   749      2046  11           874 #> 2047:   364      2047  11           393 #>  #> $num #> NULL #>  hts_prep_variable(   summarize_var = \"speed_mph\",   summarize_by = \"age\",   variables_dt = variable_list,   data = list(     \"hh\" = hh,     \"person\" = person,     \"day\" = day,     \"trip\" = trip,     \"vehicle\" = vehicle   ) ) #> $cat #>        hh_id person_id day_id trip_id person_weight trip_weight speed_mph age #>     1:     2       425    388   11340           130         258      1-10  12 #>     2:     2       425    388    9915           130          57     19-28  12 #>     3:     2       425   1320    4947           130         233     10-19  12 #>     4:     2       892   1559    4450           715         845 1 or less   3 #>     5:     2       892   1559    7943           715         685     10-19   3 #>    ---                                                                        #> 14718:  1000       352   1663    2279           883         177     19-28  10 #> 14719:  1000       352   3389    7926           883         819     10-19  10 #> 14720:  1000       352   3389    1639           883          25     10-19  10 #> 14721:  1000       352   3389   13926           883         216      1-10  10 #> 14722:  1000       352   3389   11951           883         700      1-10  10 #>  #> $num #>        hh_id person_id day_id trip_id person_weight trip_weight speed_mph age #>     1:     2       425    388   11340           130         258  2.981870  12 #>     2:     2       425    388    9915           130          57 20.761805  12 #>     3:     2       425   1320    4947           130         233 16.885215  12 #>     4:     2       892   1559    4450           715         845  0.610109   3 #>     5:     2       892   1559    7943           715         685 10.902785   3 #>    ---                                                                        #> 14718:  1000       352   1663    2279           883         177 26.002610  10 #> 14719:  1000       352   3389    7926           883         819 10.201849  10 #> 14720:  1000       352   3389    1639           883          25 13.915420  10 #> 14721:  1000       352   3389   13926           883         216  3.337872  10 #> 14722:  1000       352   3389   11951           883         700  2.583252  10 #>  #> $outliers #>    threshold num_removed min_outlier max_outlier #> 1:     0.975         378    112.9918    228233.1 #>    hts_prep_variable(   summarize_var = \"employment\",   summarize_by = c(\"age\", \"race\"),   variables_dt = variable_list,   data = list(     \"hh\" = hh,     \"person\" = person,     \"day\" = day,     \"trip\" = trip,     \"vehicle\" = vehicle   ) ) #> $cat #>       hh_id person_id person_weight employment age                 race #>    1:     2       217            92          3   3          Two or more #>    2:     2       425           130          5  12          Two or more #>    3:     2       892           715          1   3 Prefer not to answer #>    4:     3       417           987          8  10 Prefer not to answer #>    5:     3      1671           644          5   9          Two or more #>   ---                                                                   #> 1749:   997      1724           452          2  11 Prefer not to answer #> 1750:   998       409           406          5   7          Two or more #> 1751:   998       817           664          6   4 Prefer not to answer #> 1752:   999      1305           836          6  10          Two or more #> 1753:  1000       352           883          1  10          Two or more #>  #> $num #> NULL #>"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_remove_missing_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove missing data for summary variables — hts_remove_missing_data","title":"Remove missing data for summary variables — hts_remove_missing_data","text":"Remove missing data summary variables","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_remove_missing_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove missing data for summary variables — hts_remove_missing_data","text":"","code":"hts_remove_missing_data(   hts_data,   variables_dt,   summarize_var,   ids = c(\"hh_id\", \"person_id\", \"day_id\", \"trip_id\", \"vehicle_id\"),   summarize_by = NULL,   missing_values = c(\"Missing Response\", \"995\"),   not_imputable = -1 )"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_remove_missing_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove missing data for summary variables — hts_remove_missing_data","text":"hts_data List containing household, person, day, trip, vehicle datasets data.table format. variables_dt variable list descriptions table locations variables. summarize_var Variable summarized missing data removed. ids names unique identifiers table hts_data summarize_by Variable summarized missing data removed. Default NULL. missing_values Missing values removed. Defaults 995 'Missing Response'. not_imputable Value meaning not_imputable removed. Default -1.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_remove_missing_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove missing data for summary variables — hts_remove_missing_data","text":"Inputted list datasets without missing values specified variables.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_remove_missing_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove missing data for summary variables — hts_remove_missing_data","text":"","code":"require(data.table) hts_remove_missing_data(   hts_data = list(     \"hh\" = hh,     \"person\" = person,     \"day\" = day,     \"trip\" = trip,     \"vehicle\" = vehicle   ),   variables_dt = variable_list,   summarize_var = \"speed_mph\",   summarize_by = \"mode_type\" ) #> $hh #>       hh_id sample_segment income_detailed income_followup  home_lon home_lat #>    1:     1             13               7             995 -86.30631 38.48649 #>    2:     2             16               5             995 -85.72573 39.71972 #>    3:     3              2               9             995 -83.36336 39.12412 #>    4:     4              4               8             995 -98.43844 36.68569 #>    5:     5              1               8             995 -92.89289 34.96897 #>   ---                                                                         #>  996:   996             10               9             995 -86.72673 34.93393 #>  997:   997             16               5             995 -84.30430 39.09610 #>  998:   998             13               2             995 -85.66567 35.24224 #>  999:   999              6               9             995 -98.75876 37.89089 #> 1000:  1000              2               5             995 -90.67067 36.41942 #>       home_county residence_type num_people num_trips hh_weight #>    1:           1              4          0         0        54 #>    2:           3            995          4        21       478 #>    3:           3            995          2        17       760 #>    4:           3              1          1         0       754 #>    5:           3              2          1         4       839 #>   ---                                                           #>  996:           1              5          2        18       118 #>  997:           3              4          3        11        14 #>  998:           1            995          2        15       546 #>  999:           2              4          1        16       745 #> 1000:           3              4          1        10       133 #>  #> $person #>       person_id ethnicity_1 ethnicity_2 ethnicity_3 ethnicity_4 ethnicity_997 #>    1:         1           0           1           1           0             1 #>    2:         2           1           0           0           1             1 #>    3:         3           0           0           0           0             0 #>    4:         4           0           0           0           0             0 #>    5:         5           0           1           1           0             1 #>   ---                                                                         #> 2043:      2043           1           0           0           0             1 #> 2044:      2044           1           0           0           1             1 #> 2045:      2045           0           0           0           0             0 #> 2046:      2046           0           0           0           0             1 #> 2047:      2047           0           0           0           0             0 #>       ethnicity_999 race_1 race_2 race_3 race_4 race_5 race_997 race_999 hh_id #>    1:             0      0      0      0      0      0        0        1   356 #>    2:             0      1      1      0      0      0        1        0   724 #>    3:             1      0      1      0      1      1        1        0   681 #>    4:             1      0      0      0      0      0        0        1   114 #>    5:             0      0      0      0      0      0        0        1   165 #>   ---                                                                          #> 2043:             0      0      0      1      1      0        0        0   931 #> 2044:             0      0      0      0      0      0        0        1   667 #> 2045:             1      0      0      0      0      0        0        1   543 #> 2046:             0      0      0      0      0      0        0        1   749 #> 2047:             1      0      0      0      0      0        0        1   364 #>       age gender employment job_type education num_trips person_weight #>    1:  10      2          1        1         6        12           229 #>    2:  11      2          3      995         2         0           128 #>    3:   7      2        995      995         3        10           888 #>    4:   2    999        995      995         6         8           350 #>    5:  10    995          2        1         4         4           825 #>   ---                                                                  #> 2043:   7    995          1        1       995         8           116 #> 2044:   1    995          1        1       995        12           122 #> 2045:   3      1          1        5         3         0           494 #> 2046:  11      2          1        5         6        11           874 #> 2047:  11    995          5      995         3         0           393 #>  #> $day #>       day_id person_id delivery_2 delivery_3 delivery_4 delivery_5 delivery_6 #>    1:      1       820        995        995        995        995        995 #>    2:      2        24          0          0          0          0          0 #>    3:      3      1866          0          0          0          0          0 #>    4:      4      1915        995        995        995        995        995 #>    5:      5       415          0          0          0          1          0 #>   ---                                                                         #> 4121:   4121      1321          0          1          0          1          0 #> 4122:   4122      1619          0          0          0          0          0 #> 4123:   4123       886        995        995        995        995        995 #> 4124:   4124       964          0          0          0          0          0 #> 4125:   4125      1684          0          0          0          0          0 #>       delivery_7 delivery_8 delivery_996 travel_date begin_day end_day hh_id #>    1:        995        995          995  2023-05-28         1       1   642 #>    2:          0          0            1  2023-05-23         1       1    24 #>    3:          0          0            1  2023-05-25         1       1   888 #>    4:        995        995          995  2023-04-17         1       1   875 #>    5:          0          0            0  2023-05-26         1       1   976 #>   ---                                                                        #> 4121:          0          0            0  2023-05-20         1       1   595 #> 4122:          0          0            1  2023-04-09         1       1    47 #> 4123:        995        995          995  2023-04-12       995     995   474 #> 4124:          0          0            1  2023-04-22         1       1   764 #> 4125:          0          0            1  2023-05-30         1       1   876 #>       num_trips day_weight #>    1:         5        583 #>    2:         5        220 #>    3:         2         73 #>    4:         6         63 #>    5:         3        139 #>   ---                      #> 4121:         1        755 #> 4122:         5        996 #> 4123:         5        818 #> 4124:         2        460 #> 4125:         5        762 #>  #> $trip #>        day_id trip_id  speed_mph distance_miles mode_type mode_1 mode_2 #>     1:      1    6848  0.3570582     0.07736261         8      6    995 #>     2:      1    6099  3.8030030     0.31691692         8     34    995 #>     3:      1   15759  9.2827577     0.16244826         1      1    995 #>     4:      1   13883 10.7289440    10.72894403        13      2     23 #>     5:      1    9240  1.3936891     0.47308002         2      2    995 #>    ---                                                                  #> 15449:   4125    4505 16.3377147     3.23577517         8      6    995 #> 15450:   4125    7897 42.9297111    22.65734754         8      6    995 #> 15451:   4125     719  1.5648402     7.77203953         1      1    995 #> 15452:   4125   14260 10.5795319     1.76325532         8      7    995 #> 15453:   4125    4397  8.5320851     1.42201419         8     34    995 #>        num_travelers d_purpose_category hh_id person_id travel_date trip_weight #>     1:             1                  7   642       820  2023-05-28         957 #>     2:             2                  7   642       820  2023-05-28         237 #>     3:             1                  9   642       820  2023-05-28         287 #>     4:             1                 11   642       820  2023-05-28         361 #>     5:             1                  1   642       820  2023-05-28         578 #>    ---                                                                          #> 15449:             1                 12   876      1684  2023-05-30         999 #> 15450:             1                  2   876      1684  2023-05-30         167 #> 15451:             1                 12   876      1684  2023-05-30         954 #> 15452:             1                  2   876      1684  2023-05-30         841 #> 15453:             2                  7   876      1684  2023-05-30         977 #>  #> $vehicle #>       hh_id vehicle_id fuel_type hh_weight #>    1:     1       1103         1        54 #>    2:     2        521         1       478 #>    3:     2       1356         1       478 #>    4:     3       1210         1       760 #>    5:     6       1394         1       987 #>   ---                                      #> 1430:   998        520         1       546 #> 1431:   998       1141         1       546 #> 1432:   999        659         1       745 #> 1433:   999        108         1       745 #> 1434:  1000       1031         1       133 #>"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_remove_outliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove outliers from a numeric variable — hts_remove_outliers","title":"Remove outliers from a numeric variable — hts_remove_outliers","text":"Remove outliers numeric variable","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_remove_outliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove outliers from a numeric variable — hts_remove_outliers","text":"","code":"hts_remove_outliers(var_dt, numvar = NULL, threshold = 0.975)"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_remove_outliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove outliers from a numeric variable — hts_remove_outliers","text":"var_dt Dataset numeric variable remove outliers data.table format. numvar Numeric variable remove outliers . Default NULL. threshold Threshold define outlier . Default .975.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_remove_outliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove outliers from a numeric variable — hts_remove_outliers","text":"List outliers removed dataset without outliers.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_remove_outliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove outliers from a numeric variable — hts_remove_outliers","text":"","code":"require(data.table) hts_remove_outliers(var_dt = trip, numvar = \"speed_mph\") #> $outlier_description #>    threshold num_removed min_outlier max_outlier #> 1:     0.975         378    112.9918    228233.1 #>  #> $dt #>        day_id trip_id  speed_mph distance_miles mode_type mode_1 mode_2 #>     1:      1    6848  0.3570582     0.07736261         8      6    995 #>     2:      1    6099  3.8030030     0.31691692         8     34    995 #>     3:      1   15759  9.2827577     0.16244826         1      1    995 #>     4:      1   13883 10.7289440    10.72894403        13      2     23 #>     5:      1    9240  1.3936891     0.47308002         2      2    995 #>    ---                                                                  #> 14718:   4125    4505 16.3377147     3.23577517         8      6    995 #> 14719:   4125    7897 42.9297111    22.65734754         8      6    995 #> 14720:   4125     719  1.5648402     7.77203953         1      1    995 #> 14721:   4125   14260 10.5795319     1.76325532         8      7    995 #> 14722:   4125    4397  8.5320851     1.42201419         8     34    995 #>        num_travelers d_purpose_category hh_id person_id travel_date trip_weight #>     1:             1                  7   642       820  2023-05-28         957 #>     2:             2                  7   642       820  2023-05-28         237 #>     3:             1                  9   642       820  2023-05-28         287 #>     4:             1                 11   642       820  2023-05-28         361 #>     5:             1                  1   642       820  2023-05-28         578 #>    ---                                                                          #> 14718:             1                 12   876      1684  2023-05-30         999 #> 14719:             1                  2   876      1684  2023-05-30         167 #> 14720:             1                 12   876      1684  2023-05-30         954 #> 14721:             1                  2   876      1684  2023-05-30         841 #> 14722:             2                  7   876      1684  2023-05-30         977 #>"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Make household travel survey summaries — hts_summary","title":"Make household travel survey summaries — hts_summary","text":"Make household travel survey summaries","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make household travel survey summaries — hts_summary","text":"","code":"hts_summary(   prepped_dt,   summarize_var,   summarize_by = NULL,   summarize_vartype = \"categorical\",   id_cols = c(\"hh_id\", \"person_id\", \"day_id\", \"trip_id\", \"vehicle_id\"),   weighted = TRUE,   se = FALSE,   wtname = NULL,   strataname = NULL,   checkbox_valname = \"value\",   checkbox_yesval = 1 )"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make household travel survey summaries — hts_summary","text":"prepped_dt prepared dataset data.table format variable summarize, variable summarize , weights, used. summarize_var Name variable summarize. Default NULL. summarize_by Name variable summarize summarize_var . Default NULL. summarize_vartype String; one either 'categorical' (variable summarized categorical), 'checkbox' (variable summarized derived multiple response, aka select---apply question) 'numeric', variable summarized numeric. id_cols names possible ids prepped_dt return unique counts weighted Whether data weighted. Default TRUE. se Whether calculate standard error. Default FALSE. set FALSE weighted FALSE. wtname Name weight column use. Default NULL. Must specified weighted = TRUE. strataname Name strata name bring . Default NULL. checkbox_valname Name column checkbox value. Default 'value'. Must provided summarize_var checkbox variable. checkbox_yesval Value checkbox_valname indicates selected. Default 1. Must provided summarize_var checkbox variable.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make household travel survey summaries — hts_summary","text":"list containing (applicable) categorical numeric summaries specified variable(s), well sample sizes whether summarized variable shared checkbox variable. access categorical/numeric df use output$summary. access weighted df use output$summary$wtd, output$summary$unwtd unweighted df. access weight name use output$summary$weight_name. access sample sizes use output$n_ls. access weighted unweighted sample sizes respectively, use output$n_ls$wtd output$n_ls$unwtd.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make household travel survey summaries — hts_summary","text":"","code":"require(data.table) require(stringr) require(dplyr) #> Loading required package: dplyr #> Warning: package 'dplyr' was built under R version 4.3.2 #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:data.table': #>  #>     between, first, last #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union require(srvyr) #> Loading required package: srvyr #> Warning: package 'srvyr' was built under R version 4.3.2 #>  #> Attaching package: 'srvyr' #> The following object is masked from 'package:stats': #>  #>     filter DT = hts_prep_variable(   summarize_var = \"age\",   summarize_by = \"employment\",   variables_dt = variable_list,   data = list(     \"hh\" = hh,     \"person\" = person,     \"day\" = day,     \"trip\" = trip,     \"vehicle\" = vehicle   ) )$cat output = hts_summary(   prepped_dt = DT,   summarize_var = \"age\",   summarize_by = \"employment\",   summarize_vartype = \"categorical\",   wtname = \"person_weight\" )  DT = hts_prep_variable(   summarize_var = \"speed_mph\",   summarize_by = \"age\",   variables_dt = variable_list,   data = list(     \"hh\" = hh,     \"person\" = person,     \"day\" = day,     \"trip\" = trip,     \"vehicle\" = vehicle   ) )$num output = hts_summary(   prepped_dt = DT,   summarize_var = \"speed_mph\",   summarize_by = \"age\",   summarize_vartype = \"numeric\",   wtname = \"trip_weight\" )  DT = hts_prep_variable(   summarize_var = \"race\",   summarize_by = \"age\",   variables_dt = variable_list,   data = list(     \"hh\" = hh,     \"person\" = person,     \"day\" = day,     \"trip\" = trip,     \"vehicle\" = vehicle   ) )$cat output = hts_summary(   prepped_dt = DT,   summarize_var = \"race\",   summarize_by = \"age\",   summarize_vartype = \"checkbox\",   wtname = \"person_weight\" )"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_summary_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize a categorical variable — hts_summary_cat","title":"Summarize a categorical variable — hts_summary_cat","text":"Summarize categorical variable","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_summary_cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize a categorical variable — hts_summary_cat","text":"","code":"hts_summary_cat(   prepped_dt,   summarize_var = NULL,   summarize_by = NULL,   weighted = TRUE,   se = FALSE,   wtname = NULL,   strataname = NULL,   checkbox_valname = \"value\",   checkbox_yesval = 1,   summarize_vartype = \"categorical\",   id_cols = c(\"hh_id\", \"person_id\", \"day_id\", \"trip_id\", \"vehicle_id\") )"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_summary_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize a categorical variable — hts_summary_cat","text":"prepped_dt Dataset containing summary variables key columns data.table format. summarize_var Name categorical variable summarize. Default NULL. summarize_by Name variable summarize summarize_var . Default NULL. weighted Whether data weighted. Default TRUE. se Whether calculate standard error. Default FALSE. wtname Name weight column use. Default NULL. strataname Name strata name bring . Default NULL. checkbox_valname Name column checkbox value. Default 'value'. Must provided summarize_var checkbox variable. checkbox_yesval Value checkbox_valname indicates selected. Default 1. Must provided summarize_var checkbox variable. summarize_vartype String; one either 'categorical' (variable summarized categorical) 'checkbox' (variable summarized derived multiple response, aka select---apply question). id_cols names possible ids prepped_dt return unique counts ","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_summary_cat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize a categorical variable — hts_summary_cat","text":"List unweighted weighted categorical summaries including counts proportions.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_summary_cat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize a categorical variable — hts_summary_cat","text":"","code":"require(data.table) require(stringr) require(dplyr) require(srvyr) DT = hts_prep_variable(   summarize_var = \"age\",   variables_dt = variable_list,   data = list(     \"hh\" = hh,     \"person\" = person,     \"day\" = day,     \"trip\" = trip,     \"vehicle\" = vehicle   ) )$cat hts_summary_cat(   prepped_dt = DT,   summarize_var = \"age\",   wtname = \"person_weight\" ) #> $unwtd #>     age count       prop #>  1:   1   183 0.08939912 #>  2:   2   158 0.07718613 #>  3:   3   172 0.08402540 #>  4:   4   172 0.08402540 #>  5:   5   176 0.08597948 #>  6:   6   162 0.07914021 #>  7:   7   178 0.08695652 #>  8:   8   180 0.08793356 #>  9:   9   169 0.08255984 #> 10:  10   149 0.07278945 #> 11:  11   177 0.08646800 #> 12:  12   171 0.08353688 #>  #> $wtd #>     age count       prop   est #>  1:   1   183 0.09068116 93964 #>  2:   2   158 0.07077481 73337 #>  3:   3   172 0.08828491 91481 #>  4:   4   172 0.08196664 84934 #>  5:   5   176 0.09268849 96044 #>  6:   6   162 0.07615986 78917 #>  7:   7   178 0.08525751 88344 #>  8:   8   180 0.07853874 81382 #>  9:   9   169 0.08182574 84788 #> 10:  10   149 0.07724652 80043 #> 11:  11   177 0.09292107 96285 #> 12:  12   171 0.08365454 86683 #>  #> $weight_name #> [1] \"person_weight\" #>   DT = hts_prep_variable(   summarize_var = \"race\",   summarize_by = \"employment\",   variables_dt = variable_list,   data = list(     \"hh\" = hh,     \"person\" = person,     \"day\" = day,     \"trip\" = trip,     \"vehicle\" = vehicle   ) )$cat hts_summary_cat(   prepped_dt = DT,   summarize_var = \"race\",   summarize_by = \"employment\",   wtname = \"person_weight\",   summarize_vartype = \"checkbox\" ) #> $unwtd #>     employment                                      race count       prop #>  1:          1                 African American or Black   232 0.25863991 #>  2:          1          American Indian or Alaska Native   240 0.26755853 #>  3:          1                                     Asian   214 0.23857302 #>  4:          1 Native Hawaiian or other Pacific Islander   242 0.26978818 #>  5:          1                                     White   245 0.27313266 #>  6:          1                                Other race   220 0.24526198 #>  7:          1                      Prefer not to answer   442 0.49275362 #>  8:          2                 African American or Black    38 0.25165563 #>  9:          2          American Indian or Alaska Native    29 0.19205298 #> 10:          2                                     Asian    37 0.24503311 #> 11:          2 Native Hawaiian or other Pacific Islander    41 0.27152318 #> 12:          2                                     White    27 0.17880795 #> 13:          2                                Other race    46 0.30463576 #> 14:          2                      Prefer not to answer    75 0.49668874 #> 15:          3                 African American or Black    24 0.21818182 #> 16:          3          American Indian or Alaska Native    29 0.26363636 #> 17:          3                                     Asian    34 0.30909091 #> 18:          3 Native Hawaiian or other Pacific Islander    28 0.25454545 #> 19:          3                                     White    24 0.21818182 #> 20:          3                                Other race    28 0.25454545 #> 21:          3                      Prefer not to answer    57 0.51818182 #> 22:          5                 African American or Black   122 0.24351297 #> 23:          5          American Indian or Alaska Native   130 0.25948104 #> 24:          5                                     Asian   122 0.24351297 #> 25:          5 Native Hawaiian or other Pacific Islander   118 0.23552894 #> 26:          5                                     White   127 0.25349301 #> 27:          5                                Other race   118 0.23552894 #> 28:          5                      Prefer not to answer   256 0.51097804 #> 29:          6                 African American or Black    22 0.27160494 #> 30:          6          American Indian or Alaska Native    19 0.23456790 #> 31:          6                                     Asian    17 0.20987654 #> 32:          6 Native Hawaiian or other Pacific Islander    25 0.30864198 #> 33:          6                                     White    24 0.29629630 #> 34:          6                                Other race    15 0.18518519 #> 35:          6                      Prefer not to answer    36 0.44444444 #> 36:          7                 African American or Black     1 0.07142857 #> 37:          7 Native Hawaiian or other Pacific Islander     2 0.14285714 #> 38:          7                                     White     3 0.21428571 #> 39:          7                                Other race     2 0.14285714 #> 40:          7                      Prefer not to answer    11 0.78571429 #> 41:          8                 African American or Black     2 0.12500000 #> 42:          8          American Indian or Alaska Native     1 0.06250000 #> 43:          8                                     Asian     2 0.12500000 #> 44:          8 Native Hawaiian or other Pacific Islander     2 0.12500000 #> 45:          8                                     White     3 0.18750000 #> 46:          8                                Other race     4 0.25000000 #> 47:          8                      Prefer not to answer    11 0.68750000 #>     employment                                      race count       prop #>  #> $wtd #>     employment                                      race count       prop #>  1:          1                 African American or Black   232 0.27073716 #>  2:          1          American Indian or Alaska Native   240 0.28655208 #>  3:          1                                     Asian   214 0.24514797 #>  4:          1 Native Hawaiian or other Pacific Islander   242 0.27775413 #>  5:          1                                     White   245 0.28411353 #>  6:          1                                Other race   220 0.25628640 #>  7:          1                      Prefer not to answer   442 0.48754533 #>  8:          2                 African American or Black    38 0.26319327 #>  9:          2          American Indian or Alaska Native    29 0.17631616 #> 10:          2                                     Asian    37 0.22820145 #> 11:          2 Native Hawaiian or other Pacific Islander    41 0.26018745 #> 12:          2                                     White    27 0.16369678 #> 13:          2                                Other race    46 0.31722196 #> 14:          2                      Prefer not to answer    75 0.50837698 #> 15:          3                 African American or Black    24 0.24917350 #> 16:          3          American Indian or Alaska Native    29 0.29843295 #> 17:          3                                     Asian    34 0.33304681 #> 18:          3 Native Hawaiian or other Pacific Islander    28 0.28963898 #> 19:          3                                     White    24 0.22072534 #> 20:          3                                Other race    28 0.24761968 #> 21:          3                      Prefer not to answer    57 0.47690756 #> 22:          5                 African American or Black   122 0.25345189 #> 23:          5          American Indian or Alaska Native   130 0.26013795 #> 24:          5                                     Asian   122 0.24647690 #> 25:          5 Native Hawaiian or other Pacific Islander   118 0.24306672 #> 26:          5                                     White   127 0.24809246 #> 27:          5                                Other race   118 0.22771685 #> 28:          5                      Prefer not to answer   256 0.52309602 #> 29:          6                 African American or Black    22 0.29014733 #> 30:          6          American Indian or Alaska Native    19 0.22133978 #> 31:          6                                     Asian    17 0.19500460 #> 32:          6 Native Hawaiian or other Pacific Islander    25 0.30255525 #> 33:          6                                     White    24 0.27992634 #> 34:          6                                Other race    15 0.12228361 #> 35:          6                      Prefer not to answer    36 0.49417587 #> 36:          7                 African American or Black     1 0.10779358 #> 37:          7 Native Hawaiian or other Pacific Islander     2 0.21159045 #> 38:          7                                     White     3 0.22087692 #> 39:          7                                Other race     2 0.21159045 #> 40:          7                      Prefer not to answer    11 0.77912308 #> 41:          8                 African American or Black     2 0.15386297 #> 42:          8          American Indian or Alaska Native     1 0.04491312 #> 43:          8                                     Asian     2 0.09682002 #> 44:          8 Native Hawaiian or other Pacific Islander     2 0.17265873 #> 45:          8                                     White     3 0.12621571 #> 46:          8                                Other race     4 0.23516556 #> 47:          8                      Prefer not to answer    11 0.70112556 #>     employment                                      race count       prop #>        est wtd_group_n #>  1: 121460      448627 #>  2: 128555      448627 #>  3: 109980      448627 #>  4: 124608      448627 #>  5: 127461      448627 #>  6: 114977      448627 #>  7: 218726      448627 #>  8:  20752       78847 #>  9:  13902       78847 #> 10:  17993       78847 #> 11:  20515       78847 #> 12:  12907       78847 #> 13:  25012       78847 #> 14:  40084       78847 #> 15:  15074       60496 #> 16:  18054       60496 #> 17:  20148       60496 #> 18:  17522       60496 #> 19:  13353       60496 #> 20:  14980       60496 #> 21:  28851       60496 #> 22:  62282      245735 #> 23:  63925      245735 #> 24:  60568      245735 #> 25:  59730      245735 #> 26:  60965      245735 #> 27:  55958      245735 #> 28: 128543      245735 #> 29:  12604       43440 #> 30:   9615       43440 #> 31:   8471       43440 #> 32:  13143       43440 #> 33:  12160       43440 #> 34:   5312       43440 #> 35:  21467       43440 #> 36:    917        8507 #> 37:   1800        8507 #> 38:   1879        8507 #> 39:   1800        8507 #> 40:   6628        8507 #> 41:   1408        9151 #> 42:    411        9151 #> 43:    886        9151 #> 44:   1580        9151 #> 45:   1155        9151 #> 46:   2152        9151 #> 47:   6416        9151 #>        est wtd_group_n #>  #> $weight_name #> [1] \"person_weight\" #>   DT = hts_prep_variable(   summarize_var = \"employment\",   summarize_by = c(\"race\", \"income_detailed\", \"gender\"),   variables_dt = variable_list,   data = list(     \"hh\" = hh,     \"person\" = person,     \"day\" = day,     \"trip\" = trip,     \"vehicle\" = vehicle   ) )$cat  hts_summary_cat(   prepped_dt = DT,   summarize_var = \"employment\",   summarize_by = c(\"race\", \"income_detailed\", \"gender\"),   wtname = \"person_weight\" )$unwtd #>                           race income_detailed gender employment count #>   1: African American or Black               1      1          6     1 #>   2: African American or Black               4      2          5     1 #>   3: African American or Black               5      4          5     1 #>   4: African American or Black               6      4          6     1 #>   5: African American or Black               6    999          1     2 #>  ---                                                                   #> 394:      Prefer not to answer             999    999          2     1 #> 395:      Prefer not to answer             999    999          3     2 #> 396:      Prefer not to answer             999    999          5     7 #> 397:      Prefer not to answer             999    999          7     1 #> 398:      Prefer not to answer             999    999          8     2 #>            prop #>   1: 1.00000000 #>   2: 1.00000000 #>   3: 1.00000000 #>   4: 1.00000000 #>   5: 0.66666667 #>  ---            #> 394: 0.04347826 #> 395: 0.08695652 #> 396: 0.30434783 #> 397: 0.04347826 #> 398: 0.08695652"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_summary_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize a numeric variable — hts_summary_num","title":"Summarize a numeric variable — hts_summary_num","text":"Summarize numeric variable","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_summary_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize a numeric variable — hts_summary_num","text":"","code":"hts_summary_num(   prepped_dt,   summarize_var = NULL,   summarize_by = NULL,   weighted = TRUE,   se = FALSE,   wtname = NULL,   strataname = NULL )"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_summary_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize a numeric variable — hts_summary_num","text":"prepped_dt prepared dataset data.table format variable summarize, variable summarize , weights, used. summarize_var Name variable summarize. Default NULL. summarize_by Name variable summarize summarize_var . Default NULL. weighted Whether data weighted. Default TRUE. se Whether calculate standard error. Default FALSE. set FALSE weighted FALSE. wtname Name weight column use. Default NULL. Must specified weighted = TRUE. strataname Name strata name bring . Default NULL.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_summary_num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize a numeric variable — hts_summary_num","text":"List unweighted weighted numeric summaries including count, min, max, mean, se, median.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_summary_num.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize a numeric variable — hts_summary_num","text":"","code":"require(data.table) require(stringr) require(dplyr) require(srvyr) DT = hts_prep_variable(   summarize_var = \"speed_mph\",   variables_dt = variable_list,   data = list(     \"hh\" = hh,     \"person\" = person,     \"day\" = day,     \"trip\" = trip,     \"vehicle\" = vehicle   ) )$num hts_summary_num(   prepped_dt = DT,   summarize_var = \"speed_mph\",   wtname = \"trip_weight\" ) #> $unwtd #>    count min      max     mean   median #> 1: 14722   0 112.5371 12.27017 8.914392 #>  #> $wtd #>    count min      max     mean   median #> 1: 14722   0 112.5371 12.18441 8.877364 #>  #> $weight_name #> [1] \"trip_weight\" #>  DT = hts_prep_variable(   summarize_var = \"speed_mph\",   summarize_by = \"age\",   variables_dt = variable_list,   data = list(     \"hh\" = hh,     \"person\" = person,     \"day\" = day,     \"trip\" = trip,     \"vehicle\" = vehicle   ) )$num hts_summary_num(   prepped_dt = DT,   summarize_var = \"speed_mph\",   summarize_by = \"age\",   wtname = \"trip_weight\" ) #> $unwtd #>     age count         min       max     mean   median #>  1:   1  1330 0.052703535  99.66345 12.77219 9.043035 #>  2:   2  1034 0.013607390 101.97575 11.79746 8.642971 #>  3:   3  1175 0.000000000 106.33820 11.80088 8.762973 #>  4:   4  1322 0.000000000 100.93678 12.17496 8.960005 #>  5:   5  1342 0.020070228 108.02176 11.98645 8.380280 #>  6:   6  1220 0.008117147 108.05151 11.61808 8.787320 #>  7:   7  1310 0.000000000 105.12236 12.13324 9.233571 #>  8:   8  1164 0.000000000  88.06935 12.65997 8.917070 #>  9:   9  1095 0.000000000 111.79519 12.08160 8.305877 #> 10:  10  1190 0.108733750 112.53715 12.67014 9.687523 #> 11:  11  1283 0.000000000 110.65782 12.52175 8.745631 #> 12:  12  1257 0.000000000 109.20438 12.91303 9.876124 #>  #> $wtd #>     age count         min       max     mean   median #>  1:   1  1330 0.052703535  99.66345 12.45417 8.955092 #>  2:   2  1034 0.013607390 101.97575 11.86040 8.807183 #>  3:   3  1175 0.000000000 106.33820 11.63899 8.625382 #>  4:   4  1322 0.000000000 100.93678 12.17959 8.890321 #>  5:   5  1342 0.020070228 108.02176 11.50444 8.031314 #>  6:   6  1220 0.008117147 108.05151 11.48691 8.788419 #>  7:   7  1310 0.000000000 105.12236 12.57005 9.480196 #>  8:   8  1164 0.000000000  88.06935 12.72844 8.925704 #>  9:   9  1095 0.000000000 111.79519 11.78338 7.904890 #> 10:  10  1190 0.108733750 112.53715 12.82312 9.744795 #> 11:  11  1283 0.000000000 110.65782 12.22370 8.451265 #> 12:  12  1257 0.000000000 109.20438 12.83858 9.863703 #>  #> $weight_name #> [1] \"trip_weight\" #>"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_summary_wrapper.html","id":null,"dir":"Reference","previous_headings":"","what":"Make household travel survey summaries-- runs hts_prep_variable and hts_summary — hts_summary_wrapper","title":"Make household travel survey summaries-- runs hts_prep_variable and hts_summary — hts_summary_wrapper","text":"Make household travel survey summaries-- runs hts_prep_variable hts_summary","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_summary_wrapper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make household travel survey summaries-- runs hts_prep_variable and hts_summary — hts_summary_wrapper","text":"","code":"hts_summary_wrapper(   summarize_var = NULL,   summarize_by = NULL,   variables_dt = variable_list,   vals_df = value_labels,   data = list(hh = hh, person = person, day = day, trip = trip, vehicle = vehicle),   id_cols = c(\"hh_id\", \"person_id\", \"day_id\", \"trip_id\", \"vehicle_id\"),   weighted = TRUE,   wt_cols = c(\"hh_weight\", \"person_weight\", \"day_weight\", \"trip_weight\", \"hh_weight\"),   trip_name = \"trip\",   day_name = \"day\",   strataname = NULL,   se = FALSE,   checkbox_valname = \"value\",   checkbox_yesval = 1,   value_label_colname = \"label\",   remove_outliers = TRUE,   threshold = 0.975,   remove_missing = TRUE,   not_imputable = -1,   missing_values = c(\"Missing Response\", \"995\") )"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_summary_wrapper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make household travel survey summaries-- runs hts_prep_variable and hts_summary — hts_summary_wrapper","text":"summarize_var Name variable summarize. Default NULL summarize_by Name variable summarize summarize_var . Default NULL. variables_dt List variable locations descriptions data.table format. vals_df dataframe variable labels (.e., factor levels labels) format specified . Passed factorize_column function. data List household, person, vehicle, day, trip tables data.table format. id_cols name unique identifier table hts_data weighted Whether data weighted. Default TRUE. wt_cols weight name table hts_data trip_name Name trip dataset hts_data. day_name Name day dataset hts_data. strataname Name strata name bring . Default NULL. se Whether calculate standard error. Default FALSE. set FALSE weighted FALSE. checkbox_valname Name column checkbox value. Default 'value'. Must provided summarize_var checkbox variable. checkbox_yesval Value checkbox_valname indicates selected. Default 1. Must provided summarize_var checkbox variable. value_label_colname name value label column vals_df. Default 'value_label' remove_outliers Whether remove outliers numeric variable. Default TRUE. threshold Threshold define outliers. Default 0.975. remove_missing Whether remove missing values summary. Default TRUE. not_imputable Value representing 'imputable' remove. Default -1. missing_values Missing values remove. Default 995.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_summary_wrapper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make household travel survey summaries-- runs hts_prep_variable and hts_summary — hts_summary_wrapper","text":"list containing (applicable) categorical numeric summaries specified variable(s), well sample sizes whether summarized variable shared checkbox variable. access categorical/numeric df use output$summary. access weighted df use output$summary$wtd, output$summary$unwtd unweighted df. access weight name use output$summary$weight_name. access sample sizes use output$n_ls. access weighted unweighted sample sizes respectively, use output$n_ls$wtd output$n_ls$unwtd.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_summary_wrapper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make household travel survey summaries-- runs hts_prep_variable and hts_summary — hts_summary_wrapper","text":"","code":"hts_summary_wrapper( summarize_var = 'employment', summarize_by = 'income_detailed') #> $cat #> $cat$n_ls #> $cat$n_ls$unwtd #> $cat$n_ls$unwtd$`Count of unique hh_id` #> [1] 843 #>  #> $cat$n_ls$unwtd$`Count of unique person_id` #> [1] 1770 #>  #>  #> $cat$n_ls$wtd #> Sum of person_weight  #>               902225  #>  #>  #> $cat$summary #> $cat$summary$unwtd #>          income_detailed #>  1:        Under $10,000 #>  2:        Under $10,000 #>  3:        Under $10,000 #>  4:        Under $10,000 #>  5:        Under $10,000 #>  6:      $10,000-$24,999 #>  7:      $10,000-$24,999 #>  8:      $10,000-$24,999 #>  9:      $10,000-$24,999 #> 10:      $10,000-$24,999 #> 11:      $10,000-$24,999 #> 12:      $25,000-$34,999 #> 13:      $25,000-$34,999 #> 14:      $25,000-$34,999 #> 15:      $25,000-$34,999 #> 16:      $25,000-$34,999 #> 17:      $25,000-$34,999 #> 18:      $35,000-$49,999 #> 19:      $35,000-$49,999 #> 20:      $35,000-$49,999 #> 21:      $35,000-$49,999 #> 22:      $35,000-$49,999 #> 23:      $35,000-$49,999 #> 24:      $35,000-$49,999 #> 25:      $50,000-$74,999 #> 26:      $50,000-$74,999 #> 27:      $50,000-$74,999 #> 28:      $50,000-$74,999 #> 29:      $50,000-$74,999 #> 30:      $50,000-$74,999 #> 31:      $75,000-$99,999 #> 32:      $75,000-$99,999 #> 33:      $75,000-$99,999 #> 34:      $75,000-$99,999 #> 35:      $75,000-$99,999 #> 36:      $75,000-$99,999 #> 37:      $75,000-$99,999 #> 38:    $100,000-$149,999 #> 39:    $100,000-$149,999 #> 40:    $100,000-$149,999 #> 41:    $100,000-$149,999 #> 42:    $100,000-$149,999 #> 43:    $100,000-$149,999 #> 44:    $100,000-$149,999 #> 45:    $150,000-$199,999 #> 46:    $150,000-$199,999 #> 47:    $150,000-$199,999 #> 48:    $150,000-$199,999 #> 49:    $150,000-$199,999 #> 50:    $150,000-$199,999 #> 51:    $200,000-$249,999 #> 52:    $200,000-$249,999 #> 53:    $200,000-$249,999 #> 54:    $200,000-$249,999 #> 55:    $200,000-$249,999 #> 56:    $200,000-$249,999 #> 57:    $200,000-$249,999 #> 58:     $250,000 or more #> 59:     $250,000 or more #> 60:     $250,000 or more #> 61:     $250,000 or more #> 62:     $250,000 or more #> 63:     $250,000 or more #> 64:     $250,000 or more #> 65: Prefer not to answer #> 66: Prefer not to answer #> 67: Prefer not to answer #> 68: Prefer not to answer #> 69: Prefer not to answer #> 70: Prefer not to answer #> 71: Prefer not to answer #>          income_detailed #>                                                                              employment #>  1:                                           Employed full-time (35+ hours/week, paid) #>  2:                                 Employed part-time (fewer than 35 hours/week, paid) #>  3:                                                                       Self-employed #>  4: Not employed and not looking for work (e.g., retired, stay-at-home parent, student) #>  5:                                                     Unemployed and looking for work #>  6:                                           Employed full-time (35+ hours/week, paid) #>  7:                                 Employed part-time (fewer than 35 hours/week, paid) #>  8:                                                                       Self-employed #>  9: Not employed and not looking for work (e.g., retired, stay-at-home parent, student) #> 10:                                                     Unemployed and looking for work #> 11:               Employed, but not currently working (e.g., on leave, furloughed 100%) #> 12:                                           Employed full-time (35+ hours/week, paid) #> 13:                                 Employed part-time (fewer than 35 hours/week, paid) #> 14:                                                                       Self-employed #> 15: Not employed and not looking for work (e.g., retired, stay-at-home parent, student) #> 16:                                                     Unemployed and looking for work #> 17:               Employed, but not currently working (e.g., on leave, furloughed 100%) #> 18:                                           Employed full-time (35+ hours/week, paid) #> 19:                                 Employed part-time (fewer than 35 hours/week, paid) #> 20:                                                                       Self-employed #> 21: Not employed and not looking for work (e.g., retired, stay-at-home parent, student) #> 22:                                                     Unemployed and looking for work #> 23:                                                          Unpaid volunteer or intern #> 24:               Employed, but not currently working (e.g., on leave, furloughed 100%) #> 25:                                           Employed full-time (35+ hours/week, paid) #> 26:                                 Employed part-time (fewer than 35 hours/week, paid) #> 27:                                                                       Self-employed #> 28: Not employed and not looking for work (e.g., retired, stay-at-home parent, student) #> 29:                                                     Unemployed and looking for work #> 30:               Employed, but not currently working (e.g., on leave, furloughed 100%) #> 31:                                           Employed full-time (35+ hours/week, paid) #> 32:                                 Employed part-time (fewer than 35 hours/week, paid) #> 33:                                                                       Self-employed #> 34: Not employed and not looking for work (e.g., retired, stay-at-home parent, student) #> 35:                                                     Unemployed and looking for work #> 36:                                                          Unpaid volunteer or intern #> 37:               Employed, but not currently working (e.g., on leave, furloughed 100%) #> 38:                                           Employed full-time (35+ hours/week, paid) #> 39:                                 Employed part-time (fewer than 35 hours/week, paid) #> 40:                                                                       Self-employed #> 41: Not employed and not looking for work (e.g., retired, stay-at-home parent, student) #> 42:                                                     Unemployed and looking for work #> 43:                                                          Unpaid volunteer or intern #> 44:               Employed, but not currently working (e.g., on leave, furloughed 100%) #> 45:                                           Employed full-time (35+ hours/week, paid) #> 46:                                 Employed part-time (fewer than 35 hours/week, paid) #> 47:                                                                       Self-employed #> 48: Not employed and not looking for work (e.g., retired, stay-at-home parent, student) #> 49:                                                     Unemployed and looking for work #> 50:               Employed, but not currently working (e.g., on leave, furloughed 100%) #> 51:                                           Employed full-time (35+ hours/week, paid) #> 52:                                 Employed part-time (fewer than 35 hours/week, paid) #> 53:                                                                       Self-employed #> 54: Not employed and not looking for work (e.g., retired, stay-at-home parent, student) #> 55:                                                     Unemployed and looking for work #> 56:                                                          Unpaid volunteer or intern #> 57:               Employed, but not currently working (e.g., on leave, furloughed 100%) #> 58:                                           Employed full-time (35+ hours/week, paid) #> 59:                                 Employed part-time (fewer than 35 hours/week, paid) #> 60:                                                                       Self-employed #> 61: Not employed and not looking for work (e.g., retired, stay-at-home parent, student) #> 62:                                                     Unemployed and looking for work #> 63:                                                          Unpaid volunteer or intern #> 64:               Employed, but not currently working (e.g., on leave, furloughed 100%) #> 65:                                           Employed full-time (35+ hours/week, paid) #> 66:                                 Employed part-time (fewer than 35 hours/week, paid) #> 67:                                                                       Self-employed #> 68: Not employed and not looking for work (e.g., retired, stay-at-home parent, student) #> 69:                                                     Unemployed and looking for work #> 70:                                                          Unpaid volunteer or intern #> 71:               Employed, but not currently working (e.g., on leave, furloughed 100%) #>                                                                              employment #>     count        prop #>  1:    35 0.593220339 #>  2:     2 0.033898305 #>  3:     8 0.135593220 #>  4:    11 0.186440678 #>  5:     3 0.050847458 #>  6:    54 0.529411765 #>  7:    11 0.107843137 #>  8:     6 0.058823529 #>  9:    22 0.215686275 #> 10:     6 0.058823529 #> 11:     3 0.029411765 #> 12:    40 0.487804878 #> 13:     7 0.085365854 #> 14:     5 0.060975610 #> 15:    28 0.341463415 #> 16:     1 0.012195122 #> 17:     1 0.012195122 #> 18:    46 0.464646465 #> 19:     7 0.070707071 #> 20:     6 0.060606061 #> 21:    35 0.353535354 #> 22:     3 0.030303030 #> 23:     1 0.010101010 #> 24:     1 0.010101010 #> 25:   121 0.523809524 #> 26:    21 0.090909091 #> 27:     8 0.034632035 #> 28:    68 0.294372294 #> 29:    12 0.051948052 #> 30:     1 0.004329004 #> 31:    85 0.442708333 #> 32:    21 0.109375000 #> 33:    13 0.067708333 #> 34:    58 0.302083333 #> 35:    11 0.057291667 #> 36:     2 0.010416667 #> 37:     2 0.010416667 #> 38:   153 0.506622517 #> 39:    28 0.092715232 #> 40:    20 0.066225166 #> 41:    80 0.264900662 #> 42:    15 0.049668874 #> 43:     4 0.013245033 #> 44:     2 0.006622517 #> 45:    95 0.536723164 #> 46:    21 0.118644068 #> 47:    12 0.067796610 #> 48:    42 0.237288136 #> 49:     6 0.033898305 #> 50:     1 0.005649718 #> 51:    66 0.507692308 #> 52:     8 0.061538462 #> 53:     7 0.053846154 #> 54:    38 0.292307692 #> 55:     8 0.061538462 #> 56:     2 0.015384615 #> 57:     1 0.007692308 #> 58:    81 0.500000000 #> 59:     8 0.049382716 #> 60:    11 0.067901235 #> 61:    50 0.308641975 #> 62:     8 0.049382716 #> 63:     3 0.018518519 #> 64:     1 0.006172840 #> 65:   121 0.517094017 #> 66:    17 0.072649573 #> 67:    14 0.059829060 #> 68:    69 0.294871795 #> 69:     8 0.034188034 #> 70:     2 0.008547009 #> 71:     3 0.012820513 #>     count        prop #>  #> $cat$summary$wtd #>          income_detailed #>  1:        Under $10,000 #>  2:        Under $10,000 #>  3:        Under $10,000 #>  4:        Under $10,000 #>  5:        Under $10,000 #>  6:      $10,000-$24,999 #>  7:      $10,000-$24,999 #>  8:      $10,000-$24,999 #>  9:      $10,000-$24,999 #> 10:      $10,000-$24,999 #> 11:      $10,000-$24,999 #> 12:      $25,000-$34,999 #> 13:      $25,000-$34,999 #> 14:      $25,000-$34,999 #> 15:      $25,000-$34,999 #> 16:      $25,000-$34,999 #> 17:      $25,000-$34,999 #> 18:      $35,000-$49,999 #> 19:      $35,000-$49,999 #> 20:      $35,000-$49,999 #> 21:      $35,000-$49,999 #> 22:      $35,000-$49,999 #> 23:      $35,000-$49,999 #> 24:      $35,000-$49,999 #> 25:      $50,000-$74,999 #> 26:      $50,000-$74,999 #> 27:      $50,000-$74,999 #> 28:      $50,000-$74,999 #> 29:      $50,000-$74,999 #> 30:      $50,000-$74,999 #> 31:      $75,000-$99,999 #> 32:      $75,000-$99,999 #> 33:      $75,000-$99,999 #> 34:      $75,000-$99,999 #> 35:      $75,000-$99,999 #> 36:      $75,000-$99,999 #> 37:      $75,000-$99,999 #> 38:    $100,000-$149,999 #> 39:    $100,000-$149,999 #> 40:    $100,000-$149,999 #> 41:    $100,000-$149,999 #> 42:    $100,000-$149,999 #> 43:    $100,000-$149,999 #> 44:    $100,000-$149,999 #> 45:    $150,000-$199,999 #> 46:    $150,000-$199,999 #> 47:    $150,000-$199,999 #> 48:    $150,000-$199,999 #> 49:    $150,000-$199,999 #> 50:    $150,000-$199,999 #> 51:    $200,000-$249,999 #> 52:    $200,000-$249,999 #> 53:    $200,000-$249,999 #> 54:    $200,000-$249,999 #> 55:    $200,000-$249,999 #> 56:    $200,000-$249,999 #> 57:    $200,000-$249,999 #> 58:     $250,000 or more #> 59:     $250,000 or more #> 60:     $250,000 or more #> 61:     $250,000 or more #> 62:     $250,000 or more #> 63:     $250,000 or more #> 64:     $250,000 or more #> 65: Prefer not to answer #> 66: Prefer not to answer #> 67: Prefer not to answer #> 68: Prefer not to answer #> 69: Prefer not to answer #> 70: Prefer not to answer #> 71: Prefer not to answer #>          income_detailed #>                                                                              employment #>  1:                                           Employed full-time (35+ hours/week, paid) #>  2:                                 Employed part-time (fewer than 35 hours/week, paid) #>  3:                                                                       Self-employed #>  4: Not employed and not looking for work (e.g., retired, stay-at-home parent, student) #>  5:                                                     Unemployed and looking for work #>  6:                                           Employed full-time (35+ hours/week, paid) #>  7:                                 Employed part-time (fewer than 35 hours/week, paid) #>  8:                                                                       Self-employed #>  9: Not employed and not looking for work (e.g., retired, stay-at-home parent, student) #> 10:                                                     Unemployed and looking for work #> 11:               Employed, but not currently working (e.g., on leave, furloughed 100%) #> 12:                                           Employed full-time (35+ hours/week, paid) #> 13:                                 Employed part-time (fewer than 35 hours/week, paid) #> 14:                                                                       Self-employed #> 15: Not employed and not looking for work (e.g., retired, stay-at-home parent, student) #> 16:                                                     Unemployed and looking for work #> 17:               Employed, but not currently working (e.g., on leave, furloughed 100%) #> 18:                                           Employed full-time (35+ hours/week, paid) #> 19:                                 Employed part-time (fewer than 35 hours/week, paid) #> 20:                                                                       Self-employed #> 21: Not employed and not looking for work (e.g., retired, stay-at-home parent, student) #> 22:                                                     Unemployed and looking for work #> 23:                                                          Unpaid volunteer or intern #> 24:               Employed, but not currently working (e.g., on leave, furloughed 100%) #> 25:                                           Employed full-time (35+ hours/week, paid) #> 26:                                 Employed part-time (fewer than 35 hours/week, paid) #> 27:                                                                       Self-employed #> 28: Not employed and not looking for work (e.g., retired, stay-at-home parent, student) #> 29:                                                     Unemployed and looking for work #> 30:               Employed, but not currently working (e.g., on leave, furloughed 100%) #> 31:                                           Employed full-time (35+ hours/week, paid) #> 32:                                 Employed part-time (fewer than 35 hours/week, paid) #> 33:                                                                       Self-employed #> 34: Not employed and not looking for work (e.g., retired, stay-at-home parent, student) #> 35:                                                     Unemployed and looking for work #> 36:                                                          Unpaid volunteer or intern #> 37:               Employed, but not currently working (e.g., on leave, furloughed 100%) #> 38:                                           Employed full-time (35+ hours/week, paid) #> 39:                                 Employed part-time (fewer than 35 hours/week, paid) #> 40:                                                                       Self-employed #> 41: Not employed and not looking for work (e.g., retired, stay-at-home parent, student) #> 42:                                                     Unemployed and looking for work #> 43:                                                          Unpaid volunteer or intern #> 44:               Employed, but not currently working (e.g., on leave, furloughed 100%) #> 45:                                           Employed full-time (35+ hours/week, paid) #> 46:                                 Employed part-time (fewer than 35 hours/week, paid) #> 47:                                                                       Self-employed #> 48: Not employed and not looking for work (e.g., retired, stay-at-home parent, student) #> 49:                                                     Unemployed and looking for work #> 50:               Employed, but not currently working (e.g., on leave, furloughed 100%) #> 51:                                           Employed full-time (35+ hours/week, paid) #> 52:                                 Employed part-time (fewer than 35 hours/week, paid) #> 53:                                                                       Self-employed #> 54: Not employed and not looking for work (e.g., retired, stay-at-home parent, student) #> 55:                                                     Unemployed and looking for work #> 56:                                                          Unpaid volunteer or intern #> 57:               Employed, but not currently working (e.g., on leave, furloughed 100%) #> 58:                                           Employed full-time (35+ hours/week, paid) #> 59:                                 Employed part-time (fewer than 35 hours/week, paid) #> 60:                                                                       Self-employed #> 61: Not employed and not looking for work (e.g., retired, stay-at-home parent, student) #> 62:                                                     Unemployed and looking for work #> 63:                                                          Unpaid volunteer or intern #> 64:               Employed, but not currently working (e.g., on leave, furloughed 100%) #> 65:                                           Employed full-time (35+ hours/week, paid) #> 66:                                 Employed part-time (fewer than 35 hours/week, paid) #> 67:                                                                       Self-employed #> 68: Not employed and not looking for work (e.g., retired, stay-at-home parent, student) #> 69:                                                     Unemployed and looking for work #> 70:                                                          Unpaid volunteer or intern #> 71:               Employed, but not currently working (e.g., on leave, furloughed 100%) #>                                                                              employment #>     count        prop   est #>  1:    35 0.594403345 16632 #>  2:     2 0.018047961   505 #>  3:     8 0.153103892  4284 #>  4:    11 0.187698796  5252 #>  5:     3 0.046746006  1308 #>  6:    54 0.536837376 27485 #>  7:    11 0.120004688  6144 #>  8:     6 0.063986874  3276 #>  9:    22 0.193972421  9931 #> 10:     6 0.057033478  2920 #> 11:     3 0.028165163  1442 #> 12:    40 0.506029839 21232 #> 13:     7 0.087396921  3667 #> 14:     5 0.060012393  2518 #> 15:    28 0.335120835 14061 #> 16:     1 0.001001001    42 #> 17:     1 0.010439010   438 #> 18:    46 0.510216731 25519 #> 19:     7 0.056641875  2833 #> 20:     6 0.066958573  3349 #> 21:    35 0.288747601 14442 #> 22:     3 0.053722809  2687 #> 23:     1 0.017654351   883 #> 24:     1 0.006058061   303 #> 25:   121 0.510996349 60457 #> 26:    21 0.096938603 11469 #> 27:     8 0.040621408  4806 #> 28:    68 0.302851782 35831 #> 29:    12 0.043748732  5176 #> 30:     1 0.004843127   573 #> 31:    85 0.446295073 46624 #> 32:    21 0.095904048 10019 #> 33:    13 0.056466512  5899 #> 34:    58 0.325876576 34044 #> 35:    11 0.059577482  6224 #> 36:     2 0.010874039  1136 #> 37:     2 0.005006270   523 #> 38:   153 0.508655852 76570 #> 39:    28 0.107577026 16194 #> 40:    20 0.061208763  9214 #> 41:    80 0.247020607 37185 #> 42:    15 0.052101186  7843 #> 43:     4 0.018122152  2728 #> 44:     2 0.005314414   800 #> 45:    95 0.509502642 44931 #> 46:    21 0.110607126  9754 #> 47:    12 0.087134012  7684 #> 48:    42 0.256514640 22621 #> 49:     6 0.026750278  2359 #> 50:     1 0.009491302   837 #> 51:    66 0.498546078 31718 #> 52:     8 0.058832775  3743 #> 53:     7 0.038430707  2445 #> 54:    38 0.304616400 19380 #> 55:     8 0.069379607  4414 #> 56:     2 0.014680687   934 #> 57:     1 0.015513745   987 #> 58:    81 0.506568977 42452 #> 59:     8 0.050523251  4234 #> 60:    11 0.089507536  7501 #> 61:    50 0.267961767 22456 #> 62:     8 0.059019367  4946 #> 63:     3 0.019462310  1631 #> 64:     1 0.006956792   583 #> 65:   121 0.475009620 58021 #> 66:    17 0.088311625 10787 #> 67:    14 0.077938877  9520 #> 68:    69 0.279106323 34092 #> 69:     8 0.048032289  5867 #> 70:     2 0.009783294  1195 #> 71:     3 0.021817973  2665 #>     count        prop   est #>  #> $cat$summary$weight_name #> [1] \"person_weight\" #>  #>  #> $cat$summarize_var #> [1] \"employment\" #>  #> $cat$summarize_by #> [1] \"income_detailed\" #>  #>  #> $num #> NULL #>    hts_summary_wrapper( summarize_var = 'race', summarize_by = c('age', 'employment') ) #> $cat #> $cat$n_ls #> $cat$n_ls$unwtd #> $cat$n_ls$unwtd$`Count of unique hh_id` #> [1] 843 #>  #> $cat$n_ls$unwtd$`Count of unique person_id` #> [1] 1770 #>  #>  #> $cat$n_ls$wtd #> Sum of person_weight  #>              6315575  #>  #>  #> $cat$summary #> $cat$summary$unwtd #>              age                                employment #>   1:     Under 5 Employed full-time (35+ hours/week, paid) #>   2:     Under 5 Employed full-time (35+ hours/week, paid) #>   3:     Under 5 Employed full-time (35+ hours/week, paid) #>   4:     Under 5 Employed full-time (35+ hours/week, paid) #>   5:     Under 5 Employed full-time (35+ hours/week, paid) #>  ---                                                       #> 427: 85 or older           Unemployed and looking for work #> 428: 85 or older           Unemployed and looking for work #> 429: 85 or older           Unemployed and looking for work #> 430: 85 or older           Unemployed and looking for work #> 431: 85 or older           Unemployed and looking for work #>                                           race count      prop #>   1:                 African American or Black    19 0.2794118 #>   2:          American Indian or Alaska Native    18 0.2647059 #>   3:                                     Asian    21 0.3088235 #>   4: Native Hawaiian or other Pacific Islander    20 0.2941176 #>   5:                                     White    19 0.2794118 #>  ---                                                           #> 427:          American Indian or Alaska Native     2 0.2857143 #> 428:                                     Asian     2 0.2857143 #> 429: Native Hawaiian or other Pacific Islander     2 0.2857143 #> 430:                                     White     2 0.2857143 #> 431:                      Prefer not to answer     3 0.4285714 #>  #> $cat$summary$wtd #>              age                                employment #>   1:     Under 5 Employed full-time (35+ hours/week, paid) #>   2:     Under 5 Employed full-time (35+ hours/week, paid) #>   3:     Under 5 Employed full-time (35+ hours/week, paid) #>   4:     Under 5 Employed full-time (35+ hours/week, paid) #>   5:     Under 5 Employed full-time (35+ hours/week, paid) #>  ---                                                       #> 427: 85 or older           Unemployed and looking for work #> 428: 85 or older           Unemployed and looking for work #> 429: 85 or older           Unemployed and looking for work #> 430: 85 or older           Unemployed and looking for work #> 431: 85 or older           Unemployed and looking for work #>                                           race count      prop  est wtd_group_n #>   1:                 African American or Black    19 0.2678266 9390       35060 #>   2:          American Indian or Alaska Native    18 0.2697946 9459       35060 #>   3:                                     Asian    21 0.2495722 8750       35060 #>   4: Native Hawaiian or other Pacific Islander    20 0.2790645 9784       35060 #>   5:                                     White    19 0.2383058 8355       35060 #>  ---                                                                            #> 427:          American Indian or Alaska Native     2 0.2094723  774        3695 #> 428:                                     Asian     2 0.2094723  774        3695 #> 429: Native Hawaiian or other Pacific Islander     2 0.3161028 1168        3695 #> 430:                      Prefer not to answer     3 0.5412720 2000        3695 #> 431:                                     White     2 0.3918809 1448        3695 #>  #> $cat$summary$weight_name #> [1] \"person_weight\" #>  #>  #> $cat$summarize_var #> [1] \"race\" #>  #> $cat$summarize_by #> [1] \"age\"        \"employment\" #>  #>  #> $num #> NULL #>   hts_summary_wrapper( summarize_var = 'num_trips', summarize_by = 'age') #> $cat #> $cat$n_ls #> $cat$n_ls$unwtd #> $cat$n_ls$unwtd$`Count of unique hh_id` #> [1] 821 #>  #> $cat$n_ls$unwtd$`Count of unique person_id` #> [1] 1743 #>  #> $cat$n_ls$unwtd$`Count of unique day_id` #> [1] 4021 #>  #>  #> $cat$n_ls$wtd #> Sum of day_weight  #>           2073324  #>  #>  #> $cat$summary #> $cat$summary$unwtd #>             age  num_trips count        prop #>  1:     Under 5  Exactly 0     9 0.024861878 #>  2:     Under 5        0-7   256 0.707182320 #>  3:     Under 5       7-14    55 0.151933702 #>  4:     Under 5      14-21    16 0.044198895 #>  5:     Under 5      21-28    14 0.038674033 #>  6:     Under 5      28-34     2 0.005524862 #>  7:     Under 5 34 or more    10 0.027624309 #>  8:        5-11  Exactly 0     4 0.013698630 #>  9:        5-11        0-7   216 0.739726027 #> 10:        5-11       7-14    40 0.136986301 #> 11:        5-11      14-21    15 0.051369863 #> 12:        5-11      21-28     7 0.023972603 #> 13:        5-11      28-34     1 0.003424658 #> 14:        5-11 34 or more     9 0.030821918 #> 15:       12-15  Exactly 0     6 0.019672131 #> 16:       12-15        0-7   227 0.744262295 #> 17:       12-15       7-14    42 0.137704918 #> 18:       12-15      14-21    14 0.045901639 #> 19:       12-15      21-28     6 0.019672131 #> 20:       12-15      28-34     4 0.013114754 #> 21:       12-15 34 or more     6 0.019672131 #> 22:       16-17  Exactly 0     9 0.025069638 #> 23:       16-17        0-7   258 0.718662953 #> 24:       16-17       7-14    42 0.116991643 #> 25:       16-17      14-21    16 0.044568245 #> 26:       16-17      21-28    15 0.041782730 #> 27:       16-17      28-34     7 0.019498607 #> 28:       16-17 34 or more    12 0.033426184 #> 29:       18-24  Exactly 0     5 0.014084507 #> 30:       18-24        0-7   262 0.738028169 #> 31:       18-24       7-14    47 0.132394366 #> 32:       18-24      14-21    21 0.059154930 #> 33:       18-24      21-28     8 0.022535211 #> 34:       18-24      28-34     6 0.016901408 #> 35:       18-24 34 or more     6 0.016901408 #> 36:       25-34  Exactly 0     9 0.026011561 #> 37:       25-34        0-7   248 0.716763006 #> 38:       25-34       7-14    50 0.144508671 #> 39:       25-34      14-21    17 0.049132948 #> 40:       25-34      21-28     7 0.020231214 #> 41:       25-34      28-34     5 0.014450867 #> 42:       25-34 34 or more    10 0.028901734 #> 43:       35-44  Exactly 0     3 0.008645533 #> 44:       35-44        0-7   247 0.711815562 #> 45:       35-44       7-14    54 0.155619597 #> 46:       35-44      14-21    21 0.060518732 #> 47:       35-44      21-28     9 0.025936599 #> 48:       35-44      28-34     3 0.008645533 #> 49:       35-44 34 or more    10 0.028818444 #> 50:       45-54  Exactly 0     3 0.009375000 #> 51:       45-54        0-7   242 0.756250000 #> 52:       45-54       7-14    42 0.131250000 #> 53:       45-54      14-21    14 0.043750000 #> 54:       45-54      21-28    10 0.031250000 #> 55:       45-54      28-34     4 0.012500000 #> 56:       45-54 34 or more     5 0.015625000 #> 57:       55-64  Exactly 0     7 0.021943574 #> 58:       55-64        0-7   250 0.783699060 #> 59:       55-64       7-14    33 0.103448276 #> 60:       55-64      14-21     9 0.028213166 #> 61:       55-64      21-28    11 0.034482759 #> 62:       55-64      28-34     2 0.006269592 #> 63:       55-64 34 or more     7 0.021943574 #> 64:       65-74  Exactly 0     8 0.026143791 #> 65:       65-74        0-7   198 0.647058824 #> 66:       65-74       7-14    62 0.202614379 #> 67:       65-74      14-21    19 0.062091503 #> 68:       65-74      21-28     5 0.016339869 #> 69:       65-74      28-34     4 0.013071895 #> 70:       65-74 34 or more    10 0.032679739 #> 71:       75-84  Exactly 0     8 0.022408964 #> 72:       75-84        0-7   259 0.725490196 #> 73:       75-84       7-14    54 0.151260504 #> 74:       75-84      14-21    14 0.039215686 #> 75:       75-84      21-28     9 0.025210084 #> 76:       75-84      28-34     4 0.011204482 #> 77:       75-84 34 or more     9 0.025210084 #> 78: 85 or older  Exactly 0     8 0.022662890 #> 79: 85 or older        0-7   263 0.745042493 #> 80: 85 or older       7-14    42 0.118980170 #> 81: 85 or older      14-21    17 0.048158640 #> 82: 85 or older      21-28     9 0.025495751 #> 83: 85 or older      28-34     8 0.022662890 #> 84: 85 or older 34 or more     6 0.016997167 #>             age  num_trips count        prop #>  #> $cat$summary$wtd #>             age  num_trips count         prop    est #>  1:     Under 5  Exactly 0     9 0.0211505146   3919 #>  2:     Under 5        0-7   256 0.8744191569 162022 #>  3:     Under 5       7-14    55 0.0809159646  14993 #>  4:     Under 5      14-21    16 0.0120944892   2241 #>  5:     Under 5      21-28    14 0.0074315536   1377 #>  6:     Under 5      28-34     2 0.0008635066    160 #>  7:     Under 5 34 or more    10 0.0031248145    579 #>  8:        5-11  Exactly 0     4 0.0133856015   2059 #>  9:        5-11        0-7   216 0.8930647112 137373 #> 10:        5-11       7-14    40 0.0704060538  10830 #> 11:        5-11      14-21    15 0.0139706934   2149 #> 12:        5-11      21-28     7 0.0057404012    883 #> 13:        5-11      28-34     1 0.0007801225    120 #> 14:        5-11 34 or more     9 0.0026524164    408 #> 15:       12-15  Exactly 0     6 0.0183727687   2953 #> 16:       12-15        0-7   227 0.8846677907 142190 #> 17:       12-15       7-14    42 0.0767885918  12342 #> 18:       12-15      14-21    14 0.0136878060   2200 #> 19:       12-15      21-28     6 0.0029366566    472 #> 20:       12-15      28-34     4 0.0015367673    247 #> 21:       12-15 34 or more     6 0.0020096188    323 #> 22:       16-17  Exactly 0     9 0.0226963834   4108 #> 23:       16-17        0-7   258 0.8880650615 160738 #> 24:       16-17       7-14    42 0.0625918518  11329 #> 25:       16-17      14-21    16 0.0122984784   2226 #> 26:       16-17      21-28    15 0.0087570028   1585 #> 27:       16-17      28-34     7 0.0026740627    484 #> 28:       16-17 34 or more    12 0.0029171593    528 #> 29:       18-24  Exactly 0     5 0.0140183641   2600 #> 30:       18-24        0-7   262 0.8924252309 165519 #> 31:       18-24       7-14    47 0.0663661705  12309 #> 32:       18-24      14-21    21 0.0172695462   3203 #> 33:       18-24      21-28     8 0.0054402036   1009 #> 34:       18-24      28-34     6 0.0029546398    548 #> 35:       18-24 34 or more     6 0.0015258450    283 #> 36:       25-34  Exactly 0     9 0.0264441887   4596 #> 37:       25-34        0-7   248 0.8746720368 152018 #> 38:       25-34       7-14    50 0.0776179517  13490 #> 39:       25-34      14-21    17 0.0121691600   2115 #> 40:       25-34      21-28     7 0.0040103567    697 #> 41:       25-34      28-34     5 0.0021231300    369 #> 42:       25-34 34 or more    10 0.0029631761    515 #> 43:       35-44  Exactly 0     3 0.0077003501   1311 #> 44:       35-44        0-7   247 0.8723715434 148523 #> 45:       35-44       7-14    54 0.0890209807  15156 #> 46:       35-44      14-21    21 0.0206869817   3522 #> 47:       35-44      21-28     9 0.0054331227    925 #> 48:       35-44      28-34     3 0.0014507906    247 #> 49:       35-44 34 or more    10 0.0033362310    568 #> 50:       45-54  Exactly 0     3 0.0062074466   1043 #> 51:       45-54        0-7   242 0.8991632148 151081 #> 52:       45-54       7-14    42 0.0713826596  11994 #> 53:       45-54      14-21    14 0.0135516355   2277 #> 54:       45-54      21-28    10 0.0065109746   1094 #> 55:       45-54      28-34     4 0.0016307194    274 #> 56:       45-54 34 or more     5 0.0015533495    261 #> 57:       55-64  Exactly 0     7 0.0211599023   3588 #> 58:       55-64        0-7   250 0.9094924690 154219 #> 59:       55-64       7-14    33 0.0490428506   8316 #> 60:       55-64      14-21     9 0.0093179057   1580 #> 61:       55-64      21-28    11 0.0073481712   1246 #> 62:       55-64      28-34     2 0.0010910206    185 #> 63:       55-64 34 or more     7 0.0025476805    432 #> 64:       65-74  Exactly 0     8 0.0249656885   3820 #> 65:       65-74        0-7   198 0.8311090778 127168 #> 66:       65-74       7-14    62 0.1171622770  17927 #> 67:       65-74      14-21    19 0.0173191295   2650 #> 68:       65-74      21-28     5 0.0033723286    516 #> 69:       65-74      28-34     4 0.0022874322    350 #> 70:       65-74 34 or more    10 0.0037840664    579 #> 71:       75-84  Exactly 0     8 0.0224890591   4111 #> 72:       75-84        0-7   259 0.8701641138 159066 #> 73:       75-84       7-14    54 0.0853391685  15600 #> 74:       75-84      14-21    14 0.0099343545   1816 #> 75:       75-84      21-28     9 0.0061652079   1127 #> 76:       75-84      28-34     4 0.0029102845    532 #> 77:       75-84 34 or more     9 0.0029978118    548 #> 78: 85 or older  Exactly 0     8 0.0274262382   5199 #> 79: 85 or older        0-7   263 0.8830520724 167394 #> 80: 85 or older       7-14    42 0.0637993701  12094 #> 81: 85 or older      14-21    17 0.0152455912   2890 #> 82: 85 or older      21-28     9 0.0048901948    927 #> 83: 85 or older      28-34     8 0.0032601299    618 #> 84: 85 or older 34 or more     6 0.0023264034    441 #>             age  num_trips count         prop    est #>  #> $cat$summary$weight_name #> [1] \"day_weight\" #>  #>  #> $cat$summarize_var #> [1] \"num_trips\" #>  #> $cat$summarize_by #> [1] \"age\" #>  #>  #> $num #> $num$n_ls #> $num$n_ls$unwtd #> $num$n_ls$unwtd$`Count of unique hh_id` #> [1] 821 #>  #> $num$n_ls$unwtd$`Count of unique person_id` #> [1] 1743 #>  #> $num$n_ls$unwtd$`Count of unique day_id` #> [1] 4021 #>  #>  #> $num$n_ls$wtd #> Sum of day_weight  #>           2073324  #>  #>  #> $num$summary #> $num$summary$unwtd #>             age count min      max     mean   median #>  1:     Under 5   362   0 60.77358 6.678020 3.638851 #>  2:        5-11   292   0 64.44681 6.453618 3.330964 #>  3:       12-15   305   0 66.08108 6.395317 3.691882 #>  4:       16-17   359   0 66.63636 7.308847 3.585366 #>  5:       18-24   355   0 57.37500 6.459746 3.636804 #>  6:       25-34   346   0 63.02941 6.829649 3.612824 #>  7:       35-44   347   0 62.41860 7.102319 3.927928 #>  8:       45-54   320   0 63.39535 6.192273 3.628440 #>  9:       55-64   319   0 63.17778 5.967302 3.305263 #> 10:       65-74   306   0 66.57407 7.516483 4.428346 #> 11:       75-84   357   0 63.66667 6.557999 3.678182 #> 12: 85 or older   353   0 49.28947 6.107548 3.211509 #>  #> $num$summary$wtd #>             age count min      max     mean   median #>  1:     Under 5   362   0 60.77358 3.695582 2.734307 #>  2:        5-11   292   0 64.44681 3.536211 2.450932 #>  3:       12-15   305   0 66.08108 3.704014 2.980241 #>  4:       16-17   359   0 66.63636 3.815749 3.034014 #>  5:       18-24   355   0 57.37500 3.745745 2.891026 #>  6:       25-34   346   0 63.02941 3.697330 2.774242 #>  7:       35-44   347   0 62.41860 4.063018 3.006522 #>  8:       45-54   320   0 63.39535 3.581221 2.576602 #>  9:       55-64   319   0 63.17778 3.460617 2.494253 #> 10:       65-74   306   0 66.57407 4.178773 3.061633 #> 11:       75-84   357   0 63.66667 3.822949 2.841629 #> 12: 85 or older   353   0 49.28947 3.459594 2.458980 #>  #> $num$summary$weight_name #> [1] \"day_weight\" #>  #>  #>"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_to_so.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform travel survey data.table to a survey object — hts_to_so","title":"Transform travel survey data.table to a survey object — hts_to_so","text":"Transform travel survey data.table survey object","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_to_so.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform travel survey data.table to a survey object — hts_to_so","text":"","code":"hts_to_so(prepped_dt, weighted = TRUE, wtname = NULL, strataname = NULL)"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_to_so.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform travel survey data.table to a survey object — hts_to_so","text":"prepped_dt Dataframe data.table format transform survey object. weighted true creates weighted survey object. Default TRUE. wtname Name weight column dataframe. Defaults NULL, must exist weighted true. strataname Name strata name bring . Default NULL.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_to_so.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform travel survey data.table to a survey object — hts_to_so","text":"Inputted dataframe transformed survey object.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_to_so.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform travel survey data.table to a survey object — hts_to_so","text":"","code":"require(data.table) hts_to_so(prepped_dt = trip, wtname = \"trip_weight\") #> Independent Sampling design (with replacement) #> Called via srvyr #> Sampling variables: #>  - ids: `1` #>  - weights: weight #> Data variables: day_id (int), trip_id (int), speed_mph (dbl), distance_miles #>   (dbl), mode_type (int), mode_1 (int), mode_2 (int), num_travelers (int), #>   d_purpose_category (int), hh_id (int), person_id (int), travel_date (date), #>   weight (int)"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_trip_vehid.html","id":null,"dir":"Reference","previous_headings":"","what":"Add vehicle_id to trip table — hts_trip_vehid","title":"Add vehicle_id to trip table — hts_trip_vehid","text":"Add vehicle_id trip table","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_trip_vehid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add vehicle_id to trip table — hts_trip_vehid","text":"","code":"hts_trip_vehid(   trip_table,   vehicle_table,   vehicle_mode_type = \"Vehicle\",   values_dt = value_labels,   ... )"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_trip_vehid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add vehicle_id to trip table — hts_trip_vehid","text":"trip_table Dataset trips data.table format. vehicle_table Dataset vehicles data.table format. vehicle_mode_type Mode type label vehicle. Default 'Vehicle'. values_dt Dataset value labels data.table format. ... Additional arguments passed link{factorize_column}","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_trip_vehid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add vehicle_id to trip table — hts_trip_vehid","text":"Trip table vehicle_id attached.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_trip_vehid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add vehicle_id to trip table — hts_trip_vehid","text":"","code":"require(data.table) trip_ex = data.table(   hh_id = sample(1:10, size = 30, replace = TRUE),   trip_id = 1:30,   mode_type = sample(1:2, size = 30, replace = TRUE),   mode_1 = sample(1, size = 30, replace = TRUE) ) vehicle_ex = data.table(   hh_id = sample(1:10, size = 30, replace = TRUE),   vehicle_id = 1:30 ) values_ex = data.table(   variable = c(rep(\"mode_type\", 2), (\"mode_1\")),   value = c(1, 2, 1),   value_label = c(\"Vehicle\", \"Walk\", \"Car\") ) hts_trip_vehid(   trip_table = trip_ex,   vehicle_table = vehicle_ex,   vehicle_mode_type = \"Vehicle\",   values_dt = values_ex ) #>     hh_id trip_id mode_type mode_1 vehicle_id #>  1:     5       1         1      1       <NA> #>  2:     8       2         2      1       <NA> #>  3:     3       3         2      1       <NA> #>  4:     3       4         1      1       <NA> #>  5:     7       5         1      1       <NA> #>  6:     1       6         2      1       <NA> #>  7:     2       7         1      1       <NA> #>  8:     2       8         2      1       <NA> #>  9:     8       9         2      1       <NA> #> 10:     1      10         1      1       <NA> #> 11:     6      11         2      1       <NA> #> 12:     6      12         2      1       <NA> #> 13:     5      13         1      1       <NA> #> 14:     3      14         2      1       <NA> #> 15:     8      15         1      1       <NA> #> 16:    10      16         2      1       <NA> #> 17:     9      17         2      1       <NA> #> 18:     1      18         2      1       <NA> #> 19:     1      19         1      1       <NA> #> 20:     4      20         2      1       <NA> #> 21:     4      21         1      1       <NA> #> 22:     6      22         1      1       <NA> #> 23:     1      23         2      1       <NA> #> 24:     7      24         1      1       <NA> #> 25:     6      25         1      1       <NA> #> 26:     1      26         2      1       <NA> #> 27:     5      27         2      1       <NA> #> 28:     7      28         1      1       <NA> #> 29:     6      29         1      1       <NA> #> 30:     4      30         2      1       <NA> #>     hh_id trip_id mode_type mode_1 vehicle_id"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_validate_variable_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that variable list has required elements for hts_prep_variable returns updated variable list or prompts error — hts_validate_variable_list","title":"Check that variable list has required elements for hts_prep_variable returns updated variable list or prompts error — hts_validate_variable_list","text":"Check variable list required elements hts_prep_variable returns updated variable list prompts error","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_validate_variable_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that variable list has required elements for hts_prep_variable returns updated variable list or prompts error — hts_validate_variable_list","text":"","code":"hts_validate_variable_list(variable_list, hts_data)"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_validate_variable_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that variable list has required elements for hts_prep_variable returns updated variable list or prompts error — hts_validate_variable_list","text":"variable_list Name variable summarize. Default NULL hts_data List named tables specified hts_prep_variable","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_validate_variable_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check that variable list has required elements for hts_prep_variable returns updated variable list or prompts error — hts_validate_variable_list","text":"Cleaned variable_list","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/hts_validate_variable_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check that variable list has required elements for hts_prep_variable returns updated variable list or prompts error — hts_validate_variable_list","text":"","code":"hts_validate_variable_list(variable_list, test_data) #>               variable is_checkbox           data_type #>  1:                age           0         categorical #>  2:          begin_day           0         categorical #>  3: d_purpose_category           0         categorical #>  4:             day_id           0             numeric #>  5:         day_weight           0             integer #>  6:         delivery_2           1 integer/categorical #>  7:         delivery_3           1 integer/categorical #>  8:         delivery_4           1 integer/categorical #>  9:         delivery_5           1 integer/categorical #> 10:         delivery_6           1 integer/categorical #> 11:         delivery_7           1 integer/categorical #> 12:         delivery_8           1 integer/categorical #> 13:       delivery_996           1 integer/categorical #> 14:     distance_miles           0             numeric #> 15:          education           0         categorical #> 16:         employment           0         categorical #> 17:            end_day           0         categorical #> 18:        ethnicity_1           1 integer/categorical #> 19:        ethnicity_2           1 integer/categorical #> 20:        ethnicity_3           1 integer/categorical #> 21:        ethnicity_4           1 integer/categorical #> 22:      ethnicity_997           1 integer/categorical #> 23:      ethnicity_999           1 integer/categorical #> 24:          fuel_type           0         categorical #> 25:             gender           0         categorical #> 26:              hh_id           0             integer #> 27:          hh_weight           0             integer #> 28:        home_county           0           character #> 29:           home_lat           0             numeric #> 30:           home_lon           0             numeric #> 31:    income_detailed           0         categorical #> 32:    income_followup           0         categorical #> 33:           job_type           0         categorical #> 34:             mode_1           0 integer/categorical #> 35:             mode_2           0 integer/categorical #> 36:          mode_type           0         categorical #> 37:         num_people           0             numeric #> 38:      num_travelers           0         categorical #> 39:          num_trips           0             numeric #> 40:          person_id           0             numeric #> 41:      person_weight           0             integer #> 42:             race_1           1 integer/categorical #> 43:             race_2           1 integer/categorical #> 44:             race_3           1 integer/categorical #> 45:             race_4           1 integer/categorical #> 46:             race_5           1 integer/categorical #> 47:           race_997           1 integer/categorical #> 48:           race_999           1 integer/categorical #> 49:     residence_type           0         categorical #> 50:     sample_segment           0         categorical #> 51:          speed_mph           0             numeric #> 52:        travel_date           0                date #> 53:            trip_id           0             numeric #> 54:        trip_weight           0             integer #> 55:         vehicle_id           0             numeric #>               variable is_checkbox           data_type #>                                                                                              description #>  1:                                                                              Age of household member #>  2:                                                                    Where participant began their day #>  3:                                                                         Destination purpose category #>  4:                                                                                               Day ID #>  5:                                                                                           Day weight #>  6:                                           Type of delivery: Take-out/prepared food delivered to home #>  7:            Type of delivery: Someone came to do work at home (e.g., babysitter, housecleaning, lawn) #>  8:                                                        Type of delivery: Groceries delivered to home #>  9:                                 Type of delivery: Received packages at home (e.g., USPS, FedEx, UPS) #> 10:                                                 Type of delivery: Received personal packages at work #> 11: Type of delivery: Received packages at another location (e.g., Amazon Locker, package pick-up point) #> 12:                                     Type of delivery: Other item delivered to home (e.g., appliance) #> 13:                                                                  Type of delivery: None of the above #> 14:                                                                                     Distance (miles) #> 15:                                                                 Highest level of education completed #> 16:                                                                                    Employment status #> 17:                                                                    Where participant emded their day #> 18:                                                Ethnicity: Not of Hispanic, Latino, or Spanish origin #> 19:                                                        Ethnicity: Mexican, Mexican American, Chicano #> 20:                                                                              Ethnicity: Puerto Rican #> 21:                                                                                     Ethnicity: Cuban #> 22:                                               Ethnicity: Another Hispanic, Latino, or Spanish origin #> 23:                                                                      Ethnicity: Prefer not to answer #> 24:                                                                                    Vehicle fuel type #> 25:                                                                                               Gender #> 26:                                                                                         Household ID #> 27:                                                                                     Household weight #> 28:                                                                               Home location-- County #> 29:                                                                             Home location-- Latitude #> 30:                                                                            Home location-- Longitude #> 31:                                                   Last year's household income (detailed categories) #> 32:                                                      Last year's household income (broad categories) #> 33:                                                                                   Work location type #> 34:                                                                                          Trip mode 1 #> 35:                                                                                          Trip mode 2 #> 36:                                                                                            Mode type #> 37:                                                                          Number of household members #> 38:                                                                     Number of people in travel party #> 39:                                                                                      Number of trips #> 40:                                                                                            Person ID #> 41:                                                                                        Person weight #> 42:                                                                      Race: African American or Black #> 43:                                                               Race: American Indian or Alaska Native #> 44:                                                                                          Race: Asian #> 45:                                                      Race: Native Hawaiian or other Pacific Islander #> 46:                                                                                          Race: White #> 47:                                                                                     Race: Other race #> 48:                                                                           Race: Prefer not to answer #> 49:                                                                            Type of current residence #> 50:                                                                                       Sample segment #> 51:                                                                                          Speed (mph) #> 52:                                                                                          Travel date #> 53:                                                                                              Trip ID #> 54:                                                                                          Trip weight #> 55:                                                                                           Vehicle ID #>                                                                                              description #>            shared_name hh person day trip vehicle #>  1:                age  0      1   0    0       0 #>  2:          begin_day  0      0   1    0       0 #>  3: d_purpose_category  0      0   0    1       0 #>  4:             day_id  0      0   1    1       0 #>  5:         day_weight  0      0   1    0       0 #>  6:           delivery  0      0   1    0       0 #>  7:           delivery  0      0   1    0       0 #>  8:           delivery  0      0   1    0       0 #>  9:           delivery  0      0   1    0       0 #> 10:           delivery  0      0   1    0       0 #> 11:           delivery  0      0   1    0       0 #> 12:           delivery  0      0   1    0       0 #> 13:           delivery  0      0   1    0       0 #> 14:     distance_miles  0      0   0    1       0 #> 15:          education  0      1   0    0       0 #> 16:         employment  0      1   0    0       0 #> 17:            end_day  0      0   1    0       0 #> 18:          ethnicity  0      1   0    0       0 #> 19:          ethnicity  0      1   0    0       0 #> 20:          ethnicity  0      1   0    0       0 #> 21:          ethnicity  0      1   0    0       0 #> 22:          ethnicity  0      1   0    0       0 #> 23:          ethnicity  0      1   0    0       0 #> 24:          fuel_type  0      0   0    0       1 #> 25:             gender  0      1   0    0       0 #> 26:              hh_id  1      1   1    1       1 #> 27:          hh_weight  1      0   0    0       0 #> 28:        home_county  1      0   0    0       0 #> 29:           home_lat  1      0   0    0       0 #> 30:           home_lon  1      0   0    0       0 #> 31:    income_detailed  1      0   0    0       0 #> 32:    income_followup  1      0   0    0       0 #> 33:           job_type  0      1   0    0       0 #> 34:             mode_1  0      0   0    1       0 #> 35:             mode_2  0      0   0    1       0 #> 36:          mode_type  0      0   0    1       0 #> 37:         num_people  1      0   0    0       0 #> 38:      num_travelers  0      0   0    1       0 #> 39:          num_trips  1      1   1    0       0 #> 40:          person_id  0      1   1    1       0 #> 41:      person_weight  0      1   0    0       0 #> 42:               race  0      1   0    0       0 #> 43:               race  0      1   0    0       0 #> 44:               race  0      1   0    0       0 #> 45:               race  0      1   0    0       0 #> 46:               race  0      1   0    0       0 #> 47:               race  0      1   0    0       0 #> 48:               race  0      1   0    0       0 #> 49:     residence_type  1      0   0    0       0 #> 50:     sample_segment  1      0   0    0       0 #> 51:          speed_mph  0      0   0    1       0 #> 52:        travel_date  0      0   1    1       0 #> 53:            trip_id  0      0   0    1       0 #> 54:        trip_weight  0      0   0    1       0 #> 55:         vehicle_id  0      0   0    0       1 #>            shared_name hh person day trip vehicle"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/join_spatial.html","id":null,"dir":"Reference","previous_headings":"","what":"Join spatial data to points — join_spatial","title":"Join spatial data to points — join_spatial","text":"Performs spatial join obtain geographic fields specified lon/lat columns.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/join_spatial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join spatial data to points — join_spatial","text":"","code":"join_spatial(   x,   y,   id_col,   lon_col,   lat_col,   crs_lonlat = 4326,   crs_equal_area = 5070,   largest = FALSE )"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/join_spatial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join spatial data to points — join_spatial","text":"x data.table survey data y sf object geometry interest id_col character. column x unique identifier lon_col character. column x longitude lat_col character.  column x latitude crs_lonlat numeric.  EPSG code lonlat data (defaults WGS84) crs_equal_area numeric.  EPSG code equal area projection. Many spatial operations assume projected data (lon/lat).  Defaults US Albers Equal Area largest logical.  TRUE, return x features fields y largest overlap features x; see st_join. useful join returning one value y x.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/join_spatial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join spatial data to points — join_spatial","text":"data.table returned columns x plus columns y.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/join_spatial.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Join spatial data to points — join_spatial","text":"Matt Landis","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/join_spatial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Join spatial data to points — join_spatial","text":"","code":"if (FALSE) { x = data.table(id = 1:3, lon = c(-82.33, -79.17, -76.17), lat = c(35.50, 36.27, 36.49)) nc = st_read(system.file(\"shape/nc.shp\", package = \"sf\"))[, c(\"FIPS\", \"NAME\", \"geometry\")] z = join_spatial(x, nc, id_col = \"id\", lon_col = \"lon\", lat_col = \"lat\") z }"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/person.html","id":null,"dir":"Reference","previous_headings":"","what":"Test person dataset — person","title":"Test person dataset — person","text":"dataset containing person level attributes almost 2,000 persons 2023 Puget Sound Regional Council Household Travel Survey. variables follows:","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/person.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test person dataset — person","text":"","code":"person"},{"path":[]},{"path":"https://rsginc.github.io/travelSurveyTools/reference/person.html","id":"person","dir":"Reference","previous_headings":"","what":"person","title":"Test person dataset — person","text":"data frame 1,999 rows 19 columns: hh_id 8 digit household ID person_id 10 digit person ID ethnicity_1 Hispnic, Latino, Spanish origin, response codes ethnicity_2 Mexican, Mexican American, Chicano, response codes ethnicity_3 Puerto Rican, response codes ethnicity_4 Cuban, response codes ethnicity_997 Another Hispanic, Latino, Spanish origin, response codes ethnicity_999 Prefer answer, response codes race_1 African American Black, response codes race_2 Americian Indian Alaska Native, response codes race_3 Asian, response codes race_4 Native Hawaiian Pacific Islander, response codes race_5 White, response codes race_997 race, response codes race_999 Prefer answer, response codes age Age, response codes gender Gender, response codes employment Employment status, response codes education Highest level education completed, response codes","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/person.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Test person dataset — person","text":"Export tables compiled internal RSG database 11/22/2023","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://rsginc.github.io/travelSurveyTools/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/test_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Test household travel survey dataset — test_data","title":"Test household travel survey dataset — test_data","text":"Test household travel survey dataset","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/test_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test household travel survey dataset — test_data","text":"","code":"test_data"},{"path":[]},{"path":"https://rsginc.github.io/travelSurveyTools/reference/test_data.html","id":"test-data","dir":"Reference","previous_headings":"","what":"test_data","title":"Test household travel survey dataset — test_data","text":"list containing following datasets:","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/test_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Test household travel survey dataset — test_data","text":"list export tables compiled internal RSG database 11/22/2023","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/trip.html","id":null,"dir":"Reference","previous_headings":"","what":"Test trip dataset — trip","title":"Test trip dataset — trip","text":"dataset containing attributes 20,000 trips 2023 Puget Sound Regional Council Household Travel Survey. variables follows:","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/trip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test trip dataset — trip","text":"","code":"trip"},{"path":[]},{"path":"https://rsginc.github.io/travelSurveyTools/reference/trip.html","id":"trip","dir":"Reference","previous_headings":"","what":"trip","title":"Test trip dataset — trip","text":"data frame 21,378 rows 7 columns: hh_id 8 digit household ID person_id 10 digit person ID day_id 12 digit day ID trip_id 13 digit trip ID travel_date Date trip mode_type Type transportation used trip, response codes d_purpose_category Purpose taking trip destination, response codes","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/trip.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Test trip dataset — trip","text":"Export tables compiled internal RSG database 11/22/2023","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/value_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"List of values and their labels — value_labels","title":"List of values and their labels — value_labels","text":"dataset containing values variables found variable_list variables follows:","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/value_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of values and their labels — value_labels","text":"","code":"value_labels"},{"path":[]},{"path":"https://rsginc.github.io/travelSurveyTools/reference/value_labels.html","id":"value-labels","dir":"Reference","previous_headings":"","what":"value_labels","title":"List of values and their labels — value_labels","text":"data frame 210 rows 3 columns: variable Name variable value numeric value variable label numeric value variable represents","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/variable_list.html","id":null,"dir":"Reference","previous_headings":"","what":"List of variables — variable_list","title":"List of variables — variable_list","text":"dataset containing information variables data. must contain one binary column indicating table location table data (ie., hh, person, day, trip, vehicle).","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/variable_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of variables — variable_list","text":"","code":"variable_list"},{"path":[]},{"path":"https://rsginc.github.io/travelSurveyTools/reference/variable_list.html","id":"variable-list","dir":"Reference","previous_headings":"","what":"variable_list","title":"List of variables — variable_list","text":"data frame 55 rows 10 columns: variable Name variable is_checkbox variable multiple response categorical variable question hh variable exists hh table person variable exists person table day variable exists day table trip variable exists trip table vehicle variable exists vehicle table data_type Data type variable (\"iteger/categorical\", \"numeric\", \"character\") description description variable shared_name Shared part name checkbox variable (e.g., race_1 -> race) variable name (e.g., age -> age)","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/vehicle.html","id":null,"dir":"Reference","previous_headings":"","what":"Test vehicle dataset — vehicle","title":"Test vehicle dataset — vehicle","text":"dataset containing attributes 6,500 vehicles 2023 Puget Sound Regional Council Household Travel Survey. variables follows:","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/vehicle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test vehicle dataset — vehicle","text":"","code":"vehicle"},{"path":[]},{"path":"https://rsginc.github.io/travelSurveyTools/reference/vehicle.html","id":"vehicle","dir":"Reference","previous_headings":"","what":"vehicle","title":"Test vehicle dataset — vehicle","text":"data frame 1,366 rows 3 columns: hh_id 8 digit household ID vehicle_id 10 digit vehicle ID fuel_type Type fuel taken vehicle, response codes","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/reference/vehicle.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Test vehicle dataset — vehicle","text":"Export tables compiled internal RSG database 11/22/2023","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/news/index.html","id":"travelsurveytools-242","dir":"Changelog","previous_headings":"","what":"travelSurveyTools 2.4.2","title":"travelSurveyTools 2.4.2","text":"Add summarize_var summarize_by output. Select weight automatically hts_summary_wrapper","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/news/index.html","id":"travelsurveytools-241","dir":"Changelog","previous_headings":"","what":"travelSurveyTools 2.4.1","title":"travelSurveyTools 2.4.1","text":"Factorize outputs hts_summary_wrapper","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/news/index.html","id":"travelsurveytools-240","dir":"Changelog","previous_headings":"","what":"travelSurveyTools 2.4.0","title":"travelSurveyTools 2.4.0","text":"Add wrapper function 'hts_summary_wrapper run hts_prep_triprate/variable hts_summary","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/news/index.html","id":"travelsurveytools-238","dir":"Changelog","previous_headings":"","what":"travelSurveyTools 2.3.8","title":"travelSurveyTools 2.3.8","text":"Fix join hts_prep_triprate properly count days summarize_by trip variable.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/news/index.html","id":"travelsurveytools-238-1","dir":"Changelog","previous_headings":"","what":"travelSurveyTools 2.3.8","title":"travelSurveyTools 2.3.8","text":"Add column hts_prep_triprate weighted trip count.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/news/index.html","id":"travelsurveytools-236","dir":"Changelog","previous_headings":"","what":"travelSurveyTools 2.3.6","title":"travelSurveyTools 2.3.6","text":"Fixing hts_prep_triprate properly calculate days zero trips.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/news/index.html","id":"travelsurveytools-236-1","dir":"Changelog","previous_headings":"","what":"travelSurveyTools 2.3.6","title":"travelSurveyTools 2.3.6","text":"Fixing bug hts_prep_triprate variables appear trip day tables.","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/news/index.html","id":"travelsurveytools-235","dir":"Changelog","previous_headings":"","what":"travelSurveyTools 2.3.5","title":"travelSurveyTools 2.3.5","text":"Change name hts_prep_data hts_prep_variable","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/news/index.html","id":"travelsurveytools-234","dir":"Changelog","previous_headings":"","what":"travelSurveyTools 2.3.4","title":"travelSurveyTools 2.3.4","text":"Fixing error hts_prep_triprate weight columns weren’t passed hts_prep_byvar","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/news/index.html","id":"travelsurveytools-233","dir":"Changelog","previous_headings":"","what":"travelSurveyTools 2.3.3","title":"travelSurveyTools 2.3.3","text":"Small updates DESCRIPTION","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/news/index.html","id":"travelsurveytools-232","dir":"Changelog","previous_headings":"","what":"travelSurveyTools 2.3.2","title":"travelSurveyTools 2.3.2","text":"Additional steps ensure anonymity test data","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/news/index.html","id":"travelsurveytools-231","dir":"Changelog","previous_headings":"","what":"travelSurveyTools 2.3.1","title":"travelSurveyTools 2.3.1","text":"Add citation file","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/news/index.html","id":"travelsurveytools-230","dir":"Changelog","previous_headings":"","what":"travelSurveyTools 2.3.0","title":"travelSurveyTools 2.3.0","text":"Set missing weights 0","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/news/index.html","id":"travelsurveytools-220","dir":"Changelog","previous_headings":"","what":"travelSurveyTools 2.2.0","title":"travelSurveyTools 2.2.0","text":"Add example using year getting_started vignette","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/news/index.html","id":"travelsurveytools-210","dir":"Changelog","previous_headings":"","what":"travelSurveyTools 2.1.0","title":"travelSurveyTools 2.1.0","text":"Fix bug checkbox variable proportions (hts_summary_cat)","code":""},{"path":"https://rsginc.github.io/travelSurveyTools/news/index.html","id":"travelsurveytools-200","dir":"Changelog","previous_headings":"","what":"travelSurveyTools 2.0.0","title":"travelSurveyTools 2.0.0","text":"Add function check variable_list (hts_validate_variable_list)","code":""},{"path":[]},{"path":"https://rsginc.github.io/travelSurveyTools/news/index.html","id":"travelsurveytools-09","dir":"Changelog","previous_headings":"","what":"travelSurveyTools 0.9","title":"travelSurveyTools 0.9","text":"adding changelog file Initial CRAN submission.","code":""}]
